var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/classes/AccountDto.html",[0,0.158,1,2.087]],["body/classes/AccountDto.html",[0,0.202,1,3.345,2,3.007,3,0.225,4,0.179,5,0.202,6,4.246,7,0.733,8,1.756,9,4.139,10,5.845,11,4.796,12,6.758,13,4.437,14,6.758,15,4.796,16,1.298,17,0.016,18,2.932,19,1.826,20,4.909,21,2.852,22,4.909,23,4.909,24,7.092,25,4.909,26,4.909,27,4.909,28,4.909,29,0.225,30,0.01,31,0.012,32,0.01]],["title/components/AccountLoginFormComponent.html",[33,0.335,34,1.052]],["body/components/AccountLoginFormComponent.html",[0,0.112,3,0.125,4,0.1,5,0.112,7,0.409,8,1.172,16,0.945,17,0.016,19,1.498,29,0.125,30,0.006,31,0.008,32,0.006,33,0.431,34,1.504,35,0.914,36,0.846,37,1.264,38,0.846,39,0.846,40,5.003,41,1.856,42,5.003,43,1.798,44,2.002,45,3.516,46,0.811,47,1.273,48,1.273,49,1.273,50,1.273,51,2.175,52,1.571,53,3.621,54,1.903,55,3.516,56,1.328,57,2.924,58,1.172,59,3.912,60,3.912,61,2.524,62,2.706,63,4.196,64,0.846,65,1.943,66,3.912,67,3.564,68,1.172,69,1.059,70,1.124,71,2.924,72,3.253,73,2.368,74,1.352,75,2.378,76,2.368,77,2.924,78,3.62,79,2.738,80,3.516,81,2.368,82,0.377,83,0.846,84,2.706,85,0.846,86,0.269,87,1.798,88,1.483,89,1.677,90,2.368,91,1.402,92,1.096,93,0.92,94,0.779,95,1.943,96,1.943,97,1.943,98,2.924,99,2.125,100,2.125,101,2.368,102,2.368,103,2.368,104,2.368,105,0.877,106,2.125,107,1.943,108,1.943,109,1.943,110,1.943,111,1.798,112,2.111,113,1.677,114,2.125,115,1.677,116,1.573,117,1.798,118,0.583,119,1.273,120,1.221,121,0.66,122,1.703,123,0.846,124,1.703,125,0.717,126,1.827,127,0.747,128,1.124,129,0.717,130,0.688,131,0.846,132,0.717,133,0.779,134,0.558,135,1.841,136,0.846,137,0.583,138,0.583,139,0.811,140,0.846,141,0.583,142,1.409,143,0.846,144,0.583,145,0.846,146,0.583,147,0.846,148,0.747,149,1.568,150,0.846,151,0.747,152,0.811,153,1.531,154,0.717,155,0.747,156,0.811,157,0.747,158,1.504,159,0.747,160,0.747,161,0.747,162,0.717,163,0.846,164,0.811,165,0.66,166,0.779,167,0.846]],["title/components/AccountLoginRootComponent.html",[33,0.335,125,1.009]],["body/components/AccountLoginRootComponent.html",[0,0.12,3,0.134,4,0.106,5,0.12,7,0.436,8,1.228,16,0.74,17,0.016,19,1.241,29,0.134,30,0.006,31,0.009,32,0.006,33,0.447,34,0.796,35,0.958,36,0.901,37,1.346,38,0.901,39,0.901,41,1.81,46,0.864,47,1.335,48,1.335,49,1.335,50,1.335,51,2.191,52,1.614,54,1.994,56,1.392,58,1.228,61,2.646,64,0.901,68,1.228,69,1.088,70,1.179,74,0.796,75,1.654,82,0.462,83,0.901,85,0.901,86,0.287,89,3.484,90,2.522,91,2.212,92,1.73,93,0.98,94,0.829,105,0.621,112,1.494,115,1.786,117,1.915,118,0.621,119,1.335,120,1.28,121,0.703,122,1.757,123,0.901,124,1.757,125,1.489,126,1.876,127,0.796,128,1.552,129,0.764,130,0.733,131,0.901,132,0.764,133,0.829,134,0.595,135,1.885,136,0.901,137,0.621,138,0.621,139,0.864,140,0.901,141,0.621,142,1.463,143,0.901,144,0.621,145,0.901,146,0.621,147,0.901,148,0.796,149,1.617,150,0.901,151,0.796,152,1.28,153,1.59,154,0.764,155,0.796,156,0.864,157,0.796,158,1.552,159,0.796,160,0.796,161,0.796,162,0.764,163,1.59,164,0.864,165,0.703,166,0.829,167,0.901,168,4.414,169,4.414,170,1.676,171,3.993,172,2.646,173,5.253,174,1.417,175,2.231,176,3.736,177,3.736,178,2.522,179,1.579,180,1.346,181,3.378,182,2.836,183,1.282,184,1.579,185,1.282,186,1.417,187,2.522,188,2.522,189,2.522,190,2.07,191,2.07,192,2.522,193,0.901,194,2.07,195,3.736,196,2.916,197,2.916,198,2.522,199,2.263,200,2.522,201,3.352,202,3.352,203,3.352,204,2.263,205,2.916]],["title/modules/AccountModule.html",[206,1.052,207,2.735]],["body/modules/AccountModule.html",[0,0.157,3,0.175,4,0.14,5,0.157,17,0.016,29,0.24,30,0.008,31,0.011,32,0.008,35,1.328,52,0.815,82,0.572,86,0.377,88,2.075,118,0.815,134,1.313,137,1.37,138,1.37,141,1.37,144,1.37,146,1.37,206,1.046,207,5.581,208,1.288,209,1.769,210,2.973,211,1.769,212,2.632,213,1.534,214,3.314,215,3.314,216,3.314,217,4.265,218,4.002,219,2.688,220,1.963,221,1.685,222,2.974,223,2.397,224,3.214,225,2.075,226,2.201,227,4.073,228,4.073,229,3.446,230,3.724,231,4.073,232,4.073,233,2.347,234,2.516,235,2.516,236,3.44,237,3.214,238,3.314,239,3.214,240,3.314,241,2.632,242,2.074,243,3.016]],["title/components/AccountRegisterFormComponent.html",[33,0.335,127,1.052]],["body/components/AccountRegisterFormComponent.html",[0,0.108,3,0.12,4,0.095,5,0.108,7,0.391,8,1.133,13,1.72,16,0.924,17,0.016,19,1.473,29,0.12,30,0.005,31,0.008,32,0.005,33,0.419,34,0.715,35,0.884,36,0.809,37,1.209,38,0.809,39,0.809,40,4.927,41,1.163,42,4.927,43,1.72,44,1.935,45,3.422,46,0.776,47,1.231,48,1.231,49,1.231,50,1.231,51,2.163,52,1.58,53,3.551,54,1.84,55,3.422,56,1.284,57,2.827,58,1.133,59,3.825,60,3.825,61,2.44,62,2.616,63,4.115,64,0.809,65,1.858,66,3.825,68,1.133,69,1.201,70,1.087,71,2.827,72,3.167,74,1.316,75,2.338,77,2.827,78,3.539,80,3.422,82,0.41,83,0.809,84,2.616,85,0.809,86,0.257,87,1.72,88,1.418,91,1.341,92,1.049,93,0.88,94,0.745,95,1.858,96,1.858,97,1.858,98,3.422,99,3.092,100,3.092,101,2.265,102,2.265,103,2.265,104,2.265,105,0.848,106,3.092,107,2.827,108,1.858,109,1.858,110,1.858,111,1.72,112,2.041,113,1.604,114,2.032,115,1.604,116,1.505,117,1.72,118,0.557,119,1.231,120,1.181,121,0.631,122,1.665,123,0.809,124,1.665,125,0.686,126,1.791,127,1.471,128,2.083,129,0.686,130,0.658,131,0.809,132,0.686,133,0.745,134,0.534,135,1.81,136,0.809,137,0.557,138,0.557,139,0.776,140,0.809,141,0.557,142,1.371,143,0.809,144,0.557,145,0.809,146,0.557,147,0.809,148,0.715,149,1.533,150,0.809,151,0.715,152,0.776,153,1.49,154,0.686,155,0.715,156,0.776,157,0.715,158,1.471,159,0.715,160,0.715,161,0.715,162,0.686,163,0.809,164,0.776,165,0.631,166,0.745,167,0.809,234,1.72,244,3.446,245,2.265,246,2.265,247,2.619,248,2.265,249,1.418,250,1.858,251,1.72,252,1.72,253,2.265,254,1.72,255,2.265,256,2.265,257,2.616]],["title/components/AccountRegisterRootComponent.html",[33,0.335,129,1.009]],["body/components/AccountRegisterRootComponent.html",[0,0.119,3,0.133,4,0.106,5,0.119,7,0.434,8,1.225,16,0.739,17,0.016,19,1.238,29,0.133,30,0.006,31,0.009,32,0.006,33,0.446,34,0.793,35,0.956,36,0.898,37,1.342,38,0.898,39,0.898,41,1.039,46,0.861,47,1.331,48,1.331,49,1.331,50,1.331,51,2.19,52,1.613,54,1.989,56,1.388,58,1.225,61,2.639,64,0.898,68,1.225,69,1.087,70,1.176,74,0.793,75,1.65,82,0.461,83,0.898,85,0.898,86,0.286,91,2.207,92,1.726,93,0.977,94,0.827,105,0.618,112,1.489,115,1.78,117,1.908,118,0.618,119,1.331,120,1.277,121,0.701,122,1.755,123,0.898,124,1.755,125,0.761,126,1.874,127,0.793,128,2.047,129,1.487,130,0.73,131,0.898,132,0.761,133,0.827,134,0.593,135,1.883,136,0.898,137,0.618,138,0.618,139,0.861,140,0.898,141,0.618,142,1.46,143,0.898,144,0.618,145,0.898,146,0.618,147,0.898,148,0.793,149,1.615,150,0.898,151,0.793,152,1.277,153,1.586,154,0.761,155,0.793,156,0.861,157,0.793,158,1.55,159,0.793,160,0.793,161,0.793,162,0.761,163,1.586,164,0.861,165,0.701,166,0.827,167,0.898,168,4.407,169,4.407,170,1.67,171,3.985,172,2.639,173,5.245,174,1.412,175,2.228,176,3.727,177,3.727,178,2.514,179,1.574,180,1.342,181,3.371,182,2.829,183,1.278,184,1.574,185,1.278,186,1.412,187,2.514,188,2.514,190,2.063,191,2.063,192,2.514,193,0.898,194,2.063,195,3.727,198,2.514,199,2.256,200,2.514,201,3.344,202,3.344,203,3.344,204,2.256,249,3.076,250,2.063,258,2.514,259,4.309,260,4.309,261,3.058,262,2.906]],["title/modules/AccountRoutingModule.html",[206,1.052,217,2.36]],["body/modules/AccountRoutingModule.html",[0,0.203,3,0.226,4,0.18,5,0.203,17,0.016,29,0.226,30,0.01,31,0.012,32,0.01,33,0.539,41,1.19,82,0.557,86,0.485,125,1.623,128,1.347,129,1.623,208,1.659,213,1.977,217,3.796,223,1.977,226,2.599,237,3.796,238,4.27,239,3.796,240,4.27,241,2.171,242,1.591,263,4.937,264,3.242,265,4.07,266,3.67,267,2.28,268,4.084,269,4.07,270,4.27,271,3.831,272,3.504]],["title/injectables/AccountService.html",[175,1.352,273,1.412]],["body/injectables/AccountService.html",[0,0.105,3,0.217,4,0.093,5,0.105,7,0.38,8,1.109,16,1.112,17,0.016,18,0.975,19,1.727,29,0.117,30,0.005,31,0.008,32,0.005,41,1.281,52,0.83,58,1.109,64,0.787,68,1.628,69,1.026,70,1.563,74,1.563,75,2.033,82,0.505,86,0.25,89,3.253,91,2.721,92,2.293,93,0.856,94,2.056,105,0.542,128,1.064,175,1.368,179,2.567,180,2.188,183,1.12,184,1.379,185,1.12,189,3.373,191,1.807,193,1.866,249,2.877,252,2.561,258,3.373,267,1.176,268,2.724,271,4.122,273,1.429,274,1.672,275,2.202,276,3.178,277,4.739,278,6.04,279,3.363,280,4.739,281,3.9,282,3.9,283,2.388,284,5.174,285,4.739,286,2.202,287,3.769,288,4.739,289,5.311,290,4.128,291,3.9,292,2.561,293,3.9,294,2.546,295,2.546,296,2.546,297,3.675,298,2.546,299,2.546,300,3.9,301,2.546,302,4.739,303,2.546,304,2.546,305,2.546,306,3.373,307,3.9,308,2.546,309,3.9,310,2.546,311,2.546,312,2.546,313,2.546,314,1.379,315,1.672,316,1.304,317,1.463,318,2.546,319,2.546,320,2.546,321,2.546,322,5.726,323,2.546,324,2.546,325,2.546,326,1.379,327,2.546,328,2.546,329,3.373,330,2.202,331,3.678,332,3.373,333,3.9,334,2.546,335,2.202,336,2.546,337,2.546,338,2.546,339,1.463,340,2.546,341,2.546,342,2.546,343,2.546,344,2.546,345,2.546,346,2.546,347,1.807,348,2.546,349,2.546,350,2.546,351,2.546,352,2.202,353,2.546,354,2.546,355,2.546]],["title/components/AppComponent.html",[33,0.335,130,0.968]],["body/components/AppComponent.html",[0,0.164,3,0.183,4,0.146,5,0.164,17,0.015,29,0.183,30,0.008,31,0.011,32,0.008,33,0.532,34,1.091,35,1.199,36,1.669,38,1.235,39,1.235,41,1.303,46,1.185,47,1.669,48,1.669,49,1.669,50,1.669,51,2.261,52,1.534,69,1.096,82,0.304,83,1.235,85,1.235,86,0.393,105,0.851,118,0.851,119,1.669,120,1.601,121,0.964,122,2.025,123,1.235,124,2.025,125,1.047,126,2.115,127,1.091,128,1.474,129,1.047,130,1.647,131,1.235,132,1.047,133,1.137,134,0.816,135,2.09,136,1.235,137,0.851,138,0.851,139,1.185,140,1.235,141,0.851,142,1.74,143,1.235,144,0.851,145,1.235,146,0.851,147,1.235,148,1.091,149,1.863,150,1.235,151,1.091,152,1.185,153,1.89,154,1.047,155,1.091,156,1.185,157,1.091,158,1.788,159,1.091,160,1.091,161,1.091,162,1.047,163,1.235,164,1.185,165,0.964,166,1.137,167,1.235,356,3.459,357,4.673]],["title/modules/AppModule.html",[206,1.052,358,2.735]],["body/modules/AppModule.html",[0,0.179,3,0.2,4,0.159,5,0.179,17,0.016,29,0.2,30,0.009,31,0.011,32,0.009,82,0.568,86,0.428,118,0.927,130,1.945,206,1.189,208,1.465,209,2.012,210,3.131,211,3.131,212,1.916,213,1.745,219,2.93,220,2.232,221,1.916,223,2.558,226,2.399,242,2.058,314,2.36,358,5.457,359,3.769,360,3.769,361,3.769,362,3.769,363,4.427,364,4.427,365,3.382,366,4.949,367,4.358,368,4.949,369,4.949,370,4.949,371,3.092,372,4.949,373,4.358,374,4.358,375,4.358,376,4.358]],["title/classes/AppPage.html",[0,0.158,377,2.991]],["body/classes/AppPage.html",[0,0.22,2,3.274,3,0.245,4,0.195,5,0.22,7,0.798,17,0.016,19,1.57,29,0.245,30,0.011,31,0.013,32,0.011,58,1.851,74,1.777,82,0.406,120,1.584,142,1.52,193,2.012,371,3.793,377,5.053,378,4.624,379,7.307,380,7.307,381,5.345,382,5.345,383,5.345,384,5.345,385,5.345,386,5.345,387,5.345]],["title/guards/AuthGuard.html",[388,2.735,389,2.36]],["body/guards/AuthGuard.html",[0,0.188,3,0.21,4,0.167,5,0.188,7,0.685,16,1.014,17,0.016,19,1.426,29,0.21,30,0.009,31,0.012,32,0.009,44,2.228,58,1.682,64,1.417,68,1.682,69,1.06,70,1.614,74,1.252,82,0.498,86,0.451,93,1.542,94,1.682,174,2.228,175,2.571,186,2.228,193,1.827,267,2.118,269,4.541,273,2.167,276,1.923,290,4.897,326,3.203,389,3.623,390,3.255,391,3.967,392,4.587,393,4.59,394,5.367,395,6.546,396,5.367,397,4.587,398,3.56,399,3.255,400,2.809,401,4.587,402,3.967,403,3.967,404,4.587,405,2.809]],["title/classes/AuthInfo.html",[0,0.158,284,2.735]],["body/classes/AuthInfo.html",[0,0.206,1,3.693,2,3.067,3,0.229,4,0.182,5,0.206,7,0.748,8,1.778,16,1.224,17,0.016,18,2.734,19,1.722,21,2.888,29,0.229,30,0.01,31,0.013,32,0.01,44,3.038,82,0.475,257,4.478,284,4.438,292,3.288,406,6.359,407,4.332,408,4.84,409,5.899,410,5.899,411,5.292,412,5.008,413,5.008,414,5.008,415,5.008,416,5.008,417,5.008]],["title/interceptors/AuthInterceptor.html",[418,2.991,419,2.531]],["body/interceptors/AuthInterceptor.html",[0,0.165,3,0.184,4,0.147,5,0.165,7,0.601,16,0.93,17,0.016,19,1.309,29,0.184,30,0.008,31,0.011,32,0.008,44,1.956,58,1.543,64,1.244,68,1.543,69,0.973,70,1.481,74,1.099,82,0.522,86,0.396,93,1.353,94,1.543,174,1.956,175,2.479,183,1.77,184,2.181,185,1.77,193,1.244,242,1.978,273,1.988,276,1.688,297,3.325,314,2.181,315,2.644,331,4.212,339,2.314,399,2.857,409,4.695,419,3.564,420,4.026,421,3.482,422,5.427,423,5.126,424,4.026,425,5.427,426,6.571,427,6.14,428,6.571,429,4.026,430,4.026,431,4.026,432,5.427,433,4.026,434,4.026,435,4.026,436,4.026,437,5.427,438,4.026,439,4.026,440,4.026,441,4.026,442,4.026,443,4.026,444,4.026,445,4.026,446,4.026,447,4.026,448,3.482,449,4.026,450,4.026,451,4.026,452,4.026,453,4.026]],["title/interfaces/AuthorizeAccountCommand.html",[89,2.36,454,1.191]],["body/interfaces/AuthorizeAccountCommand.html",[3,0.256,4,0.203,5,0.229,7,0.834,8,1.901,16,1.146,17,0.015,18,2.946,29,0.256,30,0.011,31,0.013,32,0.011,41,1.788,52,1.188,89,4.095,105,1.578,454,1.725,455,2.861,456,4.831,457,3.667]],["title/interfaces/CacheContent.html",[454,1.191,458,2.735]],["body/interfaces/CacheContent.html",[0,0.138,3,0.154,4,0.122,5,0.138,7,0.501,8,1.36,16,0.82,17,0.016,18,2.458,21,2.965,29,0.154,30,0.011,31,0.01,32,0.007,75,1.83,82,0.363,92,2.432,94,1.584,180,3.3,181,3.139,183,1.474,185,1.474,193,2.17,208,1.127,242,2.213,273,1.228,276,2.799,279,3.954,297,3.616,315,2.202,326,2.589,454,1.036,455,1.718,458,3.393,459,2.38,460,5.554,461,5.554,462,2.9,463,2.9,464,2.38,465,2.9,466,4.31,467,2.9,468,4.135,469,3.71,470,2.9,471,2.9,472,4.31,473,4.714,474,2.9,475,2.9,476,2.9,477,4.135,478,2.9,479,4.819,480,4.135,481,2.9,482,2.9,483,4.135,484,4.135,485,2.202,486,2.9,487,2.9,488,2.9,489,2.9,490,4.135,491,2.602,492,2.9,493,4.135,494,2.9,495,4.135,496,2.9,497,2.9,498,2.9,499,2.9,500,2.9,501,4.135,502,2.9,503,2.9,504,2.9,505,2.9,506,2.9,507,2.9,508,4.135,509,2.9,510,2.9,511,2.9,512,2.9,513,4.135,514,2.38,515,2.9,516,4.135,517,2.9,518,2.9,519,2.9,520,2.9]],["title/classes/CacheService.html",[0,0.158,466,2.735]],["body/classes/CacheService.html",[0,0.104,2,1.544,3,0.115,4,0.092,5,0.104,7,0.377,8,1.1,16,1.16,17,0.016,18,2.763,19,1.632,21,2.985,29,0.115,30,0.009,31,0.008,32,0.005,58,1.1,68,1.838,69,1.021,70,1.555,74,1.555,75,2.023,82,0.294,92,2.409,94,1.885,179,3.087,180,3.332,181,2.541,183,1.108,185,1.108,193,1.997,208,0.847,242,2.018,273,0.923,276,3.095,279,4.446,283,2.37,297,3.59,315,1.655,326,2.861,454,0.779,458,1.789,459,1.789,460,3.347,461,5.853,462,2.18,463,2.18,464,1.789,465,2.18,466,4.269,467,2.18,468,4.57,469,4.1,470,4.074,471,2.18,472,4.587,473,5.017,474,3.347,475,4.074,476,4.074,477,3.347,478,3.347,479,4.93,480,4.57,481,2.18,482,2.18,483,3.347,484,3.347,485,1.655,486,2.18,487,2.18,488,2.18,489,2.18,490,5.419,491,1.956,492,3.347,493,3.347,494,3.347,495,4.57,496,2.18,497,2.18,498,2.18,499,3.347,500,2.18,501,3.347,502,2.18,503,2.18,504,2.18,505,2.18,506,3.347,507,2.18,508,3.347,509,2.18,510,2.18,511,2.18,512,2.18,513,3.347,514,1.789,515,2.18,516,3.347,517,2.18,518,2.18,519,2.18,520,2.18,521,3.869,522,3.869,523,3.003,524,2.52,525,2.52,526,2.52,527,2.52,528,2.52,529,2.52,530,2.52,531,2.52,532,2.52,533,2.52,534,2.52,535,2.52]],["title/modules/CoreModule.html",[206,1.052,363,2.36]],["body/modules/CoreModule.html",[0,0.188,3,0.209,4,0.167,5,0.188,17,0.016,29,0.209,30,0.009,31,0.012,32,0.009,82,0.557,86,0.45,118,0.973,175,2.569,206,1.248,208,1.538,209,2.112,210,2.112,211,2.112,212,3.038,213,1.832,219,3.025,220,2.343,221,2.011,226,2.476,242,2.107,314,2.478,363,4.625,400,2.802,419,4.537,423,4.19,464,4.19,536,3.957,537,3.957,538,3.967,539,3.55,540,5.108,541,4.575,542,4.575,543,4.537,544,5.905,545,4.575,546,3.957,547,3.957,548,5.108]],["title/classes/CustomValidators.html",[0,0.158,251,2.531]],["body/classes/CustomValidators.html",[0,0.207,2,3.094,3,0.231,4,0.184,5,0.207,7,0.755,16,0.866,17,0.016,19,1.218,29,0.231,30,0.01,31,0.013,32,0.01,53,3.094,58,1.788,68,1.436,69,0.905,70,1.378,74,1.378,82,0.384,88,2.736,105,1.338,193,1.561,242,2.026,251,4.129,252,4.495,254,4.129,279,4.859,400,3.094,472,3.585,549,5.439,550,4.369,551,5.313,552,6.287,553,7.164,554,5.051,555,5.051,556,5.051,557,5.051]],["title/interfaces/ErrorWithContext.html",[454,1.191,558,2.735]],["body/interfaces/ErrorWithContext.html",[0,0.149,1,3.402,3,0.166,4,0.132,5,0.149,7,0.54,8,1.434,16,1.077,17,0.016,18,2.619,21,2.681,29,0.231,30,0.012,31,0.01,32,0.007,64,1.118,82,0.544,86,0.356,94,1.651,175,2.037,182,3.312,183,1.59,184,1.959,185,1.59,186,1.757,193,1.794,225,1.959,242,1.871,252,4.125,257,4.125,261,2.567,273,1.847,276,2.634,287,3.579,292,2.375,297,2.731,314,1.959,316,1.853,317,2.079,339,4.115,454,1.118,455,1.853,485,2.375,538,1.959,558,4.982,559,2.567,560,2.807,561,4.362,562,5.433,563,5.433,564,5.433,565,5.022,566,4.362,567,2.807,568,2.567,569,2.807,570,3.129,571,2.807,572,3.129,573,3.129,574,3.129,575,3.129,576,3.129,577,3.129,578,3.129,579,4.362,580,3.129,581,3.129,582,3.129,583,3.129,584,3.129,585,3.129,586,3.129,587,3.129,588,3.129,589,3.129,590,2.807,591,3.129,592,3.129,593,3.129,594,3.129]],["title/injectables/ErrorsHandler.html",[273,1.412,543,2.531]],["body/injectables/ErrorsHandler.html",[0,0.14,3,0.157,4,0.125,5,0.14,7,0.511,16,1.05,17,0.016,19,1.477,29,0.157,30,0.007,31,0.01,32,0.007,44,1.661,58,1.378,64,1.056,68,1.742,69,1.098,70,1.672,74,1.537,75,2.572,82,0.511,86,0.336,93,1.149,94,0.972,116,1.965,185,1.503,190,2.426,194,2.426,212,1.503,242,2.084,267,1.579,273,1.776,274,2.245,276,2.817,290,3.698,314,1.852,315,2.245,316,1.751,317,1.965,335,2.957,339,4.184,402,2.957,403,4.193,423,3.44,448,4.871,485,2.245,538,1.852,543,3.698,546,2.957,559,4.591,567,5.478,569,4.37,571,2.653,595,2.957,596,4.847,597,4.847,598,4.193,599,3.419,600,6.909,601,3.419,602,4.847,603,3.419,604,4.847,605,3.419,606,3.419,607,3.419,608,2.426,609,3.419,610,3.419,611,3.419,612,2.653,613,3.419,614,3.419,615,3.419,616,3.419,617,4.847,618,3.419,619,3.419,620,4.847,621,3.419,622,3.419,623,3.419,624,3.419,625,3.419,626,4.847,627,3.419,628,3.419,629,3.419,630,3.419]],["title/injectables/ErrorsLogger.html",[273,1.412,538,2.087]],["body/injectables/ErrorsLogger.html",[0,0.142,1,2.644,3,0.158,4,0.126,5,0.142,7,0.516,16,0.971,17,0.016,18,1.869,19,1.365,21,1.594,29,0.223,30,0.011,31,0.01,32,0.007,58,1.388,64,1.508,68,1.61,69,1.015,70,1.545,74,1.332,82,0.538,86,0.339,94,1.61,174,1.677,175,2.364,182,3.205,183,1.518,184,1.87,185,1.518,186,1.677,193,1.749,225,1.87,242,1.824,252,3.205,257,2.267,261,2.45,273,1.788,274,2.267,276,2.826,287,4.367,292,3.718,297,3.066,314,1.87,316,1.768,317,1.984,339,4.316,454,1.067,485,2.267,538,2.644,558,4.917,559,4.367,560,2.679,561,2.986,562,2.986,563,2.986,564,2.986,565,5.993,566,4.222,567,2.679,568,2.45,569,3.788,570,2.986,571,2.679,572,2.986,573,2.986,574,2.986,575,2.986,576,2.986,577,2.986,578,4.222,579,4.222,580,2.986,581,2.986,582,2.986,583,2.986,584,2.986,585,2.986,586,2.986,587,2.986,588,2.986,589,2.986,590,2.679,591,2.986,592,2.986,593,2.986,594,2.986,598,4.222,631,4.881,632,3.453,633,3.453,634,3.453]],["title/interfaces/FormControlError.html",[454,1.191,635,2.531]],["body/interfaces/FormControlError.html",[0,0.161,3,0.18,4,0.143,5,0.161,7,0.587,8,1.517,16,1.314,17,0.016,18,2.043,21,2.464,29,0.18,30,0.008,31,0.011,32,0.008,51,1.117,70,2.043,82,0.298,86,0.386,93,1.32,94,1.117,105,0.836,121,1.287,165,0.947,166,1.117,180,1.813,193,2.217,276,1.647,326,3.283,347,3.787,454,1.213,455,2.011,523,3.047,551,5.047,608,2.786,635,4.271,636,2.786,637,3.787,638,3.047,639,3.047,640,5.626,641,5.626,642,5.883,643,5.883,644,7.303,645,4.616,646,4.616,647,3.396,648,3.396,649,3.396,650,3.396,651,3.396,652,3.396,653,4.616,654,3.396,655,3.396,656,4.616,657,3.396,658,3.396,659,3.396,660,3.396,661,3.396,662,3.396,663,3.396,664,3.396,665,3.396]],["title/modules/GeneralModule.html",[206,1.052,666,2.735]],["body/modules/GeneralModule.html",[0,0.176,3,0.197,4,0.156,5,0.176,17,0.016,29,0.259,30,0.009,31,0.011,32,0.009,35,1.407,82,0.547,86,0.422,118,0.914,133,1.221,134,1.375,137,1.435,138,1.435,141,1.435,144,1.435,146,1.435,206,1.172,208,1.443,209,1.982,210,3.113,211,1.982,212,1.888,213,1.719,219,2.902,220,2.199,221,1.888,223,2.539,226,2.376,230,4.02,233,2.63,235,2.819,236,3.644,241,2.788,242,2.043,243,3.256,666,5.615,667,3.714,668,4.293,669,3.714,670,4.409,671,3.332]],["title/components/GeneralRootComponent.html",[33,0.335,132,1.009]],["body/components/GeneralRootComponent.html",[0,0.156,3,0.174,4,0.138,5,0.156,17,0.015,29,0.174,30,0.008,31,0.01,32,0.008,33,0.518,34,1.036,35,1.158,36,1.174,38,1.174,39,1.174,41,1.258,46,1.126,47,1.612,48,1.612,49,1.612,50,1.612,51,2.251,52,1.514,56,1.681,69,1.068,82,0.289,83,1.174,85,1.174,86,0.373,105,0.808,118,0.808,119,1.612,120,1.546,121,0.916,122,1.982,123,1.174,124,1.982,125,0.995,126,2.077,127,1.036,128,1.423,129,0.995,130,0.954,131,1.174,132,1.68,133,1.912,134,0.775,135,2.059,136,1.174,137,0.808,138,0.808,139,1.126,140,1.174,141,0.808,142,1.694,143,1.174,144,0.808,145,1.174,146,0.808,147,1.174,148,1.036,149,1.824,150,1.174,151,1.036,152,1.126,153,1.841,154,0.995,155,1.036,156,1.126,157,1.036,158,1.75,159,1.036,160,1.036,161,1.036,162,0.995,163,1.841,164,1.126,165,0.916,166,1.08,167,1.174,170,2.183,172,3.195,672,3.285,673,3.285,674,5.216,675,5.216,676,5.216,677,6.414,678,3.702,679,4.512]],["title/modules/GeneralRoutingModule.html",[206,1.052,670,2.36]],["body/modules/GeneralRoutingModule.html",[0,0.223,3,0.249,4,0.198,5,0.223,17,0.016,29,0.249,30,0.011,31,0.013,32,0.011,33,0.472,82,0.537,86,0.534,132,1.721,208,1.824,213,2.174,223,2.174,226,2.756,241,2.387,242,1.749,264,3.564,265,4.315,266,3.828,267,2.506,268,3.12,272,3.852,670,4.025,680,5.428]],["title/interfaces/HttpError.html",[408,2.735,454,1.191]],["body/interfaces/HttpError.html",[3,0.257,4,0.204,5,0.23,7,0.837,8,1.905,16,1.148,17,0.015,18,2.743,21,3.308,29,0.257,30,0.011,31,0.013,32,0.011,408,4.753,410,6.421,411,5.761,454,1.731,455,2.87,681,4.846,682,4.846]],["title/guards/LogoutGuard.html",[237,2.36,388,2.735]],["body/guards/LogoutGuard.html",[0,0.191,3,0.213,4,0.17,5,0.191,7,0.696,16,1.024,17,0.016,19,1.441,29,0.213,30,0.009,31,0.012,32,0.009,44,2.264,58,1.699,64,1.44,68,1.699,69,1.071,70,1.631,74,1.272,82,0.501,86,0.458,93,1.566,94,1.699,174,2.264,175,2.582,186,2.264,193,1.44,237,3.66,267,2.152,269,4.569,273,2.189,276,1.954,290,4.915,326,3.236,390,3.307,393,4.637,394,5.399,396,5.399,398,3.617,399,3.307,405,2.854,683,4.031,684,4.66,685,5.706,686,4.66,687,4.66,688,4.66,689,4.66]],["title/components/MainErrorComponent.html",[33,0.335,134,0.786]],["body/components/MainErrorComponent.html",[0,0.145,3,0.162,4,0.129,5,0.145,17,0.015,29,0.162,30,0.007,31,0.01,32,0.007,33,0.499,34,0.965,35,1.102,36,1.093,37,1.633,38,1.093,39,1.093,41,1.197,46,1.048,47,1.534,48,1.534,49,1.534,50,1.534,51,2.236,52,1.484,54,2.292,56,1.599,69,1.028,82,0.269,83,1.093,85,1.093,86,0.348,105,0.753,115,2.166,116,2.853,118,0.753,119,1.534,120,1.471,121,0.853,122,1.922,123,1.093,124,1.922,125,0.926,126,2.024,127,0.965,128,1.355,129,0.926,130,0.889,131,1.093,132,0.926,133,1.006,134,1.269,135,2.25,136,1.093,137,0.753,138,0.753,139,1.048,140,1.093,141,0.753,142,1.631,143,1.093,144,0.753,145,1.093,146,0.753,147,1.093,148,0.965,149,1.769,150,1.093,151,0.965,152,1.048,153,1.772,154,0.926,155,0.965,156,1.048,157,0.965,158,1.697,159,0.965,160,0.965,161,0.965,162,0.926,163,1.093,164,1.048,165,0.853,166,1.006,167,1.093,201,2.745,202,2.745,203,2.745,339,3.297,690,2.745,691,3.059,692,3.059,693,5.736,694,4.964,695,4.964,696,4.964,697,4.964,698,4.964,699,4.964,700,6.22,701,4.294,702,4.294,703,4.964,704,4.294,705,3.536,706,3.536,707,3.059,708,3.536,709,3.536]],["title/modules/MainModule.html",[206,1.052,364,2.36]],["body/modules/MainModule.html",[0,0.16,3,0.178,4,0.142,5,0.16,17,0.016,29,0.243,30,0.008,31,0.011,32,0.008,35,1.339,82,0.554,86,0.382,118,0.828,134,1.322,135,1.153,137,1.605,138,1.379,141,1.379,144,1.379,146,1.379,206,1.062,208,1.308,209,1.797,210,2.992,211,1.797,212,2.653,213,2.416,219,2.717,220,1.993,221,1.711,223,2.416,224,3.249,225,2.108,226,2.224,229,3.483,233,2.383,235,2.555,236,3.467,241,2.653,242,2.184,243,3.048,364,4.811,389,3.249,710,3.366,711,3.891,712,3.366,713,3.366,714,4.285,715,3.02,716,4.588,717,4.588,718,4.588,719,4.588,720,4.588,721,3.366,722,4.116]],["title/components/MainRootComponent.html",[33,0.335,137,0.82]],["body/components/MainRootComponent.html",[0,0.136,3,0.152,4,0.121,5,0.136,7,0.495,8,1.348,16,0.813,17,0.016,19,1.143,29,0.152,30,0.007,31,0.01,32,0.007,33,0.481,34,0.905,35,1.052,36,1.024,37,1.531,38,1.024,39,1.024,41,1.143,46,0.982,47,1.465,48,1.465,49,1.465,50,1.465,51,2.222,52,1.457,54,2.189,56,1.528,64,1.024,68,0.943,69,1.083,70,0.905,82,0.36,83,1.024,85,1.024,86,0.326,105,0.705,115,2.03,116,3.182,117,2.177,118,0.705,119,1.465,120,1.405,121,0.799,122,1.867,123,1.024,124,1.867,125,0.868,126,1.975,127,0.905,128,1.294,129,0.868,130,0.833,131,1.024,132,0.868,133,0.943,134,0.676,135,2.211,136,1.024,137,1.286,138,0.705,139,0.982,140,1.024,141,0.705,142,1.718,143,1.024,144,0.705,145,1.024,146,0.705,147,1.024,148,0.905,149,1.718,150,1.024,151,0.905,152,0.982,153,1.711,154,0.868,155,0.905,156,0.982,157,0.905,158,1.649,159,0.905,160,0.905,161,0.905,162,0.868,163,1.711,164,0.982,165,0.799,166,0.943,167,1.024,170,1.905,171,4.296,172,2.904,174,1.61,175,2.5,186,1.61,472,3.365,678,3.365,690,4.296,707,2.867,723,4.789,724,3.315,725,3.315,726,3.315,727,2.867,728,2.867,729,3.315,730,3.315,731,3.315,732,3.315,733,3.315,734,3.315,735,3.315,736,3.315,737,3.315,738,3.315,739,3.315,740,3.68]],["title/modules/MainRoutingModule.html",[206,1.052,714,2.36]],["body/modules/MainRoutingModule.html",[0,0.189,3,0.211,4,0.168,5,0.189,17,0.016,29,0.211,30,0.009,31,0.012,32,0.009,33,0.4,52,0.979,82,0.526,86,0.452,111,3.02,133,1.685,134,1.209,158,1.255,208,1.546,213,1.842,223,1.842,226,2.485,241,2.022,242,1.482,264,3.02,265,3.89,266,3.55,267,2.123,268,4.344,269,3.02,270,3.978,339,3.405,389,3.629,405,2.817,714,3.629,721,3.978,741,4.599,742,4.599,743,5.925,744,6.923,745,4.599,746,4.599,747,4.599,748,4.599,749,4.599,750,4.599,751,4.599]],["title/components/MainScrollToTopComponent.html",[33,0.335,138,0.82]],["body/components/MainScrollToTopComponent.html",[0,0.117,3,0.13,4,0.104,5,0.117,7,0.634,8,1.207,17,0.016,19,1.224,29,0.13,30,0.006,31,0.009,32,0.006,33,0.441,34,0.778,35,0.942,36,0.88,37,1.316,38,0.88,39,0.88,41,1.024,46,0.845,47,1.312,48,1.312,49,1.312,50,1.312,51,2.185,52,1.39,54,1.96,56,1.368,58,1.207,69,0.909,74,0.778,75,1.626,82,0.217,83,0.88,85,0.88,86,0.28,105,0.606,112,2.175,113,1.745,116,3.232,118,0.606,119,1.312,120,1.258,121,0.687,122,1.738,123,0.88,124,1.738,125,0.746,126,1.858,127,0.778,128,1.159,129,0.746,130,0.716,131,0.88,132,0.746,133,0.81,134,0.581,135,2.15,136,0.88,137,0.606,138,1.197,139,2.23,140,0.88,141,0.606,142,1.443,143,0.88,144,0.606,145,0.88,146,0.606,147,0.88,148,0.778,149,1.599,150,0.88,151,0.778,152,0.845,153,1.568,154,0.746,155,0.778,156,0.845,157,0.778,158,1.535,159,0.778,160,0.778,161,0.778,162,0.746,163,0.88,164,0.845,165,0.687,166,0.81,167,0.88,179,1.543,180,1.316,221,2.231,400,1.745,405,2.601,727,3.673,728,2.465,740,2.211,752,3.693,753,4.864,754,2.465,755,5.624,756,5.075,757,4.246,758,5.075,759,5.075,760,4.246,761,5.075,762,2.849,763,2.849,764,2.849,765,2.849,766,2.849,767,2.849,768,4.246,769,4.246,770,4.246,771,2.849,772,2.849,773,2.849,774,4.246,775,2.465,776,4.246,777,2.849,778,2.211,779,2.211,780,2.849,781,5.075,782,2.849,783,2.849,784,3.295,785,4.246,786,5.624,787,4.246,788,2.849,789,4.246,790,2.849,791,2.849,792,5.075,793,4.246,794,2.849,795,2.849,796,2.849,797,2.849,798,2.849,799,5.624,800,2.849,801,2.849,802,4.246,803,2.849,804,2.849]],["title/components/MainToolbarAvatarComponent.html",[33,0.335,141,0.82]],["body/components/MainToolbarAvatarComponent.html",[0,0.126,3,0.141,4,0.112,5,0.126,7,0.459,9,3.25,16,0.527,17,0.016,19,1.279,21,1.42,29,0.141,30,0.006,31,0.009,32,0.006,33,0.461,34,0.839,35,0.997,36,0.95,37,1.42,38,0.95,39,0.95,41,1.083,46,0.912,47,1.388,48,1.388,49,1.388,50,1.388,51,2.204,52,1.424,54,2.074,56,1.447,64,0.95,68,0.875,69,1.046,70,0.839,82,0.472,83,0.95,85,0.95,86,0.302,93,1.034,94,0.875,105,0.654,112,1.575,118,0.654,119,1.388,120,1.331,121,0.742,122,1.803,123,0.95,124,1.803,125,0.805,126,1.918,127,0.839,128,1.226,129,0.805,130,0.773,131,0.95,132,0.805,133,0.875,134,0.627,135,2.181,136,0.95,137,0.654,138,0.654,139,0.912,140,0.95,141,1.242,142,2.172,143,0.95,144,0.654,145,0.95,146,0.654,147,0.95,148,0.839,149,1.843,150,0.95,151,0.839,152,0.912,153,1.639,154,0.805,155,0.839,156,0.912,157,0.839,158,1.769,159,0.839,160,0.839,161,0.839,162,0.805,163,0.95,164,0.912,165,0.742,166,0.875,167,0.95,174,1.494,175,2.274,183,1.352,185,1.352,186,1.494,193,1.388,271,3.486,283,2.751,297,2.433,316,1.575,317,1.767,469,2.387,752,3.832,778,2.387,779,2.387,784,2.387,805,5.047,806,2.66,807,5.306,808,4.492,809,4.59,810,5.306,811,3.075,812,2.66,813,3.075,814,3.075,815,3.075,816,3.075,817,3.075,818,3.075,819,3.075,820,3.075,821,2.66,822,3.075,823,3.075,824,4.492,825,5.306]],["title/components/MainToolbarMailComponent.html",[33,0.335,144,0.82]],["body/components/MainToolbarMailComponent.html",[0,0.158,3,0.177,4,0.141,5,0.158,17,0.015,29,0.177,30,0.008,31,0.011,32,0.008,33,0.522,34,1.052,35,1.17,36,1.192,38,1.192,39,1.192,41,1.271,46,1.143,47,1.629,48,1.629,49,1.629,50,1.629,51,2.254,52,1.52,56,1.698,69,1.076,82,0.293,83,1.192,85,1.192,86,0.379,105,0.821,118,0.821,119,1.629,120,1.562,121,0.93,122,1.995,123,1.192,124,1.995,125,1.01,126,2.088,127,1.052,128,1.439,129,1.01,130,0.969,131,1.192,132,1.01,133,1.097,134,0.787,135,2.211,136,1.192,137,0.821,138,0.821,139,1.143,140,1.192,141,0.821,142,2.098,143,1.192,144,1.374,145,1.192,146,0.821,147,1.192,148,1.052,149,1.836,150,1.192,151,1.052,152,1.143,153,1.856,154,1.01,155,1.052,156,1.143,157,1.052,158,1.762,159,1.052,160,1.052,161,1.052,162,1.01,163,1.192,164,1.143,165,0.93,166,1.097,167,1.192,702,5.584,752,2.533,826,3.336,827,3.336,828,5.272]],["title/components/MainToolbarNotificationsComponent.html",[33,0.335,146,0.82]],["body/components/MainToolbarNotificationsComponent.html",[0,0.158,3,0.177,4,0.141,5,0.158,17,0.015,29,0.177,30,0.008,31,0.011,32,0.008,33,0.522,34,1.052,35,1.17,36,1.192,38,1.192,39,1.192,41,1.271,46,1.143,47,1.629,48,1.629,49,1.629,50,1.629,51,2.254,52,1.52,56,1.698,69,1.076,82,0.293,83,1.192,85,1.192,86,0.379,105,0.821,118,0.821,119,1.629,120,1.562,121,0.93,122,1.995,123,1.192,124,1.995,125,1.01,126,2.088,127,1.052,128,1.439,129,1.01,130,0.969,131,1.192,132,1.01,133,1.097,134,0.787,135,2.211,136,1.192,137,0.821,138,0.821,139,1.143,140,1.192,141,0.821,142,2.098,143,1.192,144,0.821,145,1.192,146,1.374,147,1.192,148,1.052,149,1.836,150,1.192,151,1.052,152,1.143,153,1.856,154,1.01,155,1.052,156,1.143,157,1.052,158,1.762,159,1.052,160,1.052,161,1.052,162,1.01,163,1.192,164,1.143,165,0.93,166,1.097,167,1.192,752,2.533,829,3.336,830,3.336,831,6.455,832,5.272]],["title/injectables/ManageService.html",[273,1.412,833,2.215]],["body/injectables/ManageService.html",[0,0.165,3,0.183,4,0.146,5,0.165,7,0.599,8,1.539,16,1.05,17,0.016,19,1.582,29,0.183,30,0.008,31,0.011,32,0.008,52,0.853,58,1.539,64,1.238,68,1.742,69,1.098,70,1.672,74,1.476,82,0.548,86,0.394,91,3.359,92,2.167,93,1.347,94,1.865,105,0.853,160,1.476,179,2.17,180,1.85,183,1.762,184,2.17,185,1.762,193,1.672,268,3.52,273,1.982,274,2.631,276,2.569,286,3.466,287,4.655,292,3.553,297,3.71,314,2.17,316,2.053,317,2.303,329,4.68,330,4.68,331,4.199,332,4.68,833,3.109,834,3.466,835,4.68,836,4.68,837,5.41,838,4.68,839,4.307,840,4.007,841,4.68,842,4.307,843,4.007,844,5.41,845,4.68,846,4.007,847,4.007,848,4.007]],["title/directives/MpgpFormControlErrorDirective.html",[121,0.929,165,0.929]],["body/directives/MpgpFormControlErrorDirective.html",[0,0.155,3,0.173,4,0.138,5,0.155,7,0.565,16,0.892,17,0.016,18,2.276,19,1.544,21,2.401,29,0.173,30,0.008,31,0.01,32,0.008,46,1.121,51,1.479,58,1.479,64,1.168,68,1.69,69,1.065,70,1.622,74,1.419,75,1.448,82,0.287,86,0.372,93,1.271,94,1.075,105,0.805,121,1.254,164,1.121,165,1.254,166,1.973,180,1.746,193,2.195,276,2.493,283,3.186,326,2.048,347,3.691,454,1.168,523,2.935,551,2.935,608,4.219,635,4.408,636,4.764,637,5.275,638,5.209,639,2.935,640,3.271,641,3.271,642,4.499,643,4.499,645,5.538,646,4.499,647,3.271,648,4.499,649,3.271,650,3.271,651,3.271,652,4.499,653,4.499,654,3.271,655,3.271,656,4.499,657,3.271,658,3.271,659,3.271,660,3.271,661,3.271,662,3.271,663,3.271,664,3.271,665,3.271,849,5.201,850,4.499,851,3.782,852,3.782,853,5.201,854,3.782,855,3.782]],["title/modules/MpgpFormControlErrorModule.html",[206,1.052,218,2.215]],["body/modules/MpgpFormControlErrorModule.html",[0,0.206,3,0.23,4,0.183,5,0.206,17,0.016,29,0.23,30,0.01,31,0.013,32,0.01,82,0.519,86,0.494,118,1.069,165,1.903,206,1.37,208,1.688,209,2.319,210,3.153,211,2.319,212,2.208,213,2.735,218,4.374,219,3.209,220,2.572,221,2.208,223,2.011,224,3.837,225,2.72,226,2.627,636,3.564,637,4.446,678,3.564,856,4.344,857,4.344,858,4.344,859,5.022,860,5.022]],["title/components/ProfileCardComponent.html",[33,0.335,148,1.052]],["body/components/ProfileCardComponent.html",[0,0.12,1,2.784,3,0.133,4,0.106,5,0.12,7,0.435,9,1.783,16,0.881,17,0.016,18,1.115,19,1.533,29,0.133,30,0.006,31,0.009,32,0.006,33,0.447,34,0.794,35,0.957,36,0.9,37,1.344,38,0.9,39,0.9,41,1.04,46,0.863,47,1.333,48,1.333,49,1.333,50,1.333,51,2.19,52,1.494,54,1.992,56,1.39,58,1.227,62,2.833,69,0.921,72,4.319,74,1.177,75,2.176,82,0.391,83,0.9,84,3.375,85,0.9,86,0.286,92,1.728,105,0.62,112,2.21,113,2.642,118,0.62,119,1.333,120,1.279,121,0.702,122,1.756,123,0.9,124,1.756,125,0.762,126,1.875,127,0.794,128,1.177,129,0.762,130,0.732,131,0.9,132,0.762,133,0.828,134,0.594,135,1.884,136,0.9,137,0.62,138,0.62,139,0.863,140,0.9,141,0.62,142,1.462,143,0.9,144,0.62,145,0.9,146,0.62,147,0.9,148,1.551,149,2.05,150,0.9,151,0.794,152,1.684,153,1.588,154,0.762,155,0.794,156,0.863,157,0.794,158,1.551,159,0.794,160,0.794,161,0.794,162,0.762,163,0.9,164,0.863,165,0.702,166,0.828,167,0.9,193,0.9,199,2.259,283,2.642,316,1.491,317,1.673,347,3.062,411,3.348,568,2.066,778,2.259,779,2.259,784,2.259,809,4.446,812,2.518,821,2.518,850,3.732,861,5.69,862,5.69,863,2.518,864,5.139,865,4.314,866,4.916,867,4.916,868,5.139,869,5.139,870,2.911,871,2.911,872,2.911,873,2.911,874,2.911,875,2.911,876,2.911,877,2.911,878,2.911,879,4.314,880,4.314,881,4.314,882,3.348,883,4.314,884,4.314,885,2.911,886,2.911]],["title/components/ProfileCardContainerComponent.html",[33,0.335,151,1.052]],["body/components/ProfileCardContainerComponent.html",[0,0.128,1,2.458,3,0.143,4,0.114,5,0.128,7,0.466,10,5.081,16,0.917,17,0.016,19,1.417,21,3.008,29,0.143,30,0.006,31,0.009,32,0.006,33,0.465,34,0.851,35,1.007,36,0.964,38,0.964,39,0.964,41,1.094,46,0.925,47,1.402,48,1.402,49,1.402,50,1.402,51,2.207,52,1.518,56,1.462,58,1.291,64,0.964,68,1.521,69,1.167,70,1.46,74,1.238,75,2.249,82,0.407,83,0.964,85,0.964,86,0.307,93,1.048,94,0.887,105,0.664,118,0.664,119,1.402,120,1.345,121,0.752,122,1.815,123,0.964,124,1.815,125,0.817,126,1.929,127,0.851,128,1.238,129,0.817,130,0.784,131,0.964,132,0.817,133,0.887,134,0.636,135,1.931,136,0.964,137,0.664,138,0.664,139,0.925,140,0.964,141,0.664,142,1.521,143,0.964,144,0.664,145,0.964,146,0.664,147,0.964,148,0.851,149,1.959,150,0.964,151,1.603,152,2.22,153,1.653,154,0.817,155,0.851,156,0.925,157,0.851,158,1.603,159,0.851,160,0.851,161,0.851,162,0.817,163,0.964,164,0.925,165,0.752,166,0.887,167,0.964,174,1.515,175,2.285,186,1.515,193,0.964,283,2.78,568,2.214,590,2.421,866,3.926,867,3.926,887,4.844,888,4.844,889,2.214,890,3.221,891,3.522,892,3.119,893,4.538,894,3.119,895,4.538,896,3.119,897,3.119,898,3.119,899,4.538]],["title/modules/ProfileModule.html",[206,1.052,900,2.735]],["body/modules/ProfileModule.html",[0,0.173,3,0.193,4,0.153,5,0.173,17,0.016,29,0.256,30,0.008,31,0.011,32,0.008,35,1.393,82,0.555,86,0.414,118,0.896,134,1.365,137,1.424,138,1.424,141,1.424,144,1.424,146,1.424,149,1.197,206,1.149,208,1.415,209,1.944,210,3.089,211,1.944,212,1.851,213,1.686,219,2.865,220,2.157,221,1.851,223,2.515,224,3.425,225,2.28,226,2.345,229,3.672,230,3.969,233,2.579,235,2.765,236,3.609,241,2.761,242,2.023,243,3.214,900,5.604,901,3.642,902,4.21,903,3.642,904,4.385,905,3.268]],["title/components/ProfileRootComponent.html",[33,0.335,154,1.009]],["body/components/ProfileRootComponent.html",[0,0.161,3,0.18,4,0.143,5,0.161,17,0.015,29,0.18,30,0.008,31,0.011,32,0.008,33,0.527,34,1.071,35,1.184,36,1.213,38,1.213,39,1.213,41,1.287,46,1.164,47,1.649,48,1.649,49,1.649,50,1.649,51,2.258,52,1.527,56,1.719,69,1.086,82,0.298,83,1.213,85,1.213,86,0.386,105,0.836,118,0.836,119,1.649,120,1.582,121,0.947,122,2.009,123,1.213,124,2.009,125,1.028,126,2.101,127,1.071,128,1.456,129,1.028,130,0.987,131,1.213,132,1.028,133,1.117,134,0.801,135,2.079,136,1.213,137,0.836,138,0.836,139,1.164,140,1.213,141,0.836,142,1.724,143,1.213,144,0.836,145,1.213,146,0.836,147,1.213,148,1.071,149,2.077,150,1.213,151,1.071,152,1.164,153,1.873,154,1.703,155,1.071,156,1.164,157,1.071,158,1.775,159,1.071,160,1.071,161,1.071,162,1.028,163,1.873,164,1.164,165,0.947,166,1.117,167,1.213,170,2.256,172,3.268,906,3.396,907,3.396]],["title/modules/ProfileRoutingModule.html",[206,1.052,904,2.36]],["body/modules/ProfileRoutingModule.html",[0,0.223,3,0.249,4,0.198,5,0.223,17,0.016,29,0.249,30,0.011,31,0.013,32,0.011,33,0.472,82,0.537,86,0.534,154,1.721,208,1.824,213,2.174,223,2.174,226,2.756,241,2.387,242,1.749,264,3.564,265,4.315,266,3.828,267,2.506,268,3.12,272,3.852,904,4.025,908,5.428]],["title/components/ProfileWallContainerComponent.html",[33,0.335,155,1.052]],["body/components/ProfileWallContainerComponent.html",[0,0.159,3,0.177,4,0.141,5,0.159,17,0.015,29,0.177,30,0.008,31,0.011,32,0.008,33,0.523,34,1.055,35,1.172,36,1.194,38,1.194,39,1.194,41,1.273,46,1.146,47,1.631,48,1.631,49,1.631,50,1.631,51,2.254,52,1.521,56,1.701,69,1.077,82,0.294,83,1.194,85,1.194,86,0.38,105,0.823,118,0.823,119,1.631,120,1.565,121,0.932,122,1.996,123,1.194,124,1.996,125,1.012,126,2.09,127,1.055,128,1.441,129,1.012,130,0.971,131,1.194,132,1.012,133,1.099,134,0.788,135,2.07,136,1.194,137,0.823,138,0.823,139,1.146,140,1.194,141,0.823,142,1.71,143,1.194,144,0.823,145,1.194,146,0.823,147,1.194,148,1.055,149,2.069,150,1.194,151,1.055,152,1.146,153,1.858,154,1.012,155,1.763,156,2.118,157,1.055,158,1.763,159,1.055,160,1.055,161,1.055,162,1.012,163,1.194,164,1.146,165,0.932,166,1.099,167,1.194,887,3,888,3,889,2.743,890,3.747,891,4.097]],["title/interfaces/RegisterAccountCommand.html",[249,2.087,454,1.191]],["body/interfaces/RegisterAccountCommand.html",[3,0.224,4,0.178,5,0.2,7,0.729,8,1.75,9,4.335,11,5.023,13,4.647,15,5.023,16,1.296,17,0.016,18,3.084,29,0.224,30,0.01,31,0.012,32,0.01,41,1.707,52,1.039,105,1.506,249,3.333,254,4.647,454,1.508,455,2.5,457,3.206,909,4.223]],["title/components/SettingsAccountContainerComponent.html",[33,0.335,157,1.052]],["body/components/SettingsAccountContainerComponent.html",[0,0.115,3,0.128,4,0.102,5,0.115,7,0.417,8,1.189,16,0.859,17,0.016,19,1.437,29,0.128,30,0.006,31,0.008,32,0.006,33,0.436,34,0.761,35,0.928,36,0.862,38,0.862,39,0.862,41,1.008,46,0.827,47,1.291,48,1.291,49,1.291,50,1.291,51,2.18,52,1.636,56,1.347,58,1.189,64,0.862,68,1.425,69,1.121,70,1.368,74,1.141,75,2.131,82,0.476,83,0.862,85,0.862,86,0.274,91,2.851,92,2.229,93,0.938,94,0.793,105,1.066,118,0.594,119,1.291,120,1.239,121,0.673,122,1.72,123,0.862,124,1.72,125,0.731,126,1.842,127,0.761,128,1.141,129,0.731,130,0.701,131,0.862,132,0.731,133,0.793,134,0.569,135,1.854,136,0.862,137,0.594,138,0.594,139,0.827,140,0.862,141,0.594,142,1.425,143,0.862,144,0.594,145,0.862,146,0.594,147,0.862,148,0.761,149,1.779,150,0.862,151,0.761,152,0.827,153,1.548,154,0.731,155,0.761,156,0.827,157,1.519,158,1.82,159,0.761,160,0.761,161,0.761,162,0.731,163,0.862,164,0.827,165,0.673,166,0.793,167,0.862,179,2.264,180,1.93,181,3.914,182,3.291,183,1.227,184,1.511,185,1.227,190,2.966,191,2.966,193,1.291,194,2.966,833,3.596,835,3.615,836,3.615,838,4.335,839,3.654,841,4.335,842,3.654,845,3.615,889,1.98,890,2.966,891,3.244,910,5.412,911,5.412,912,5.565,913,5.565,914,2.79,915,4.18,916,2.79,917,2.79,918,2.79,919,1.832,920,2.79,921,4.18,922,2.79,923,2.79,924,2.79,925,2.79,926,2.414,927,2.79,928,2.79]],["title/components/SettingsAccountDataFormComponent.html",[33,0.335,159,1.052]],["body/components/SettingsAccountDataFormComponent.html",[0,0.108,3,0.12,4,0.096,5,0.108,7,0.392,8,1.136,9,1.609,11,1.864,13,1.725,15,1.864,16,0.925,17,0.016,19,1.474,29,0.12,30,0.005,31,0.008,32,0.005,33,0.42,34,0.717,35,0.886,36,0.812,37,1.213,38,0.812,39,0.812,41,0.963,43,1.725,44,1.94,45,3.429,46,0.778,47,1.234,48,1.234,49,1.234,50,1.234,51,2.163,52,1.648,53,3.556,54,1.844,55,3.429,56,1.287,57,2.834,58,1.136,59,3.831,60,3.831,61,2.446,62,2.622,63,4.12,64,0.812,65,1.864,66,3.831,67,3.454,68,1.136,69,1.139,70,1.09,71,2.834,72,3.172,73,2.272,74,1.318,75,2.341,76,2.272,77,2.834,78,3.544,80,3.429,81,2.272,82,0.367,83,0.812,84,2.622,85,0.812,86,0.258,87,1.725,88,1.423,91,1.345,92,1.052,93,0.883,94,0.747,95,1.864,96,1.864,97,1.864,98,3.831,99,2.038,100,2.038,105,0.559,107,3.429,108,1.864,109,1.864,110,1.864,111,1.725,112,2.045,113,1.609,118,0.559,119,1.234,120,1.184,121,0.633,122,1.668,123,0.812,124,1.668,125,0.688,126,1.794,127,0.717,128,1.09,129,0.688,130,0.66,131,0.812,132,0.688,133,0.747,134,0.536,135,1.812,136,0.812,137,0.559,138,0.559,139,0.778,140,0.812,141,0.559,142,1.374,143,0.812,144,0.559,145,0.812,146,0.559,147,0.812,148,0.717,149,1.535,150,0.812,151,0.717,152,0.778,153,1.493,154,0.688,155,0.717,156,0.778,157,0.717,158,1.898,159,1.473,160,2.068,161,0.717,162,0.688,163,0.812,164,0.778,165,0.633,166,0.747,167,0.812,249,1.423,250,1.864,253,2.272,257,2.622,929,4.932,930,4.932,931,2.626,932,3.993,933,3.993,934,3.993]],["title/components/SettingsAccountPasswordFormComponent.html",[33,0.335,161,1.052]],["body/components/SettingsAccountPasswordFormComponent.html",[0,0.108,3,0.121,4,0.096,5,0.108,7,0.394,8,1.138,16,0.927,17,0.016,19,1.476,29,0.121,30,0.005,31,0.008,32,0.005,33,0.421,34,0.719,35,0.888,36,0.814,37,1.216,38,0.814,39,0.814,41,0.965,43,1.73,44,1.944,45,3.435,46,0.781,47,1.237,48,1.237,49,1.237,50,1.237,51,2.164,52,1.649,53,3.561,54,1.848,55,3.435,56,1.29,57,2.84,58,1.138,59,3.836,60,3.836,61,2.451,62,2.628,63,4.126,64,0.814,65,1.87,66,3.836,68,1.138,69,1.042,70,1.092,71,2.84,72,3.178,74,1.321,75,2.344,77,2.84,78,3.55,80,3.435,82,0.411,83,0.814,84,2.628,85,0.814,86,0.259,87,1.73,88,1.427,91,1.349,92,1.055,93,0.885,94,0.749,95,1.87,96,1.87,97,1.87,98,3.435,105,1.619,106,3.756,107,3.435,108,1.87,109,1.87,110,1.87,111,1.73,112,2.05,113,1.614,118,0.561,119,1.237,120,1.186,121,0.635,122,1.67,123,0.814,124,1.67,125,0.69,126,1.796,127,0.719,128,1.092,129,0.69,130,0.662,131,0.814,132,0.69,133,0.749,134,0.537,135,1.814,136,0.814,137,0.561,138,0.561,139,0.781,140,0.814,141,0.561,142,1.376,143,0.814,144,0.561,145,0.814,146,0.561,147,0.814,148,0.719,149,1.537,150,0.814,151,0.719,152,0.781,153,1.495,154,0.69,155,0.719,156,0.781,157,0.719,158,1.899,159,0.719,160,0.719,161,1.475,162,0.69,163,0.814,164,0.781,165,0.635,166,0.749,167,0.814,234,1.73,244,3.462,245,2.279,246,2.279,248,2.279,249,1.427,250,1.87,251,1.73,254,1.73,255,2.279,256,2.279,929,4.937,930,4.937,935,2.634,936,2.279]],["title/modules/SettingsModule.html",[206,1.052,937,2.735]],["body/modules/SettingsModule.html",[0,0.156,3,0.174,4,0.139,5,0.156,17,0.016,29,0.239,30,0.008,31,0.01,32,0.008,35,1.324,82,0.566,86,0.374,88,2.062,118,0.81,134,1.31,137,1.366,138,1.366,141,1.366,144,1.366,146,1.366,158,1.039,206,1.039,208,1.279,209,1.758,210,2.964,211,1.758,212,2.823,213,1.524,218,3.994,219,2.676,220,1.95,221,1.674,223,2.389,224,3.2,225,2.062,226,2.191,227,4.054,228,4.054,229,3.431,231,4.054,232,4.054,233,2.331,234,2.499,235,2.499,236,3.428,241,2.623,242,2.068,243,3.002,833,3.689,919,3.917,937,5.606,938,3.293,939,3.806,940,3.293,941,3.293,942,4.257,943,2.954,944,4.519]],["title/components/SettingsRootComponent.html",[33,0.335,162,1.009]],["body/components/SettingsRootComponent.html",[0,0.16,3,0.179,4,0.142,5,0.16,17,0.015,29,0.179,30,0.008,31,0.011,32,0.008,33,0.525,34,1.064,35,1.179,36,1.205,38,1.205,39,1.205,41,1.281,46,1.156,47,1.641,48,1.641,49,1.641,50,1.641,51,2.256,52,1.524,56,1.711,69,1.082,82,0.296,83,1.205,85,1.205,86,0.383,105,0.83,118,0.83,119,1.641,120,1.574,121,0.94,122,2.004,123,1.205,124,2.004,125,1.021,126,2.097,127,1.064,128,1.449,129,1.021,130,0.98,131,1.205,132,1.021,133,1.109,134,0.796,135,2.075,136,1.205,137,0.83,138,0.83,139,1.156,140,1.205,141,0.83,142,1.718,143,1.205,144,0.83,145,1.205,146,0.83,147,1.205,148,1.064,149,1.844,150,1.205,151,1.064,152,1.156,153,1.866,154,1.021,155,1.064,156,1.156,157,1.064,158,1.99,159,1.064,160,1.064,161,1.064,162,1.698,163,1.866,164,1.156,165,0.94,166,1.109,167,1.205,170,2.241,172,3.253,945,3.374,946,3.374,947,5.312]],["title/modules/SettingsRoutingModule.html",[206,1.052,942,2.36]],["body/modules/SettingsRoutingModule.html",[0,0.223,3,0.249,4,0.198,5,0.223,17,0.016,29,0.249,30,0.011,31,0.013,32,0.011,33,0.472,82,0.537,86,0.534,162,1.721,208,1.824,213,2.174,223,2.174,226,2.756,241,2.387,242,1.749,264,3.564,265,4.315,266,3.828,267,2.506,268,3.12,272,3.852,942,4.025,948,5.428]],["title/guards/UnauthorizedGuard.html",[239,2.36,388,2.735]],["body/guards/UnauthorizedGuard.html",[0,0.192,3,0.214,4,0.17,5,0.192,7,0.698,16,1.026,17,0.016,19,1.443,29,0.214,30,0.009,31,0.012,32,0.009,44,2.27,58,1.702,64,1.444,68,1.702,69,1.073,70,1.633,74,1.275,82,0.502,86,0.459,93,1.57,94,1.702,174,2.27,175,2.584,186,2.27,193,1.849,239,3.666,267,2.157,269,4.573,273,2.193,276,1.96,290,4.918,326,3.242,352,4.042,390,3.316,393,4.645,394,5.405,396,5.405,398,3.626,399,3.316,400,2.862,405,2.862,685,5.713,949,4.042,950,4.673,951,4.673]],["title/interfaces/UpdateAccountCommand.html",[454,1.191,839,2.531]],["body/interfaces/UpdateAccountCommand.html",[3,0.235,4,0.187,5,0.211,7,0.768,8,1.808,9,4.415,11,5.116,13,4.734,15,5.116,16,1.27,17,0.016,18,3.061,29,0.235,30,0.01,31,0.013,32,0.01,41,1.738,52,1.094,454,1.588,455,2.633,457,3.375,839,4.174,952,3.989]],["title/interfaces/UpdatePasswordCommand.html",[454,1.191,842,2.531]],["body/interfaces/UpdatePasswordCommand.html",[3,0.249,4,0.198,5,0.223,7,0.811,8,1.869,16,1.212,17,0.016,18,3.009,29,0.249,30,0.011,31,0.013,32,0.011,105,1.601,254,4.823,454,1.677,455,2.78,457,3.564,842,4.315,936,6.354,952,4.213]],["title/changelog.html",[953,2.494,954,2.494,955,3.214]],["body/changelog.html",[17,0.013,30,0.01,31,0.013,32,0.01,52,1.328,87,3.279,121,1.204,149,1.775,158,1.703,206,1.858,234,4.099,261,3.544,306,4.319,418,3.875,608,3.544,635,3.279,882,5.899,956,4.993,957,4.993,958,6.243,959,6.81,960,4.993,961,4.993,962,4.993,963,6.243,964,4.993,965,4.993,966,5.891,967,4.993,968,6.81,969,4.993,970,5.4,971,4.993,972,4.993,973,4.993,974,4.993,975,4.993,976,4.993,977,4.993,978,4.993,979,4.993,980,4.993,981,4.993,982,4.319,983,4.993,984,4.993,985,4.993,986,4.993,987,4.993,988,4.993,989,4.993,990,4.993,991,4.993,992,4.319]],["title/coverage.html",[993,4.557]],["body/coverage.html",[0,0.205,1,1.044,5,0.079,6,1.667,16,0.33,17,0.016,30,0.004,31,0.006,32,0.004,33,0.621,34,0.526,35,1.11,40,2.429,41,1.097,42,2.429,43,2.988,52,1.294,89,1.181,92,0.772,105,0.841,114,1.496,116,4.611,121,0.465,125,0.505,127,0.526,128,1.242,129,0.505,130,0.484,132,0.505,134,0.393,137,0.41,138,0.41,139,0.928,141,0.41,142,1.524,144,0.41,146,0.41,148,0.526,151,0.526,152,0.928,154,0.505,155,0.526,156,0.928,157,0.526,159,0.526,160,0.854,161,0.526,162,0.505,165,0.465,168,2.429,169,2.429,170,3.08,175,0.676,210,2.475,211,0.89,212,2.001,222,3.531,223,2.147,236,2.876,237,1.181,239,1.181,241,2.2,243,2.876,249,1.044,251,1.266,273,1.667,275,1.667,284,1.368,316,1.603,356,1.667,365,3.067,377,1.496,378,1.667,388,2.805,389,1.181,391,1.667,406,1.667,407,1.667,408,1.368,418,1.496,419,2.055,421,1.667,454,1.818,456,1.667,457,2.988,458,1.368,459,2.805,466,1.368,514,1.368,538,1.044,539,3.067,543,2.055,549,1.667,550,1.667,558,1.368,559,2.805,560,2.429,595,1.667,635,1.266,636,2.221,637,3.229,638,2.429,639,2.429,671,3.067,672,1.667,673,1.667,681,1.667,682,1.667,683,1.667,690,2.429,691,1.667,692,1.667,715,3.883,722,1.496,723,1.667,752,2.988,753,1.667,754,1.667,805,1.667,806,1.667,826,1.667,827,1.667,829,1.667,830,1.667,833,1.108,834,1.667,839,1.266,842,1.266,861,1.667,862,1.667,863,1.667,887,2.429,888,2.429,889,2.805,905,3.067,906,1.667,907,1.667,909,1.667,910,1.667,911,1.667,919,1.266,929,2.429,930,2.429,943,3.531,945,1.667,946,1.667,949,1.667,952,2.429,993,1.667,994,1.667,995,1.927,996,1.927,997,6.082,998,7.843,999,7.753,1000,3.13,1001,4.55,1002,4.55,1003,5.647,1004,1.927,1005,1.927,1006,1.667,1007,4.55,1008,1.667,1009,1.667,1010,1.667,1011,1.667,1012,1.667,1013,1.667,1014,1.667,1015,1.667,1016,1.667,1017,1.667,1018,1.667,1019,1.667,1020,1.667,1021,1.667,1022,1.667,1023,3.13,1024,1.667,1025,1.667,1026,1.667,1027,2.708,1028,1.667,1029,1.667,1030,1.927]],["title/dependencies.html",[209,2.141,1031,3.214]],["body/dependencies.html",[17,0.016,30,0.01,31,0.013,32,0.01,86,0.502,88,2.768,183,2.785,209,2.36,225,2.768,233,3.13,267,2.36,370,5.478,371,4.495,970,4.42,982,5.478,1032,5.11,1033,7.832,1034,5.11,1035,5.11,1036,5.11,1037,5.11,1038,5.11,1039,5.11,1040,5.11,1041,5.11,1042,5.11,1043,5.11,1044,5.11,1045,6.333,1046,5.11,1047,5.11,1048,5.11,1049,5.11,1050,5.11,1051,5.11]],["title/miscellaneous/functions.html",[1052,2.281,1053,4.011]],["body/miscellaneous/functions.html",[7,0.885,17,0.015,30,0.012,31,0.014,32,0.012,68,1.685,69,1.062,70,1.617,74,1.617,459,4.205,473,4.599,514,4.205,1006,5.989,1052,4.205,1053,5.126,1054,5.926,1055,5.926]],["title/index.html",[7,0.48,953,2.494,954,2.494]],["body/index.html",[4,0.17,17,0.012,30,0.009,31,0.012,32,0.009,33,0.574,69,1.073,92,1.871,221,2.055,357,4.042,612,4.645,679,4.042,701,4.042,882,3.626,890,3.316,926,4.042,992,5.713,1056,4.673,1057,5.986,1058,4.673,1059,6.604,1060,4.673,1061,4.673,1062,5.986,1063,6.964,1064,4.673,1065,4.673,1066,7.489,1067,4.673,1068,4.673,1069,4.673,1070,4.673,1071,4.673,1072,4.042,1073,4.673,1074,5.986,1075,4.673,1076,6.964,1077,4.673,1078,4.673,1079,4.673,1080,4.673,1081,4.673,1082,5.986,1083,4.673,1084,4.673,1085,4.673,1086,4.673,1087,4.673,1088,4.673,1089,4.673,1090,4.042,1091,4.673,1092,6.604,1093,6.604,1094,4.673,1095,6.964,1096,4.673,1097,4.673,1098,4.673,1099,4.673,1100,4.673,1101,6.604,1102,4.673,1103,4.673,1104,4.673]],["title/license.html",[953,2.494,954,2.494,1105,2.78]],["body/license.html",[4,0.212,17,0.012,30,0.009,31,0.012,32,0.009,53,2.73,78,2.927,160,1.216,204,4.506,221,1.96,612,5.012,678,3.164,919,2.927,966,3.856,994,3.856,1090,3.856,1105,3.856,1106,4.458,1107,4.458,1108,4.458,1109,4.458,1110,7.094,1111,4.458,1112,4.458,1113,4.458,1114,4.458,1115,5.806,1116,4.458,1117,4.458,1118,4.458,1119,4.458,1120,6.458,1121,6.458,1122,6.458,1123,4.458,1124,5.806,1125,4.458,1126,5.806,1127,5.806,1128,5.806,1129,4.458,1130,4.458,1131,4.458,1132,4.458,1133,5.806,1134,4.458,1135,5.806,1136,4.458,1137,5.806,1138,5.806,1139,6.458,1140,5.806,1141,4.458,1142,4.458,1143,4.458,1144,4.458,1145,4.458,1146,4.458,1147,4.458,1148,4.458,1149,4.458,1150,4.458,1151,4.458,1152,4.458,1153,4.458,1154,4.458,1155,4.458,1156,4.458,1157,4.458,1158,4.458,1159,4.458,1160,4.458,1161,4.458,1162,4.458,1163,4.458,1164,4.458,1165,5.806,1166,4.458,1167,4.458,1168,4.458,1169,4.458,1170,4.458,1171,4.458,1172,4.458,1173,4.458,1174,4.458,1175,4.458,1176,4.458,1177,4.458,1178,4.458]],["title/modules.html",[208,1.771]],["body/modules.html",[17,0.013,30,0.01,31,0.013,32,0.01,207,3.648,208,1.728,217,3.149,218,2.954,358,3.648,363,3.149,364,3.149,371,5.484,491,5.749,666,3.648,670,3.149,704,6.684,714,3.149,900,3.648,904,3.149,937,3.648,942,3.149,1179,7.727,1180,7.946,1181,7.407]],["title/overview.html",[1182,4.557]],["body/overview.html",[2,1.874,17,0.016,30,0.006,31,0.009,32,0.006,35,0.679,118,0.651,121,0.738,130,1.679,134,1.363,137,1.532,138,1.422,141,1.422,144,1.422,146,1.422,165,1.611,175,1.856,206,0.835,207,5.393,208,1.028,209,1.413,210,1.413,211,1.413,212,1.345,213,1.225,214,2.646,215,2.646,216,2.646,217,3.24,218,3.84,219,2.292,220,1.567,221,1.345,266,1.657,274,2.009,358,4.96,359,2.646,360,2.646,361,2.646,362,2.646,363,4.093,364,4.654,390,2.171,455,1.567,536,2.646,537,2.646,538,2.865,666,5.334,667,2.646,669,2.646,670,3.24,710,2.646,712,2.646,713,2.646,714,3.24,740,2.374,775,2.646,833,3.04,856,2.646,857,2.646,858,2.646,900,5.334,901,2.646,903,2.646,904,3.24,937,5.44,938,2.646,940,2.646,941,2.646,942,3.24,1182,2.646,1183,3.059,1184,3.059,1185,3.059,1186,3.059,1187,3.059,1188,3.059]],["title/routes.html",[266,2.854]],["body/routes.html",[17,0.014,30,0.013,31,0.014,32,0.013,266,3.382]],["title/miscellaneous/variables.html",[1052,2.281,1189,4.011]],["body/miscellaneous/variables.html",[7,0.309,16,1.335,17,0.016,30,0.004,31,0.007,32,0.004,34,0.565,35,1.538,125,0.542,127,0.565,129,0.542,130,0.833,132,0.542,134,0.422,137,0.705,138,0.44,141,0.44,144,0.44,146,0.44,148,0.565,151,0.565,154,0.542,155,0.565,157,0.565,159,0.565,161,0.565,162,0.542,175,0.726,179,4.219,180,3.597,210,3.07,211,1.53,212,2.657,217,1.267,218,1.905,222,1.606,223,2.663,224,2.904,227,2.572,228,2.572,229,3.113,230,2.943,231,2.572,232,2.572,236,3.982,237,1.267,239,1.267,241,3.047,243,3.982,316,2.429,363,1.267,364,1.267,365,1.606,366,1.79,368,1.79,369,1.79,372,1.79,389,1.267,400,2.54,405,1.267,419,3.113,423,1.468,464,2.352,538,1.121,539,1.606,540,1.79,543,3.113,547,1.79,548,2.867,670,1.267,671,1.606,714,1.267,715,1.606,716,1.79,717,1.79,718,1.79,719,1.79,720,1.79,722,2.572,833,1.189,904,1.267,905,1.606,919,2.723,942,1.267,943,1.606,944,1.79,1008,1.79,1009,1.79,1010,1.79,1011,1.79,1012,1.79,1013,1.79,1014,1.79,1015,1.79,1016,1.79,1017,1.79,1018,1.79,1019,1.79,1020,1.79,1021,1.79,1022,1.79,1024,1.79,1025,1.79,1026,1.79,1027,1.79,1028,2.867,1029,2.867,1052,1.468,1072,2.867,1189,1.79,1190,5.188,1191,4.146,1192,4.146,1193,7.002,1194,3.315,1195,4.741,1196,4.146,1197,4.146,1198,4.741,1199,2.069,1200,2.069,1201,4.741,1202,2.069,1203,2.069,1204,3.315,1205,3.315,1206,3.315,1207,3.315,1208,3.315,1209,3.315,1210,3.315,1211,3.315,1212,3.315]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"classes/AccountDto.html":{},"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"modules/AccountModule.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"modules/AccountRoutingModule.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"classes/AuthInfo.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthorizeAccountCommand.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"modules/CoreModule.html":{},"classes/CustomValidators.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"interfaces/FormControlError.html":{},"modules/GeneralModule.html":{},"components/GeneralRootComponent.html":{},"modules/GeneralRoutingModule.html":{},"interfaces/HttpError.html":{},"guards/LogoutGuard.html":{},"components/MainErrorComponent.html":{},"modules/MainModule.html":{},"components/MainRootComponent.html":{},"modules/MainRoutingModule.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"injectables/ManageService.html":{},"directives/MpgpFormControlErrorDirective.html":{},"modules/MpgpFormControlErrorModule.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"modules/ProfileModule.html":{},"components/ProfileRootComponent.html":{},"modules/ProfileRoutingModule.html":{},"components/ProfileWallContainerComponent.html":{},"interfaces/RegisterAccountCommand.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"modules/SettingsModule.html":{},"components/SettingsRootComponent.html":{},"modules/SettingsRoutingModule.html":{},"guards/UnauthorizedGuard.html":{},"interfaces/UpdateAccountCommand.html":{},"interfaces/UpdatePasswordCommand.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":116,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"injectables/ErrorsHandler.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"coverage.html":{}}}],["0.2s",{"_index":793,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["0.5s",{"_index":791,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["0.9.1",{"_index":1051,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":998,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1005,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1004,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1023,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":997,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1003,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1001,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1002,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1007,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1000,"title":{},"body":{"coverage.html":{}}}],["06",{"_index":959,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":958,"title":{},"body":{"changelog.html":{}}}],["0a06e52",{"_index":978,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":740,"title":{},"body":{"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"overview.html":{}}}],["1.0.0",{"_index":984,"title":{},"body":{"changelog.html":{}}}],["1.1.0",{"_index":980,"title":{},"body":{"changelog.html":{}}}],["1.2.0",{"_index":965,"title":{},"body":{"changelog.html":{}}}],["1.2.1",{"_index":956,"title":{},"body":{"changelog.html":{}}}],["10.1.0",{"_index":1047,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":113,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/ProfileCardComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["10px",{"_index":780,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["13",{"_index":1183,"title":{},"body":{"overview.html":{}}}],["14px",{"_index":734,"title":{},"body":{"components/MainRootComponent.html":{}}}],["15px",{"_index":799,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["16px",{"_index":802,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["17",{"_index":985,"title":{},"body":{"changelog.html":{}}}],["1bb74e1",{"_index":973,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":1107,"title":{},"body":{"license.html":{}}}],["20",{"_index":1184,"title":{},"body":{"overview.html":{}}}],["2018",{"_index":966,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2019",{"_index":957,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":1188,"title":{},"body":{"overview.html":{}}}],["23",{"_index":981,"title":{},"body":{"changelog.html":{}}}],["25px",{"_index":825,"title":{},"body":{"components/MainToolbarAvatarComponent.html":{}}}],["2em",{"_index":198,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{}}}],["3",{"_index":1186,"title":{},"body":{"overview.html":{}}}],["3.0.0",{"_index":1049,"title":{},"body":{"dependencies.html":{}}}],["3.1.4",{"_index":1044,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":967,"title":{},"body":{"changelog.html":{}}}],["300",{"_index":795,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["300000",{"_index":474,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["3bae2ff",{"_index":975,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":1185,"title":{},"body":{"overview.html":{}}}],["400px",{"_index":886,"title":{},"body":{"components/ProfileCardComponent.html":{}}}],["401",{"_index":618,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["403",{"_index":624,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["409",{"_index":342,"title":{},"body":{"injectables/AccountService.html":{}}}],["45px",{"_index":785,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["480px",{"_index":200,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{}}}],["4px",{"_index":708,"title":{},"body":{"components/MainErrorComponent.html":{}}}],["5",{"_index":775,"title":{},"body":{"components/MainScrollToTopComponent.html":{},"overview.html":{}}}],["50",{"_index":885,"title":{},"body":{"components/ProfileCardComponent.html":{}}}],["500",{"_index":625,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["503",{"_index":449,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["51d26ba",{"_index":988,"title":{},"body":{"changelog.html":{}}}],["5px",{"_index":732,"title":{},"body":{"components/MainRootComponent.html":{}}}],["6",{"_index":1061,"title":{},"body":{"index.html":{}}}],["6.5.2",{"_index":1045,"title":{},"body":{"dependencies.html":{}}}],["6355a61",{"_index":979,"title":{},"body":{"changelog.html":{}}}],["7.2.15",{"_index":1041,"title":{},"body":{"dependencies.html":{}}}],["76f936e",{"_index":969,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":1187,"title":{},"body":{"overview.html":{}}}],["8.0.0",{"_index":1038,"title":{},"body":{"dependencies.html":{}}}],["8.0.1",{"_index":1033,"title":{},"body":{"dependencies.html":{}}}],["8080:8080",{"_index":1071,"title":{},"body":{"index.html":{}}}],["82da58a",{"_index":983,"title":{},"body":{"changelog.html":{}}}],["8px",{"_index":709,"title":{},"body":{"components/MainErrorComponent.html":{}}}],["9",{"_index":104,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{}}}],["999",{"_index":797,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["__icon",{"_index":800,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["_exports",{"_index":722,"title":{},"body":{"modules/MainModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["_route",{"_index":398,"title":{},"body":{"guards/AuthGuard.html":{},"guards/LogoutGuard.html":{},"guards/UnauthorizedGuard.html":{}}}],["_state",{"_index":685,"title":{},"body":{"guards/LogoutGuard.html":{},"guards/UnauthorizedGuard.html":{}}}],["a6fda0a",{"_index":974,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":1126,"title":{},"body":{"license.html":{}}}],["absolute",{"_index":804,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["abstractcontrol",{"_index":553,"title":{},"body":{"classes/CustomValidators.html":{}}}],["accessors",{"_index":283,"title":{},"body":{"injectables/AccountService.html":{},"classes/CacheService.html":{},"components/MainToolbarAvatarComponent.html":{},"directives/MpgpFormControlErrorDirective.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{}}}],["account",{"_index":52,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"modules/AccountModule.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"interfaces/AuthorizeAccountCommand.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"modules/MainRoutingModule.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"injectables/ManageService.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"interfaces/RegisterAccountCommand.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{},"interfaces/UpdateAccountCommand.html":{},"changelog.html":{},"coverage.html":{}}}],["account.dto",{"_index":416,"title":{},"body":{"classes/AuthInfo.html":{}}}],["account.languages",{"_index":880,"title":{},"body":{"components/ProfileCardComponent.html":{}}}],["account.nickname",{"_index":879,"title":{},"body":{"components/ProfileCardComponent.html":{}}}],["account.service",{"_index":436,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["account.statusinfo",{"_index":881,"title":{},"body":{"components/ProfileCardComponent.html":{}}}],["accountdto",{"_index":1,"title":{"classes/AccountDto.html":{}},"body":{"classes/AccountDto.html":{},"classes/AuthInfo.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"coverage.html":{}}}],["accounterorr",{"_index":912,"title":{},"body":{"components/SettingsAccountContainerComponent.html":{}}}],["accountloginformcomponent",{"_index":34,"title":{"components/AccountLoginFormComponent.html":{}},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["accountloginrootcomponent",{"_index":125,"title":{"components/AccountLoginRootComponent.html":{}},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"modules/AccountRoutingModule.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["accountmodule",{"_index":207,"title":{"modules/AccountModule.html":{}},"body":{"modules/AccountModule.html":{},"modules.html":{},"overview.html":{}}}],["accountregisterformcomponent",{"_index":127,"title":{"components/AccountRegisterFormComponent.html":{}},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["accountregisterrootcomponent",{"_index":129,"title":{"components/AccountRegisterRootComponent.html":{}},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"modules/AccountRoutingModule.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["accountroutingmodule",{"_index":217,"title":{"modules/AccountRoutingModule.html":{}},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["accountservice",{"_index":175,"title":{"injectables/AccountService.html":{}},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{},"injectables/AccountService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/CoreModule.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{},"guards/LogoutGuard.html":{},"components/MainRootComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/ProfileCardContainerComponent.html":{},"guards/UnauthorizedGuard.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["activatedroute",{"_index":289,"title":{},"body":{"injectables/AccountService.html":{}}}],["activatedroutesnapshot",{"_index":394,"title":{},"body":{"guards/AuthGuard.html":{},"guards/LogoutGuard.html":{},"guards/UnauthorizedGuard.html":{}}}],["actual_component",{"_index":167,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["add",{"_index":882,"title":{},"body":{"components/ProfileCardComponent.html":{},"changelog.html":{},"index.html":{}}}],["addcontextinfo",{"_index":631,"title":{},"body":{"injectables/ErrorsLogger.html":{}}}],["addcontextinfo(error",{"_index":578,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["addedfriend",{"_index":868,"title":{},"body":{"components/ProfileCardComponent.html":{}}}],["addfriend",{"_index":866,"title":{},"body":{"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{}}}],["addfriend(id",{"_index":893,"title":{},"body":{"components/ProfileCardContainerComponent.html":{}}}],["advised",{"_index":1175,"title":{},"body":{"license.html":{}}}],["align",{"_index":202,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/MainErrorComponent.html":{}}}],["already",{"_index":260,"title":{},"body":{"components/AccountRegisterRootComponent.html":{}}}],["and/or",{"_index":1130,"title":{},"body":{"license.html":{}}}],["angular",{"_index":992,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["angular/animations",{"_index":1032,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1034,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/layout",{"_index":367,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/cli",{"_index":1078,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":225,"title":{},"body":{"modules/AccountModule.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{},"modules/MainModule.html":{},"modules/MpgpFormControlErrorModule.html":{},"modules/ProfileModule.html":{},"modules/SettingsModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":314,"title":{},"body":{"injectables/AccountService.html":{},"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"modules/CoreModule.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"injectables/ManageService.html":{}}}],["angular/compiler",{"_index":1035,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":86,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"modules/AccountModule.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"modules/AccountRoutingModule.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"modules/CoreModule.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"interfaces/FormControlError.html":{},"modules/GeneralModule.html":{},"components/GeneralRootComponent.html":{},"modules/GeneralRoutingModule.html":{},"guards/LogoutGuard.html":{},"components/MainErrorComponent.html":{},"modules/MainModule.html":{},"components/MainRootComponent.html":{},"modules/MainRoutingModule.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"injectables/ManageService.html":{},"directives/MpgpFormControlErrorDirective.html":{},"modules/MpgpFormControlErrorModule.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"modules/ProfileModule.html":{},"components/ProfileRootComponent.html":{},"modules/ProfileRoutingModule.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"modules/SettingsModule.html":{},"components/SettingsRootComponent.html":{},"modules/SettingsRoutingModule.html":{},"guards/UnauthorizedGuard.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":1036,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":88,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"modules/AccountModule.html":{},"components/AccountRegisterFormComponent.html":{},"classes/CustomValidators.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"modules/SettingsModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1040,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":233,"title":{},"body":{"modules/AccountModule.html":{},"modules/GeneralModule.html":{},"modules/MainModule.html":{},"modules/ProfileModule.html":{},"modules/SettingsModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":370,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":267,"title":{},"body":{"modules/AccountRoutingModule.html":{},"injectables/AccountService.html":{},"guards/AuthGuard.html":{},"injectables/ErrorsHandler.html":{},"modules/GeneralRoutingModule.html":{},"guards/LogoutGuard.html":{},"modules/MainRoutingModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"guards/UnauthorizedGuard.html":{},"dependencies.html":{}}}],["another",{"_index":346,"title":{},"body":{"injectables/AccountService.html":{}}}],["apiurl",{"_index":1204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":357,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["app'},{'name",{"_index":131,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["app.component",{"_index":376,"title":{},"body":{"modules/AppModule.html":{}}}],["appcomponent",{"_index":130,"title":{"components/AppComponent.html":{}},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["appid",{"_index":562,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["appmodule",{"_index":358,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":377,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["args",{"_index":516,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["arising",{"_index":1172,"title":{},"body":{"license.html":{}}}],["array.from(arguments",{"_index":517,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["arrow_drop_down",{"_index":824,"title":{},"body":{"components/MainToolbarAvatarComponent.html":{}}}],["artifacts",{"_index":1096,"title":{},"body":{"index.html":{}}}],["auth",{"_index":306,"title":{},"body":{"injectables/AccountService.html":{},"changelog.html":{}}}],["authguard",{"_index":389,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"modules/MainModule.html":{},"modules/MainRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authinfo",{"_index":284,"title":{"classes/AuthInfo.html":{}},"body":{"injectables/AccountService.html":{},"classes/AuthInfo.html":{},"coverage.html":{}}}],["authinfosubject",{"_index":277,"title":{},"body":{"injectables/AccountService.html":{}}}],["authinfovalue",{"_index":278,"title":{},"body":{"injectables/AccountService.html":{}}}],["authinterceptor",{"_index":419,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"interceptors/AuthInterceptor.html":{},"modules/CoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authorizationheader",{"_index":437,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["authorizationheader['authorization",{"_index":439,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["authorizeaccountcommand",{"_index":89,"title":{"interfaces/AuthorizeAccountCommand.html":{}},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"injectables/AccountService.html":{},"interfaces/AuthorizeAccountCommand.html":{},"coverage.html":{}}}],["authtoken",{"_index":409,"title":{},"body":{"classes/AuthInfo.html":{},"interceptors/AuthInterceptor.html":{}}}],["auto",{"_index":117,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/MainRootComponent.html":{}}}],["automatically",{"_index":1087,"title":{},"body":{"index.html":{}}}],["available",{"_index":491,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"modules.html":{}}}],["avatar",{"_index":9,"title":{},"body":{"classes/AccountDto.html":{},"components/MainToolbarAvatarComponent.html":{},"components/ProfileCardComponent.html":{},"interfaces/RegisterAccountCommand.html":{},"components/SettingsAccountDataFormComponent.html":{},"interfaces/UpdateAccountCommand.html":{}}}],["avatar'},{'name",{"_index":143,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["avatar.component.html",{"_index":808,"title":{},"body":{"components/MainToolbarAvatarComponent.html":{}}}],["avatar.component.scss",{"_index":807,"title":{},"body":{"components/MainToolbarAvatarComponent.html":{}}}],["avatar.component.ts",{"_index":806,"title":{},"body":{"components/MainToolbarAvatarComponent.html":{},"coverage.html":{}}}],["avatar.component.ts:15",{"_index":811,"title":{},"body":{"components/MainToolbarAvatarComponent.html":{}}}],["avatar.component.ts:18",{"_index":813,"title":{},"body":{"components/MainToolbarAvatarComponent.html":{}}}],["avatar.component.ts:25",{"_index":815,"title":{},"body":{"components/MainToolbarAvatarComponent.html":{}}}],["avatar/main",{"_index":805,"title":{},"body":{"components/MainToolbarAvatarComponent.html":{},"coverage.html":{}}}],["background",{"_index":776,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["bearer",{"_index":440,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["before",{"_index":610,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["beta.26",{"_index":1039,"title":{},"body":{"dependencies.html":{}}}],["binary",{"_index":1115,"title":{},"body":{"license.html":{}}}],["block",{"_index":731,"title":{},"body":{"components/MainRootComponent.html":{}}}],["boolean",{"_index":326,"title":{},"body":{"injectables/AccountService.html":{},"guards/AuthGuard.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"interfaces/FormControlError.html":{},"guards/LogoutGuard.html":{},"directives/MpgpFormControlErrorDirective.html":{},"guards/UnauthorizedGuard.html":{}}}],["bootstrap",{"_index":211,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/GeneralModule.html":{},"modules/MainModule.html":{},"modules/MpgpFormControlErrorModule.html":{},"modules/ProfileModule.html":{},"modules/SettingsModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["border",{"_index":778,"title":{},"body":{"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/ProfileCardComponent.html":{}}}],["bottom",{"_index":781,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["breaking",{"_index":989,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1180,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":371,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get",{"_index":384,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":373,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":372,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["browserclient",{"_index":679,"title":{},"body":{"components/GeneralRootComponent.html":{},"index.html":{}}}],["browsermodule",{"_index":369,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["bsd",{"_index":1106,"title":{},"body":{"license.html":{}}}],["bug",{"_index":960,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":1095,"title":{},"body":{"index.html":{}}}],["business",{"_index":1161,"title":{},"body":{"license.html":{}}}],["button",{"_index":707,"title":{},"body":{"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{}}}],["c",{"_index":1111,"title":{},"body":{"license.html":{}}}],["cache",{"_index":468,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["cacheable",{"_index":1006,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["cacheable(cachetime",{"_index":1055,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cachecontent",{"_index":458,"title":{"interfaces/CacheContent.html":{}},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"coverage.html":{}}}],["cacheservice",{"_index":466,"title":{"classes/CacheService.html":{}},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"coverage.html":{}}}],["cacheservice.cachetime",{"_index":480,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["cacheservice.instance.get(key",{"_index":520,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["cacheservice.instancevalue",{"_index":477,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["cachetime",{"_index":473,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"miscellaneous/functions.html":{}}}],["canactivate",{"_index":269,"title":{},"body":{"modules/AccountRoutingModule.html":{},"guards/AuthGuard.html":{},"guards/LogoutGuard.html":{},"modules/MainRoutingModule.html":{},"guards/UnauthorizedGuard.html":{}}}],["canactivate(_route",{"_index":393,"title":{},"body":{"guards/AuthGuard.html":{},"guards/LogoutGuard.html":{},"guards/UnauthorizedGuard.html":{}}}],["card",{"_index":152,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{},"coverage.html":{}}}],["card'},{'name",{"_index":150,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["card.component.html",{"_index":865,"title":{},"body":{"components/ProfileCardComponent.html":{}}}],["card.component.scss",{"_index":864,"title":{},"body":{"components/ProfileCardComponent.html":{}}}],["card.component.ts",{"_index":863,"title":{},"body":{"components/ProfileCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:14",{"_index":870,"title":{},"body":{"components/ProfileCardComponent.html":{}}}],["card.component.ts:15",{"_index":871,"title":{},"body":{"components/ProfileCardComponent.html":{}}}],["card.component.ts:16",{"_index":872,"title":{},"body":{"components/ProfileCardComponent.html":{}}}],["card.component.ts:18",{"_index":875,"title":{},"body":{"components/ProfileCardComponent.html":{}}}],["card.component.ts:22",{"_index":873,"title":{},"body":{"components/ProfileCardComponent.html":{}}}],["card.component.ts:26",{"_index":874,"title":{},"body":{"components/ProfileCardComponent.html":{}}}],["card/profile",{"_index":862,"title":{},"body":{"components/ProfileCardComponent.html":{},"coverage.html":{}}}],["catcherror",{"_index":184,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{},"injectables/AccountService.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{},"injectables/ManageService.html":{},"components/SettingsAccountContainerComponent.html":{}}}],["catcherror(_",{"_index":330,"title":{},"body":{"injectables/AccountService.html":{},"injectables/ManageService.html":{}}}],["catcherror(err",{"_index":575,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["catcherror(error",{"_index":191,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{},"injectables/AccountService.html":{},"components/SettingsAccountContainerComponent.html":{}}}],["caused",{"_index":1163,"title":{},"body":{"license.html":{}}}],["ccc",{"_index":777,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["center",{"_index":203,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/MainErrorComponent.html":{}}}],["change",{"_index":926,"title":{},"body":{"components/SettingsAccountContainerComponent.html":{},"index.html":{}}}],["changedetection",{"_index":47,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["changedetectionstrategy",{"_index":83,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":48,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["changelog",{"_index":955,"title":{"changelog.html":{}},"body":{}}],["changes",{"_index":963,"title":{},"body":{"changelog.html":{}}}],["check",{"_index":1103,"title":{},"body":{"index.html":{}}}],["children",{"_index":270,"title":{},"body":{"modules/AccountRoutingModule.html":{},"modules/MainRoutingModule.html":{}}}],["class",{"_index":0,"title":{"classes/AccountDto.html":{},"classes/AppPage.html":{},"classes/AuthInfo.html":{},"classes/CacheService.html":{},"classes/CustomValidators.html":{}},"body":{"classes/AccountDto.html":{},"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"modules/AccountModule.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"modules/AccountRoutingModule.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"classes/AuthInfo.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"modules/CoreModule.html":{},"classes/CustomValidators.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"interfaces/FormControlError.html":{},"modules/GeneralModule.html":{},"components/GeneralRootComponent.html":{},"modules/GeneralRoutingModule.html":{},"guards/LogoutGuard.html":{},"components/MainErrorComponent.html":{},"modules/MainModule.html":{},"components/MainRootComponent.html":{},"modules/MainRoutingModule.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"injectables/ManageService.html":{},"directives/MpgpFormControlErrorDirective.html":{},"modules/MpgpFormControlErrorModule.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"modules/ProfileModule.html":{},"components/ProfileRootComponent.html":{},"modules/ProfileRoutingModule.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"modules/SettingsModule.html":{},"components/SettingsRootComponent.html":{},"modules/SettingsRoutingModule.html":{},"guards/UnauthorizedGuard.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AccountDto.html":{},"classes/AppPage.html":{},"classes/AuthInfo.html":{},"classes/CacheService.html":{},"classes/CustomValidators.html":{},"overview.html":{}}}],["clause",{"_index":1108,"title":{},"body":{"license.html":{}}}],["cli",{"_index":1059,"title":{},"body":{"index.html":{}}}],["clientid",{"_index":1206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_accountmodule",{"_index":214,"title":{},"body":{"modules/AccountModule.html":{},"overview.html":{}}}],["cluster_accountmodule_declarations",{"_index":215,"title":{},"body":{"modules/AccountModule.html":{},"overview.html":{}}}],["cluster_accountmodule_imports",{"_index":216,"title":{},"body":{"modules/AccountModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":359,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":362,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":360,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":361,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":536,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_providers",{"_index":537,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_generalmodule",{"_index":667,"title":{},"body":{"modules/GeneralModule.html":{},"overview.html":{}}}],["cluster_generalmodule_declarations",{"_index":668,"title":{},"body":{"modules/GeneralModule.html":{}}}],["cluster_generalmodule_imports",{"_index":669,"title":{},"body":{"modules/GeneralModule.html":{},"overview.html":{}}}],["cluster_mainmodule",{"_index":710,"title":{},"body":{"modules/MainModule.html":{},"overview.html":{}}}],["cluster_mainmodule_declarations",{"_index":711,"title":{},"body":{"modules/MainModule.html":{}}}],["cluster_mainmodule_exports",{"_index":713,"title":{},"body":{"modules/MainModule.html":{},"overview.html":{}}}],["cluster_mainmodule_imports",{"_index":712,"title":{},"body":{"modules/MainModule.html":{},"overview.html":{}}}],["cluster_mpgpformcontrolerrormodule",{"_index":856,"title":{},"body":{"modules/MpgpFormControlErrorModule.html":{},"overview.html":{}}}],["cluster_mpgpformcontrolerrormodule_declarations",{"_index":857,"title":{},"body":{"modules/MpgpFormControlErrorModule.html":{},"overview.html":{}}}],["cluster_mpgpformcontrolerrormodule_exports",{"_index":858,"title":{},"body":{"modules/MpgpFormControlErrorModule.html":{},"overview.html":{}}}],["cluster_profilemodule",{"_index":901,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_profilemodule_declarations",{"_index":902,"title":{},"body":{"modules/ProfileModule.html":{}}}],["cluster_profilemodule_imports",{"_index":903,"title":{},"body":{"modules/ProfileModule.html":{},"overview.html":{}}}],["cluster_settingsmodule",{"_index":938,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_declarations",{"_index":939,"title":{},"body":{"modules/SettingsModule.html":{}}}],["cluster_settingsmodule_imports",{"_index":940,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_providers",{"_index":941,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["code",{"_index":1090,"title":{},"body":{"index.html":{},"license.html":{}}}],["color",{"_index":727,"title":{},"body":{"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{}}}],["command",{"_index":91,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"injectables/AccountService.html":{},"injectables/ManageService.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["command).pipe",{"_index":329,"title":{},"body":{"injectables/AccountService.html":{},"injectables/ManageService.html":{}}}],["command.ts",{"_index":457,"title":{},"body":{"interfaces/AuthorizeAccountCommand.html":{},"interfaces/RegisterAccountCommand.html":{},"interfaces/UpdateAccountCommand.html":{},"interfaces/UpdatePasswordCommand.html":{},"coverage.html":{}}}],["commit",{"_index":987,"title":{},"body":{"changelog.html":{}}}],["commonmodule",{"_index":224,"title":{},"body":{"modules/AccountModule.html":{},"modules/MainModule.html":{},"modules/MpgpFormControlErrorModule.html":{},"modules/ProfileModule.html":{},"modules/SettingsModule.html":{},"miscellaneous/variables.html":{}}}],["compat",{"_index":1046,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":33,"title":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"modules/AccountRoutingModule.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"modules/GeneralRoutingModule.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"modules/MainRoutingModule.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"modules/ProfileRoutingModule.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{},"modules/SettingsRoutingModule.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":123,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["components",{"_index":35,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"modules/AccountModule.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"modules/GeneralModule.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"modules/MainModule.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"modules/ProfileModule.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"modules/SettingsModule.html":{},"components/SettingsRootComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["conditions",{"_index":1122,"title":{},"body":{"license.html":{}}}],["consequential",{"_index":1154,"title":{},"body":{"license.html":{}}}],["console.error",{"_index":572,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["console.error('can",{"_index":576,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["console.error('todo",{"_index":899,"title":{},"body":{"components/ProfileCardContainerComponent.html":{}}}],["console.error(_",{"_index":848,"title":{},"body":{"injectables/ManageService.html":{}}}],["const",{"_index":242,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"modules/CoreModule.html":{},"classes/CustomValidators.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"modules/GeneralModule.html":{},"modules/GeneralRoutingModule.html":{},"modules/MainModule.html":{},"modules/MainRoutingModule.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["constructor",{"_index":64,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"injectables/AccountService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"guards/LogoutGuard.html":{},"components/MainRootComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"injectables/ManageService.html":{},"directives/MpgpFormControlErrorDirective.html":{},"components/ProfileCardContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"guards/UnauthorizedGuard.html":{}}}],["constructor(accountservice",{"_index":174,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/ErrorsLogger.html":{},"guards/LogoutGuard.html":{},"components/MainRootComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/ProfileCardContainerComponent.html":{},"guards/UnauthorizedGuard.html":{}}}],["constructor(el",{"_index":851,"title":{},"body":{"directives/MpgpFormControlErrorDirective.html":{}}}],["constructor(fb",{"_index":65,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["constructor(http",{"_index":286,"title":{},"body":{"injectables/AccountService.html":{},"injectables/ManageService.html":{}}}],["constructor(injector",{"_index":599,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["constructor(manageservice",{"_index":914,"title":{},"body":{"components/SettingsAccountContainerComponent.html":{}}}],["constructor(private",{"_index":93,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"injectables/AccountService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"injectables/ErrorsHandler.html":{},"interfaces/FormControlError.html":{},"guards/LogoutGuard.html":{},"components/MainToolbarAvatarComponent.html":{},"injectables/ManageService.html":{},"directives/MpgpFormControlErrorDirective.html":{},"components/ProfileCardContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"guards/UnauthorizedGuard.html":{}}}],["constructor(public",{"_index":726,"title":{},"body":{"components/MainRootComponent.html":{}}}],["contact",{"_index":703,"title":{},"body":{"components/MainErrorComponent.html":{}}}],["container",{"_index":890,"title":{},"body":{"components/ProfileCardContainerComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"index.html":{}}}],["container'},{'name",{"_index":153,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["container.component.html",{"_index":891,"title":{},"body":{"components/ProfileCardContainerComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{}}}],["container.component.ts",{"_index":889,"title":{},"body":{"components/ProfileCardContainerComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"coverage.html":{}}}],["container.component.ts:12",{"_index":892,"title":{},"body":{"components/ProfileCardContainerComponent.html":{}}}],["container.component.ts:15",{"_index":898,"title":{},"body":{"components/ProfileCardContainerComponent.html":{}}}],["container.component.ts:17",{"_index":918,"title":{},"body":{"components/SettingsAccountContainerComponent.html":{}}}],["container.component.ts:18",{"_index":915,"title":{},"body":{"components/SettingsAccountContainerComponent.html":{}}}],["container.component.ts:19",{"_index":894,"title":{},"body":{"components/ProfileCardContainerComponent.html":{}}}],["container.component.ts:22",{"_index":916,"title":{},"body":{"components/SettingsAccountContainerComponent.html":{}}}],["container.component.ts:23",{"_index":896,"title":{},"body":{"components/ProfileCardContainerComponent.html":{}}}],["container.component.ts:36",{"_index":917,"title":{},"body":{"components/SettingsAccountContainerComponent.html":{}}}],["container/profile",{"_index":888,"title":{},"body":{"components/ProfileCardContainerComponent.html":{},"components/ProfileWallContainerComponent.html":{},"coverage.html":{}}}],["container/settings",{"_index":911,"title":{},"body":{"components/SettingsAccountContainerComponent.html":{},"coverage.html":{}}}],["containers",{"_index":236,"title":{},"body":{"modules/AccountModule.html":{},"modules/GeneralModule.html":{},"modules/MainModule.html":{},"modules/ProfileModule.html":{},"modules/SettingsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["context",{"_index":1028,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contract",{"_index":1167,"title":{},"body":{"license.html":{}}}],["contributors",{"_index":1135,"title":{},"body":{"license.html":{}}}],["control",{"_index":977,"title":{},"body":{"changelog.html":{}}}],["copyright",{"_index":1110,"title":{},"body":{"license.html":{}}}],["core",{"_index":970,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["core/core.module",{"_index":374,"title":{},"body":{"modules/AppModule.html":{}}}],["core/interfaces/account.dto",{"_index":568,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{}}}],["core/interfaces/authorize",{"_index":90,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{}}}],["core/interfaces/register",{"_index":250,"title":{},"body":{"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["core/interfaces/update",{"_index":845,"title":{},"body":{"injectables/ManageService.html":{},"components/SettingsAccountContainerComponent.html":{}}}],["core/services/account.service",{"_index":186,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{},"guards/AuthGuard.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{},"guards/LogoutGuard.html":{},"components/MainRootComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/ProfileCardContainerComponent.html":{},"guards/UnauthorizedGuard.html":{}}}],["coremodule",{"_index":363,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["coverage",{"_index":993,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created",{"_index":609,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["createform",{"_index":59,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["crew",{"_index":1212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentscroll",{"_index":774,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["cursor",{"_index":782,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["custom",{"_index":976,"title":{},"body":{"changelog.html":{}}}],["customvalidators",{"_index":251,"title":{"classes/CustomValidators.html":{}},"body":{"components/AccountRegisterFormComponent.html":{},"classes/CustomValidators.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"coverage.html":{}}}],["customvalidators.matchpassword",{"_index":256,"title":{},"body":{"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["damage",{"_index":1178,"title":{},"body":{"license.html":{}}}],["damages",{"_index":1155,"title":{},"body":{"license.html":{}}}],["data",{"_index":160,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"injectables/ManageService.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{},"coverage.html":{},"license.html":{}}}],["date",{"_index":24,"title":{},"body":{"classes/AccountDto.html":{}}}],["date.now",{"_index":497,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["declarations",{"_index":210,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/GeneralModule.html":{},"modules/MainModule.html":{},"modules/MpgpFormControlErrorModule.html":{},"modules/ProfileModule.html":{},"modules/SettingsModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["default",{"_index":179,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{},"injectables/AccountService.html":{},"classes/CacheService.html":{},"components/MainScrollToTopComponent.html":{},"injectables/ManageService.html":{},"components/SettingsAccountContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":19,"title":{},"body":{"classes/AccountDto.html":{},"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"injectables/AccountService.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"classes/AuthInfo.html":{},"interceptors/AuthInterceptor.html":{},"classes/CacheService.html":{},"classes/CustomValidators.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"guards/LogoutGuard.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"injectables/ManageService.html":{},"directives/MpgpFormControlErrorDirective.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"guards/UnauthorizedGuard.html":{}}}],["delay",{"_index":433,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["demo",{"_index":110,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["dependencies",{"_index":209,"title":{"dependencies.html":{}},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/GeneralModule.html":{},"modules/MainModule.html":{},"modules/MpgpFormControlErrorModule.html":{},"modules/ProfileModule.html":{},"modules/SettingsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descriptor",{"_index":508,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["descriptor.value",{"_index":513,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["deutsch",{"_index":934,"title":{},"body":{"components/SettingsAccountDataFormComponent.html":{}}}],["dev",{"_index":1084,"title":{},"body":{"index.html":{}}}],["development",{"_index":1081,"title":{},"body":{"index.html":{}}}],["direct",{"_index":1149,"title":{},"body":{"license.html":{}}}],["directive",{"_index":121,"title":{"directives/MpgpFormControlErrorDirective.html":{}},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"interfaces/FormControlError.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"directives/MpgpFormControlErrorDirective.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":164,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"directives/MpgpFormControlErrorDirective.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1094,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1099,"title":{},"body":{"index.html":{}}}],["disclaimed",{"_index":1145,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":204,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{},"license.html":{}}}],["display",{"_index":729,"title":{},"body":{"components/MainRootComponent.html":{}}}],["dist",{"_index":1098,"title":{},"body":{"index.html":{}}}],["distribution",{"_index":1132,"title":{},"body":{"license.html":{}}}],["docker",{"_index":1063,"title":{},"body":{"index.html":{}}}],["document.body.click",{"_index":629,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["document.body.scrolltop",{"_index":770,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["document.documentelement.scrolltop",{"_index":769,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["documentation",{"_index":994,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["dom",{"_index":38,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["don't",{"_index":196,"title":{},"body":{"components/AccountLoginRootComponent.html":{}}}],["don\\'t",{"_index":205,"title":{},"body":{"components/AccountLoginRootComponent.html":{}}}],["dynamic",{"_index":1042,"title":{},"body":{"dependencies.html":{}}}],["e04326c",{"_index":971,"title":{},"body":{"changelog.html":{}}}],["e2e/src/app.po.ts",{"_index":378,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:5",{"_index":382,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:9",{"_index":381,"title":{},"body":{"classes/AppPage.html":{}}}],["ease",{"_index":792,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["el",{"_index":648,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{}}}],["element",{"_index":120,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["element(by.css('mat",{"_index":385,"title":{},"body":{"classes/AppPage.html":{}}}],["elementref",{"_index":645,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{}}}],["empty",{"_index":182,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{},"components/SettingsAccountContainerComponent.html":{}}}],["encapsulation",{"_index":49,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["english",{"_index":933,"title":{},"body":{"components/SettingsAccountDataFormComponent.html":{}}}],["env/environment",{"_index":317,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"components/MainToolbarAvatarComponent.html":{},"injectables/ManageService.html":{},"components/ProfileCardComponent.html":{}}}],["environment",{"_index":316,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"components/MainToolbarAvatarComponent.html":{},"injectables/ManageService.html":{},"components/ProfileCardComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl}account",{"_index":307,"title":{},"body":{"injectables/AccountService.html":{}}}],["environment.apiurl}manage",{"_index":844,"title":{},"body":{"injectables/ManageService.html":{}}}],["environment.clientid",{"_index":582,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["environment.imageurl",{"_index":821,"title":{},"body":{"components/MainToolbarAvatarComponent.html":{},"components/ProfileCardComponent.html":{}}}],["environment.production",{"_index":571,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{}}}],["err",{"_index":577,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["err.pipe",{"_index":446,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["error",{"_index":339,"title":{},"body":{"injectables/AccountService.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"components/MainErrorComponent.html":{},"modules/MainRoutingModule.html":{}}}],["error'},{'name",{"_index":136,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["error('invalid",{"_index":332,"title":{},"body":{"injectables/AccountService.html":{},"injectables/ManageService.html":{}}}],["error('that",{"_index":343,"title":{},"body":{"injectables/AccountService.html":{}}}],["error.component.html",{"_index":694,"title":{},"body":{"components/MainErrorComponent.html":{}}}],["error.component.scss",{"_index":693,"title":{},"body":{"components/MainErrorComponent.html":{}}}],["error.component.ts",{"_index":692,"title":{},"body":{"components/MainErrorComponent.html":{},"coverage.html":{}}}],["error.directive",{"_index":860,"title":{},"body":{"modules/MpgpFormControlErrorModule.html":{}}}],["error.directive.ts",{"_index":639,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{},"coverage.html":{}}}],["error.directive.ts:14",{"_index":852,"title":{},"body":{"directives/MpgpFormControlErrorDirective.html":{}}}],["error.directive.ts:18",{"_index":853,"title":{},"body":{"directives/MpgpFormControlErrorDirective.html":{}}}],["error.directive.ts:26",{"_index":854,"title":{},"body":{"directives/MpgpFormControlErrorDirective.html":{}}}],["error.dto",{"_index":417,"title":{},"body":{"classes/AuthInfo.html":{}}}],["error.dto.ts",{"_index":682,"title":{},"body":{"interfaces/HttpError.html":{},"coverage.html":{}}}],["error.message",{"_index":584,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["error.stack",{"_index":592,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["error.status",{"_index":448,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"injectables/ErrorsHandler.html":{}}}],["error.tostring",{"_index":585,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["error.value",{"_index":340,"title":{},"body":{"injectables/AccountService.html":{}}}],["error.value.status",{"_index":341,"title":{},"body":{"injectables/AccountService.html":{}}}],["error/index.ts",{"_index":859,"title":{},"body":{"modules/MpgpFormControlErrorModule.html":{}}}],["error/main",{"_index":691,"title":{},"body":{"components/MainErrorComponent.html":{},"coverage.html":{}}}],["error/mpgp",{"_index":638,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{},"coverage.html":{}}}],["errorcode",{"_index":410,"title":{},"body":{"classes/AuthInfo.html":{},"interfaces/HttpError.html":{}}}],["errorhandler",{"_index":423,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"modules/CoreModule.html":{},"injectables/ErrorsHandler.html":{},"miscellaneous/variables.html":{}}}],["errors",{"_index":608,"title":{},"body":{"injectables/ErrorsHandler.html":{},"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{},"changelog.html":{}}}],["errors.matchpassword",{"_index":663,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{}}}],["errors.maxlength",{"_index":658,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{}}}],["errors.maxlength.requiredlength",{"_index":660,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{}}}],["errors.minlength",{"_index":654,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{}}}],["errors.minlength.requiredlength",{"_index":657,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{}}}],["errors.pattern",{"_index":661,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{}}}],["errors.pattern.requiredpattern",{"_index":662,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{}}}],["errors.required",{"_index":653,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{}}}],["errorshandler",{"_index":543,"title":{"injectables/ErrorsHandler.html":{}},"body":{"modules/CoreModule.html":{},"injectables/ErrorsHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["errorslogger",{"_index":538,"title":{"injectables/ErrorsLogger.html":{}},"body":{"modules/CoreModule.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["errorwithcontext",{"_index":558,"title":{"interfaces/ErrorWithContext.html":{}},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{},"coverage.html":{}}}],["errorwithcontext).pipe",{"_index":574,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["even",{"_index":1174,"title":{},"body":{"license.html":{}}}],["event",{"_index":78,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"license.html":{}}}],["event.stoppropagation",{"_index":108,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["eventemitter",{"_index":72,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/ProfileCardComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["example",{"_index":932,"title":{},"body":{"components/SettingsAccountDataFormComponent.html":{}}}],["exemplary",{"_index":1153,"title":{},"body":{"license.html":{}}}],["expiry",{"_index":460,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["export",{"_index":29,"title":{},"body":{"classes/AccountDto.html":{},"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"modules/AccountModule.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"modules/AccountRoutingModule.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"classes/AuthInfo.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthorizeAccountCommand.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"modules/CoreModule.html":{},"classes/CustomValidators.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"interfaces/FormControlError.html":{},"modules/GeneralModule.html":{},"components/GeneralRootComponent.html":{},"modules/GeneralRoutingModule.html":{},"interfaces/HttpError.html":{},"guards/LogoutGuard.html":{},"components/MainErrorComponent.html":{},"modules/MainModule.html":{},"components/MainRootComponent.html":{},"modules/MainRoutingModule.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"injectables/ManageService.html":{},"directives/MpgpFormControlErrorDirective.html":{},"modules/MpgpFormControlErrorModule.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"modules/ProfileModule.html":{},"components/ProfileRootComponent.html":{},"modules/ProfileRoutingModule.html":{},"components/ProfileWallContainerComponent.html":{},"interfaces/RegisterAccountCommand.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"modules/SettingsModule.html":{},"components/SettingsRootComponent.html":{},"modules/SettingsRoutingModule.html":{},"guards/UnauthorizedGuard.html":{},"interfaces/UpdateAccountCommand.html":{},"interfaces/UpdatePasswordCommand.html":{}}}],["exports",{"_index":213,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/GeneralModule.html":{},"modules/GeneralRoutingModule.html":{},"modules/MainModule.html":{},"modules/MainRoutingModule.html":{},"modules/MpgpFormControlErrorModule.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"overview.html":{}}}],["express",{"_index":1136,"title":{},"body":{"license.html":{}}}],["extends",{"_index":561,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["fallback",{"_index":479,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["fallback.pipe(tap(value",{"_index":487,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["false",{"_index":405,"title":{},"body":{"guards/AuthGuard.html":{},"guards/LogoutGuard.html":{},"modules/MainRoutingModule.html":{},"components/MainScrollToTopComponent.html":{},"guards/UnauthorizedGuard.html":{},"miscellaneous/variables.html":{}}}],["fb",{"_index":71,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["fe62a3f",{"_index":964,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":968,"title":{},"body":{"changelog.html":{}}}],["features/account/account.module#accountmodule",{"_index":749,"title":{},"body":{"modules/MainRoutingModule.html":{}}}],["features/general/general.module#generalmodule",{"_index":745,"title":{},"body":{"modules/MainRoutingModule.html":{}}}],["features/profile/profile.module#profilemodule",{"_index":747,"title":{},"body":{"modules/MainRoutingModule.html":{}}}],["features/settings/settings.module#settingsmodule",{"_index":748,"title":{},"body":{"modules/MainRoutingModule.html":{}}}],["fff",{"_index":728,"title":{},"body":{"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AccountDto.html":{},"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"modules/AccountModule.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"modules/AccountRoutingModule.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"classes/AuthInfo.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthorizeAccountCommand.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"modules/CoreModule.html":{},"classes/CustomValidators.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"interfaces/FormControlError.html":{},"modules/GeneralModule.html":{},"components/GeneralRootComponent.html":{},"modules/GeneralRoutingModule.html":{},"interfaces/HttpError.html":{},"guards/LogoutGuard.html":{},"components/MainErrorComponent.html":{},"modules/MainModule.html":{},"components/MainRootComponent.html":{},"modules/MainRoutingModule.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"injectables/ManageService.html":{},"directives/MpgpFormControlErrorDirective.html":{},"modules/MpgpFormControlErrorModule.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"modules/ProfileModule.html":{},"components/ProfileRootComponent.html":{},"modules/ProfileRoutingModule.html":{},"components/ProfileWallContainerComponent.html":{},"interfaces/RegisterAccountCommand.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"modules/SettingsModule.html":{},"components/SettingsRootComponent.html":{},"modules/SettingsRoutingModule.html":{},"guards/UnauthorizedGuard.html":{},"interfaces/UpdateAccountCommand.html":{},"interfaces/UpdatePasswordCommand.html":{},"coverage.html":{}}}],["files",{"_index":1089,"title":{},"body":{"index.html":{}}}],["fill",{"_index":801,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["filter",{"_index":816,"title":{},"body":{"components/MainToolbarAvatarComponent.html":{}}}],["filter(x",{"_index":818,"title":{},"body":{"components/MainToolbarAvatarComponent.html":{}}}],["fitness",{"_index":1142,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":788,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["fixes",{"_index":961,"title":{},"body":{"changelog.html":{}}}],["flex",{"_index":739,"title":{},"body":{"components/MainRootComponent.html":{}}}],["focus",{"_index":735,"title":{},"body":{"components/MainRootComponent.html":{}}}],["following",{"_index":1121,"title":{},"body":{"license.html":{}}}],["form",{"_index":53,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"classes/CustomValidators.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"license.html":{}}}],["form'},{'name",{"_index":124,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["form.component.html",{"_index":57,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["form.component.scss",{"_index":55,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["form.component.ts",{"_index":43,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:14",{"_index":81,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{}}}],["form.component.ts:15",{"_index":248,"title":{},"body":{"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["form.component.ts:16",{"_index":67,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{}}}],["form.component.ts:17",{"_index":244,"title":{},"body":{"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["form.component.ts:20",{"_index":76,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{}}}],["form.component.ts:21",{"_index":246,"title":{},"body":{"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["form.component.ts:24",{"_index":73,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{}}}],["form.component.ts:25",{"_index":245,"title":{},"body":{"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["form.component.ts:31",{"_index":79,"title":{},"body":{"components/AccountLoginFormComponent.html":{}}}],["form.component.ts:33",{"_index":931,"title":{},"body":{"components/SettingsAccountDataFormComponent.html":{}}}],["form.component.ts:36",{"_index":935,"title":{},"body":{"components/SettingsAccountPasswordFormComponent.html":{}}}],["form.component.ts:37",{"_index":247,"title":{},"body":{"components/AccountRegisterFormComponent.html":{}}}],["form.get('password').value",{"_index":555,"title":{},"body":{"classes/CustomValidators.html":{}}}],["form.get('passwordrepeat').seterrors",{"_index":557,"title":{},"body":{"classes/CustomValidators.html":{}}}],["form.get('passwordrepeat').value",{"_index":556,"title":{},"body":{"classes/CustomValidators.html":{}}}],["form/account",{"_index":42,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"coverage.html":{}}}],["form/settings",{"_index":930,"title":{},"body":{"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"coverage.html":{}}}],["formbuilder",{"_index":66,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["formcontrol",{"_index":637,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{},"modules/MpgpFormControlErrorModule.html":{},"coverage.html":{}}}],["formcontrolerror",{"_index":635,"title":{"interfaces/FormControlError.html":{}},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{},"changelog.html":{},"coverage.html":{}}}],["formerorr",{"_index":173,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{}}}],["formgroup",{"_index":80,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["forms",{"_index":1116,"title":{},"body":{"license.html":{}}}],["formsmodule",{"_index":227,"title":{},"body":{"modules/AccountModule.html":{},"modules/SettingsModule.html":{},"miscellaneous/variables.html":{}}}],["friends",{"_index":883,"title":{},"body":{"components/ProfileCardComponent.html":{}}}],["full",{"_index":111,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"modules/MainRoutingModule.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["function",{"_index":514,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":1053,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1100,"title":{},"body":{"index.html":{}}}],["game",{"_index":675,"title":{},"body":{"components/GeneralRootComponent.html":{}}}],["general",{"_index":133,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"modules/GeneralModule.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"modules/MainRoutingModule.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["generalmodule",{"_index":666,"title":{"modules/GeneralModule.html":{}},"body":{"modules/GeneralModule.html":{},"modules.html":{},"overview.html":{}}}],["generalrootcomponent",{"_index":132,"title":{"components/GeneralRootComponent.html":{}},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"modules/GeneralRoutingModule.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["generalroutingmodule",{"_index":670,"title":{"modules/GeneralRoutingModule.html":{}},"body":{"modules/GeneralModule.html":{},"modules/GeneralRoutingModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["generate",{"_index":1093,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1058,"title":{},"body":{"index.html":{}}}],["get(key",{"_index":478,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["getaccount",{"_index":897,"title":{},"body":{"components/ProfileCardContainerComponent.html":{}}}],["getauthinfo",{"_index":309,"title":{},"body":{"injectables/AccountService.html":{}}}],["geterrormessage",{"_index":849,"title":{},"body":{"directives/MpgpFormControlErrorDirective.html":{}}}],["geterrormessage(errors",{"_index":652,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{}}}],["getinstance",{"_index":534,"title":{},"body":{"classes/CacheService.html":{}}}],["getisloggedin",{"_index":312,"title":{},"body":{"injectables/AccountService.html":{}}}],["getparagraphtext",{"_index":379,"title":{},"body":{"classes/AppPage.html":{}}}],["getting",{"_index":953,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["getuseravatar",{"_index":812,"title":{},"body":{"components/MainToolbarAvatarComponent.html":{},"components/ProfileCardComponent.html":{}}}],["getuserid",{"_index":814,"title":{},"body":{"components/MainToolbarAvatarComponent.html":{}}}],["global",{"_index":1077,"title":{},"body":{"index.html":{}}}],["go",{"_index":701,"title":{},"body":{"components/MainErrorComponent.html":{},"index.html":{}}}],["goods",{"_index":1158,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1181,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":388,"title":{"guards/AuthGuard.html":{},"guards/LogoutGuard.html":{},"guards/UnauthorizedGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":390,"title":{},"body":{"guards/AuthGuard.html":{},"guards/LogoutGuard.html":{},"guards/UnauthorizedGuard.html":{},"overview.html":{}}}],["guards/auth.guard",{"_index":721,"title":{},"body":{"modules/MainModule.html":{},"modules/MainRoutingModule.html":{}}}],["guards/logout.guard",{"_index":238,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{}}}],["guards/unauthorized.guard",{"_index":240,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{}}}],["handle",{"_index":972,"title":{},"body":{"changelog.html":{}}}],["handleauthorizationresponse",{"_index":281,"title":{},"body":{"injectables/AccountService.html":{}}}],["handleauthorizationresponse(response",{"_index":293,"title":{},"body":{"injectables/AccountService.html":{}}}],["handleerror",{"_index":596,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["handleerror(error",{"_index":602,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["handlehttperror",{"_index":597,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["handlehttperror(error",{"_index":604,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["handler.service",{"_index":545,"title":{},"body":{"modules/CoreModule.html":{}}}],["handler.service.ts",{"_index":595,"title":{},"body":{"injectables/ErrorsHandler.html":{},"coverage.html":{}}}],["handler.service.ts:11",{"_index":601,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["handler.service.ts:16",{"_index":603,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["handler.service.ts:27",{"_index":605,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["handler.service.ts:38",{"_index":606,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["has(key",{"_index":492,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["hasvalidcachedvalue",{"_index":521,"title":{},"body":{"classes/CacheService.html":{}}}],["hasvalidcachedvalue(key",{"_index":506,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["height",{"_index":784,"title":{},"body":{"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/ProfileCardComponent.html":{}}}],["help",{"_index":1101,"title":{},"body":{"index.html":{}}}],["holder",{"_index":1147,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1134,"title":{},"body":{"license.html":{}}}],["home",{"_index":700,"title":{},"body":{"components/MainErrorComponent.html":{}}}],["hostlistener",{"_index":765,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["hostlistener('window:scroll",{"_index":766,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["hostlisteners",{"_index":760,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["hostname",{"_index":1068,"title":{},"body":{"index.html":{}}}],["hover",{"_index":796,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["html",{"_index":119,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["http",{"_index":292,"title":{},"body":{"injectables/AccountService.html":{},"classes/AuthInfo.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{},"injectables/ManageService.html":{}}}],["http://localhost:4200",{"_index":1086,"title":{},"body":{"index.html":{}}}],["http://localhost:5000/api",{"_index":1205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:5000/images/avatars",{"_index":1208,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http_interceptors",{"_index":540,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["httpclient",{"_index":287,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{},"injectables/ManageService.html":{}}}],["httpclientmodule",{"_index":368,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["httperror",{"_index":408,"title":{"interfaces/HttpError.html":{}},"body":{"classes/AuthInfo.html":{},"interfaces/HttpError.html":{},"coverage.html":{}}}],["httperrorresponse",{"_index":567,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{}}}],["httperrorresponse).status",{"_index":594,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["httpevent",{"_index":431,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httphandler",{"_index":428,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httpinterceptor",{"_index":432,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httprequest",{"_index":426,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["https://mpgp.github.io/browserclient",{"_index":1056,"title":{},"body":{"index.html":{}}}],["id",{"_index":10,"title":{},"body":{"classes/AccountDto.html":{},"components/ProfileCardContainerComponent.html":{}}}],["identifier",{"_index":995,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":1064,"title":{},"body":{"index.html":{}}}],["imageurl",{"_index":1207,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implements",{"_index":44,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"guards/AuthGuard.html":{},"classes/AuthInfo.html":{},"interceptors/AuthInterceptor.html":{},"injectables/ErrorsHandler.html":{},"guards/LogoutGuard.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"guards/UnauthorizedGuard.html":{}}}],["implied",{"_index":1137,"title":{},"body":{"license.html":{}}}],["import",{"_index":82,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"modules/AccountModule.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"modules/AccountRoutingModule.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"classes/AuthInfo.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"modules/CoreModule.html":{},"classes/CustomValidators.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"interfaces/FormControlError.html":{},"modules/GeneralModule.html":{},"components/GeneralRootComponent.html":{},"modules/GeneralRoutingModule.html":{},"guards/LogoutGuard.html":{},"components/MainErrorComponent.html":{},"modules/MainModule.html":{},"components/MainRootComponent.html":{},"modules/MainRoutingModule.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"injectables/ManageService.html":{},"directives/MpgpFormControlErrorDirective.html":{},"modules/MpgpFormControlErrorModule.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"modules/ProfileModule.html":{},"components/ProfileRootComponent.html":{},"modules/ProfileRoutingModule.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"modules/SettingsModule.html":{},"components/SettingsRootComponent.html":{},"modules/SettingsRoutingModule.html":{},"guards/UnauthorizedGuard.html":{}}}],["imports",{"_index":223,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"modules/AppModule.html":{},"modules/GeneralModule.html":{},"modules/GeneralRoutingModule.html":{},"modules/MainModule.html":{},"modules/MainRoutingModule.html":{},"modules/MpgpFormControlErrorModule.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["incidental",{"_index":1151,"title":{},"body":{"license.html":{}}}],["including",{"_index":1139,"title":{},"body":{"license.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/AccountDto.html":{},"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"injectables/AccountService.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"classes/AuthInfo.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthorizeAccountCommand.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"classes/CustomValidators.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"interfaces/FormControlError.html":{},"interfaces/HttpError.html":{},"guards/LogoutGuard.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"injectables/ManageService.html":{},"directives/MpgpFormControlErrorDirective.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"interfaces/RegisterAccountCommand.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"guards/UnauthorizedGuard.html":{},"interfaces/UpdateAccountCommand.html":{},"interfaces/UpdatePasswordCommand.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indirect",{"_index":1150,"title":{},"body":{"license.html":{}}}],["inflight",{"_index":500,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["inflight.complete",{"_index":504,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["inflight.next(value",{"_index":503,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["inflight.observers.length",{"_index":502,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["inflightobservables",{"_index":470,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AccountDto.html":{},"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"modules/AccountModule.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"modules/AccountRoutingModule.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"classes/AuthInfo.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthorizeAccountCommand.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"modules/CoreModule.html":{},"classes/CustomValidators.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"interfaces/FormControlError.html":{},"modules/GeneralModule.html":{},"components/GeneralRootComponent.html":{},"modules/GeneralRoutingModule.html":{},"interfaces/HttpError.html":{},"guards/LogoutGuard.html":{},"components/MainErrorComponent.html":{},"modules/MainModule.html":{},"components/MainRootComponent.html":{},"modules/MainRoutingModule.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"injectables/ManageService.html":{},"directives/MpgpFormControlErrorDirective.html":{},"modules/MpgpFormControlErrorModule.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"modules/ProfileModule.html":{},"components/ProfileRootComponent.html":{},"modules/ProfileRoutingModule.html":{},"components/ProfileWallContainerComponent.html":{},"interfaces/RegisterAccountCommand.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"modules/SettingsModule.html":{},"components/SettingsRootComponent.html":{},"modules/SettingsRoutingModule.html":{},"guards/UnauthorizedGuard.html":{},"interfaces/UpdateAccountCommand.html":{},"interfaces/UpdatePasswordCommand.html":{}}}],["info.dto",{"_index":319,"title":{},"body":{"injectables/AccountService.html":{}}}],["info.dto.ts",{"_index":407,"title":{},"body":{"classes/AuthInfo.html":{},"coverage.html":{}}}],["info.dto.ts:5",{"_index":412,"title":{},"body":{"classes/AuthInfo.html":{}}}],["info.dto.ts:6",{"_index":415,"title":{},"body":{"classes/AuthInfo.html":{}}}],["info.dto.ts:7",{"_index":413,"title":{},"body":{"classes/AuthInfo.html":{}}}],["info.dto.ts:8",{"_index":414,"title":{},"body":{"classes/AuthInfo.html":{}}}],["information",{"_index":925,"title":{},"body":{"components/SettingsAccountContainerComponent.html":{}}}],["information{{accounterorr}}change",{"_index":927,"title":{},"body":{"components/SettingsAccountContainerComponent.html":{}}}],["initial",{"_index":986,"title":{},"body":{"changelog.html":{}}}],["injectable",{"_index":273,"title":{"injectables/AccountService.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"injectables/ManageService.html":{}},"body":{"injectables/AccountService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"guards/LogoutGuard.html":{},"injectables/ManageService.html":{},"guards/UnauthorizedGuard.html":{},"coverage.html":{}}}],["injectables",{"_index":274,"title":{},"body":{"injectables/AccountService.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"injectables/ManageService.html":{},"overview.html":{}}}],["injector",{"_index":600,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["inline",{"_index":730,"title":{},"body":{"components/MainRootComponent.html":{}}}],["input",{"_index":347,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{},"components/ProfileCardComponent.html":{}}}],["inputs",{"_index":850,"title":{},"body":{"directives/MpgpFormControlErrorDirective.html":{},"components/ProfileCardComponent.html":{}}}],["install",{"_index":1074,"title":{},"body":{"index.html":{}}}],["instance",{"_index":476,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["instanceof",{"_index":485,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{}}}],["instancevalue",{"_index":475,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["intercept",{"_index":422,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["intercept(request",{"_index":425,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interceptor",{"_index":418,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"changelog.html":{},"coverage.html":{}}}],["interceptors",{"_index":420,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interface",{"_index":454,"title":{"interfaces/AuthorizeAccountCommand.html":{},"interfaces/CacheContent.html":{},"interfaces/ErrorWithContext.html":{},"interfaces/FormControlError.html":{},"interfaces/HttpError.html":{},"interfaces/RegisterAccountCommand.html":{},"interfaces/UpdateAccountCommand.html":{},"interfaces/UpdatePasswordCommand.html":{}},"body":{"interfaces/AuthorizeAccountCommand.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{},"interfaces/FormControlError.html":{},"interfaces/HttpError.html":{},"directives/MpgpFormControlErrorDirective.html":{},"interfaces/RegisterAccountCommand.html":{},"interfaces/UpdateAccountCommand.html":{},"interfaces/UpdatePasswordCommand.html":{},"coverage.html":{}}}],["interfaces",{"_index":455,"title":{},"body":{"interfaces/AuthorizeAccountCommand.html":{},"interfaces/CacheContent.html":{},"interfaces/ErrorWithContext.html":{},"interfaces/FormControlError.html":{},"interfaces/HttpError.html":{},"interfaces/RegisterAccountCommand.html":{},"interfaces/UpdateAccountCommand.html":{},"interfaces/UpdatePasswordCommand.html":{},"overview.html":{}}}],["interfaces/auth",{"_index":318,"title":{},"body":{"injectables/AccountService.html":{}}}],["interfaces/authorize",{"_index":320,"title":{},"body":{"injectables/AccountService.html":{}}}],["interfaces/register",{"_index":321,"title":{},"body":{"injectables/AccountService.html":{}}}],["interruption",{"_index":1162,"title":{},"body":{"license.html":{}}}],["invalid",{"_index":665,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{}}}],["isloggedin",{"_index":285,"title":{},"body":{"injectables/AccountService.html":{}}}],["js",{"_index":1043,"title":{},"body":{"dependencies.html":{}}}],["json.parse(localstorage.getitem(accountservice.localstoragekey",{"_index":323,"title":{},"body":{"injectables/AccountService.html":{}}}],["json.stringify(info",{"_index":354,"title":{},"body":{"injectables/AccountService.html":{}}}],["key",{"_index":490,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["languages",{"_index":11,"title":{},"body":{"classes/AccountDto.html":{},"interfaces/RegisterAccountCommand.html":{},"components/SettingsAccountDataFormComponent.html":{},"interfaces/UpdateAccountCommand.html":{}}}],["lastonline",{"_index":12,"title":{},"body":{"classes/AccountDto.html":{}}}],["layout",{"_index":1037,"title":{},"body":{"dependencies.html":{}}}],["layoutmodule",{"_index":366,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["left",{"_index":803,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["legend",{"_index":118,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"modules/AccountModule.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/GeneralModule.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"modules/MainModule.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"modules/MpgpFormControlErrorModule.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"modules/ProfileModule.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"modules/SettingsModule.html":{},"components/SettingsRootComponent.html":{},"overview.html":{}}}],["length",{"_index":656,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{}}}],["liability",{"_index":1165,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1148,"title":{},"body":{"license.html":{}}}],["license",{"_index":1105,"title":{"license.html":{}},"body":{"license.html":{}}}],["limited",{"_index":1140,"title":{},"body":{"license.html":{}}}],["list",{"_index":1128,"title":{},"body":{"license.html":{}}}],["literal",{"_index":644,"title":{},"body":{"interfaces/FormControlError.html":{}}}],["loadchildren",{"_index":744,"title":{},"body":{"modules/MainRoutingModule.html":{}}}],["localhost",{"_index":1069,"title":{},"body":{"index.html":{}}}],["localstorage.removeitem('auth",{"_index":619,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["localstorage.removeitem(accountservice.localstoragekey",{"_index":337,"title":{},"body":{"injectables/AccountService.html":{}}}],["localstorage.setitem(accountservice.localstoragekey",{"_index":353,"title":{},"body":{"injectables/AccountService.html":{}}}],["localstoragekey",{"_index":280,"title":{},"body":{"injectables/AccountService.html":{}}}],["location",{"_index":579,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["location.path",{"_index":587,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["location.reload",{"_index":689,"title":{},"body":{"guards/LogoutGuard.html":{}}}],["locationstrategy",{"_index":565,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["log",{"_index":261,"title":{},"body":{"components/AccountRegisterRootComponent.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{},"changelog.html":{}}}],["logerror",{"_index":598,"title":{},"body":{"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{}}}],["logerror(error",{"_index":569,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{}}}],["logger",{"_index":626,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["logger.service",{"_index":546,"title":{},"body":{"modules/CoreModule.html":{},"injectables/ErrorsHandler.html":{}}}],["logger.service.ts",{"_index":560,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{},"coverage.html":{}}}],["logger.service.ts:19",{"_index":632,"title":{},"body":{"injectables/ErrorsLogger.html":{}}}],["logger.service.ts:26",{"_index":634,"title":{},"body":{"injectables/ErrorsLogger.html":{}}}],["logger.service.ts:41",{"_index":633,"title":{},"body":{"injectables/ErrorsLogger.html":{}}}],["login",{"_index":41,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"modules/AccountRoutingModule.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"interfaces/AuthorizeAccountCommand.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"interfaces/RegisterAccountCommand.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{},"interfaces/UpdateAccountCommand.html":{},"coverage.html":{}}}],["login(command",{"_index":189,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"injectables/AccountService.html":{}}}],["login.mat",{"_index":197,"title":{},"body":{"components/AccountLoginRootComponent.html":{}}}],["logout",{"_index":271,"title":{},"body":{"modules/AccountRoutingModule.html":{},"injectables/AccountService.html":{},"components/MainToolbarAvatarComponent.html":{}}}],["logoutguard",{"_index":237,"title":{"guards/LogoutGuard.html":{}},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"guards/LogoutGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loss",{"_index":1159,"title":{},"body":{"license.html":{}}}],["mail",{"_index":702,"title":{},"body":{"components/MainErrorComponent.html":{},"components/MainToolbarMailComponent.html":{}}}],["mail'},{'name",{"_index":145,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["mail.component.html",{"_index":828,"title":{},"body":{"components/MainToolbarMailComponent.html":{}}}],["mail.component.ts",{"_index":827,"title":{},"body":{"components/MainToolbarMailComponent.html":{},"coverage.html":{}}}],["mail/main",{"_index":826,"title":{},"body":{"components/MainToolbarMailComponent.html":{},"coverage.html":{}}}],["main",{"_index":135,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"modules/MainModule.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["main/main.module",{"_index":375,"title":{},"body":{"modules/AppModule.html":{}}}],["mainerrorcomponent",{"_index":134,"title":{"components/MainErrorComponent.html":{}},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"modules/AccountModule.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"modules/GeneralModule.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"modules/MainModule.html":{},"components/MainRootComponent.html":{},"modules/MainRoutingModule.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"modules/ProfileModule.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"modules/SettingsModule.html":{},"components/SettingsRootComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["mainmodule",{"_index":364,"title":{"modules/MainModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MainModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["mainrootcomponent",{"_index":137,"title":{"components/MainRootComponent.html":{}},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"modules/AccountModule.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"modules/GeneralModule.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"modules/MainModule.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"modules/ProfileModule.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"modules/SettingsModule.html":{},"components/SettingsRootComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["mainroutingmodule",{"_index":714,"title":{"modules/MainRoutingModule.html":{}},"body":{"modules/MainModule.html":{},"modules/MainRoutingModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["mainscrolltotopcomponent",{"_index":138,"title":{"components/MainScrollToTopComponent.html":{}},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"modules/AccountModule.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"modules/GeneralModule.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"modules/MainModule.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"modules/ProfileModule.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"modules/SettingsModule.html":{},"components/SettingsRootComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["maintoolbaravatarcomponent",{"_index":141,"title":{"components/MainToolbarAvatarComponent.html":{}},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"modules/AccountModule.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"modules/GeneralModule.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"modules/MainModule.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"modules/ProfileModule.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"modules/SettingsModule.html":{},"components/SettingsRootComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["maintoolbarmailcomponent",{"_index":144,"title":{"components/MainToolbarMailComponent.html":{}},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"modules/AccountModule.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"modules/GeneralModule.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"modules/MainModule.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"modules/ProfileModule.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"modules/SettingsModule.html":{},"components/SettingsRootComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["maintoolbarnotificationscomponent",{"_index":146,"title":{"components/MainToolbarNotificationsComponent.html":{}},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"modules/AccountModule.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"modules/GeneralModule.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"modules/MainModule.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"modules/ProfileModule.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"modules/SettingsModule.html":{},"components/SettingsRootComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["manageservice",{"_index":833,"title":{"injectables/ManageService.html":{}},"body":{"injectables/ManageService.html":{},"components/SettingsAccountContainerComponent.html":{},"modules/SettingsModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["many",{"_index":962,"title":{},"body":{"changelog.html":{}}}],["map",{"_index":469,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"components/MainToolbarAvatarComponent.html":{}}}],["map(x",{"_index":820,"title":{},"body":{"components/MainToolbarAvatarComponent.html":{}}}],["margin",{"_index":115,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{}}}],["mat",{"_index":705,"title":{},"body":{"components/MainErrorComponent.html":{}}}],["matbadgemodule",{"_index":716,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["matbuttonmodule",{"_index":229,"title":{},"body":{"modules/AccountModule.html":{},"modules/MainModule.html":{},"modules/ProfileModule.html":{},"modules/SettingsModule.html":{},"miscellaneous/variables.html":{}}}],["matcardmodule",{"_index":230,"title":{},"body":{"modules/AccountModule.html":{},"modules/GeneralModule.html":{},"modules/ProfileModule.html":{},"miscellaneous/variables.html":{}}}],["match",{"_index":664,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{}}}],["matching",{"_index":31,"title":{},"body":{"classes/AccountDto.html":{},"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"modules/AccountModule.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"modules/AccountRoutingModule.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"classes/AuthInfo.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthorizeAccountCommand.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"modules/CoreModule.html":{},"classes/CustomValidators.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"interfaces/FormControlError.html":{},"modules/GeneralModule.html":{},"components/GeneralRootComponent.html":{},"modules/GeneralRoutingModule.html":{},"interfaces/HttpError.html":{},"guards/LogoutGuard.html":{},"components/MainErrorComponent.html":{},"modules/MainModule.html":{},"components/MainRootComponent.html":{},"modules/MainRoutingModule.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"injectables/ManageService.html":{},"directives/MpgpFormControlErrorDirective.html":{},"modules/MpgpFormControlErrorModule.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"modules/ProfileModule.html":{},"components/ProfileRootComponent.html":{},"modules/ProfileRoutingModule.html":{},"components/ProfileWallContainerComponent.html":{},"interfaces/RegisterAccountCommand.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"modules/SettingsModule.html":{},"components/SettingsRootComponent.html":{},"modules/SettingsRoutingModule.html":{},"guards/UnauthorizedGuard.html":{},"interfaces/UpdateAccountCommand.html":{},"interfaces/UpdatePasswordCommand.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matchpassword",{"_index":551,"title":{},"body":{"classes/CustomValidators.html":{},"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{}}}],["matchpassword(form",{"_index":552,"title":{},"body":{"classes/CustomValidators.html":{}}}],["materials",{"_index":1131,"title":{},"body":{"license.html":{}}}],["matformfieldmodule",{"_index":231,"title":{},"body":{"modules/AccountModule.html":{},"modules/SettingsModule.html":{},"miscellaneous/variables.html":{}}}],["maticonmodule",{"_index":717,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["matinputmodule",{"_index":232,"title":{},"body":{"modules/AccountModule.html":{},"modules/SettingsModule.html":{},"miscellaneous/variables.html":{}}}],["matlistmodule",{"_index":718,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["matmenumodule",{"_index":719,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["mattabsmodule",{"_index":944,"title":{},"body":{"modules/SettingsModule.html":{},"miscellaneous/variables.html":{}}}],["mattoolbarmodule",{"_index":720,"title":{},"body":{"modules/MainModule.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":199,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/ProfileCardComponent.html":{}}}],["maxage",{"_index":495,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["maximum",{"_index":659,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{}}}],["maxlength",{"_index":640,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{}}}],["merchantability",{"_index":1141,"title":{},"body":{"license.html":{}}}],["message",{"_index":411,"title":{},"body":{"classes/AuthInfo.html":{},"interfaces/HttpError.html":{},"components/ProfileCardComponent.html":{}}}],["met",{"_index":1123,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":46,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"directives/MpgpFormControlErrorDirective.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["methodname",{"_index":511,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["methods",{"_index":58,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"injectables/AccountService.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"classes/CacheService.html":{},"classes/CustomValidators.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"guards/LogoutGuard.html":{},"components/MainScrollToTopComponent.html":{},"injectables/ManageService.html":{},"directives/MpgpFormControlErrorDirective.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"guards/UnauthorizedGuard.html":{}}}],["migrate",{"_index":990,"title":{},"body":{"changelog.html":{}}}],["minimum",{"_index":655,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{}}}],["minlength",{"_index":641,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{}}}],["miscellaneous",{"_index":1052,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["modification",{"_index":1118,"title":{},"body":{"license.html":{}}}],["module",{"_index":206,"title":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/GeneralModule.html":{},"modules/GeneralRoutingModule.html":{},"modules/MainModule.html":{},"modules/MainRoutingModule.html":{},"modules/MpgpFormControlErrorModule.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{}},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/GeneralModule.html":{},"modules/MainModule.html":{},"modules/MpgpFormControlErrorModule.html":{},"modules/ProfileModule.html":{},"modules/SettingsModule.html":{},"changelog.html":{},"overview.html":{}}}],["modules",{"_index":208,"title":{"modules.html":{}},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"modules/AppModule.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"modules/CoreModule.html":{},"modules/GeneralModule.html":{},"modules/GeneralRoutingModule.html":{},"modules/MainModule.html":{},"modules/MainRoutingModule.html":{},"modules/MpgpFormControlErrorModule.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1102,"title":{},"body":{"index.html":{}}}],["mpgp",{"_index":678,"title":{},"body":{"components/GeneralRootComponent.html":{},"components/MainRootComponent.html":{},"modules/MpgpFormControlErrorModule.html":{},"license.html":{}}}],["mpgp129/mpgpclient",{"_index":1065,"title":{},"body":{"index.html":{}}}],["mpgp129/mpgpclient:latest",{"_index":1073,"title":{},"body":{"index.html":{}}}],["mpgpclient",{"_index":1072,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["mpgpformcontrolerror",{"_index":166,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"interfaces/FormControlError.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"directives/MpgpFormControlErrorDirective.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["mpgpformcontrolerror(errors",{"_index":649,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{}}}],["mpgpformcontrolerrordirective",{"_index":165,"title":{"directives/MpgpFormControlErrorDirective.html":{}},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"interfaces/FormControlError.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"directives/MpgpFormControlErrorDirective.html":{},"modules/MpgpFormControlErrorModule.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mpgpformcontrolerrormodule",{"_index":218,"title":{"modules/MpgpFormControlErrorModule.html":{}},"body":{"modules/AccountModule.html":{},"modules/MpgpFormControlErrorModule.html":{},"modules/SettingsModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["multi",{"_index":547,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["multiplayer",{"_index":674,"title":{},"body":{"components/GeneralRootComponent.html":{}}}],["name",{"_index":69,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"classes/CacheService.html":{},"classes/CustomValidators.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"components/GeneralRootComponent.html":{},"guards/LogoutGuard.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"injectables/ManageService.html":{},"directives/MpgpFormControlErrorDirective.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{},"guards/UnauthorizedGuard.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["navigate",{"_index":1085,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":380,"title":{},"body":{"classes/AppPage.html":{}}}],["negligence",{"_index":1170,"title":{},"body":{"license.html":{}}}],["new",{"_index":92,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"injectables/AccountService.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"injectables/ManageService.html":{},"components/ProfileCardComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"coverage.html":{},"index.html":{}}}],["newmethod",{"_index":515,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["newrequest",{"_index":441,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["next",{"_index":427,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["next.handle(newrequest).pipe",{"_index":444,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["ng",{"_index":1092,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":226,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/GeneralModule.html":{},"modules/GeneralRoutingModule.html":{},"modules/MainModule.html":{},"modules/MainRoutingModule.html":{},"modules/MpgpFormControlErrorModule.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["ngoninit",{"_index":60,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["ngzone",{"_index":607,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["nickname",{"_index":13,"title":{},"body":{"classes/AccountDto.html":{},"components/AccountRegisterFormComponent.html":{},"interfaces/RegisterAccountCommand.html":{},"components/SettingsAccountDataFormComponent.html":{},"interfaces/UpdateAccountCommand.html":{}}}],["non",{"_index":463,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["none",{"_index":737,"title":{},"body":{"components/MainRootComponent.html":{}}}],["notice",{"_index":1127,"title":{},"body":{"license.html":{}}}],["notifications",{"_index":831,"title":{},"body":{"components/MainToolbarNotificationsComponent.html":{}}}],["notifications'},{'name",{"_index":147,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["notifications.component.html",{"_index":832,"title":{},"body":{"components/MainToolbarNotificationsComponent.html":{}}}],["notifications.component.ts",{"_index":830,"title":{},"body":{"components/MainToolbarNotificationsComponent.html":{},"coverage.html":{}}}],["notifications/main",{"_index":829,"title":{},"body":{"components/MainToolbarNotificationsComponent.html":{},"coverage.html":{}}}],["notifyinflightobservers",{"_index":522,"title":{},"body":{"classes/CacheService.html":{}}}],["notifyinflightobservers(key",{"_index":499,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["null",{"_index":252,"title":{},"body":{"components/AccountRegisterFormComponent.html":{},"injectables/AccountService.html":{},"classes/CustomValidators.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["number",{"_index":21,"title":{},"body":{"classes/AccountDto.html":{},"classes/AuthInfo.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{},"interfaces/FormControlError.html":{},"interfaces/HttpError.html":{},"components/MainToolbarAvatarComponent.html":{},"directives/MpgpFormControlErrorDirective.html":{},"components/ProfileCardContainerComponent.html":{}}}],["object",{"_index":1201,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.getownpropertydescriptor(target",{"_index":510,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["observable",{"_index":297,"title":{},"body":{"injectables/AccountService.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{},"components/MainToolbarAvatarComponent.html":{},"injectables/ManageService.html":{}}}],["observerscount",{"_index":501,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["of(error",{"_index":453,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["of(null).pipe",{"_index":334,"title":{},"body":{"injectables/AccountService.html":{}}}],["of(this.cache.get(key).value",{"_index":482,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["oldpassword",{"_index":936,"title":{},"body":{"components/SettingsAccountPasswordFormComponent.html":{},"interfaces/UpdatePasswordCommand.html":{}}}],["oninit",{"_index":45,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["onsubmit",{"_index":61,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["onsubmit(command",{"_index":177,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{}}}],["onsubmit(event",{"_index":77,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["onwindowscroll",{"_index":767,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["oops",{"_index":695,"title":{},"body":{"components/MainErrorComponent.html":{}}}],["opacity",{"_index":786,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["opendialog",{"_index":867,"title":{},"body":{"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{}}}],["opendialog(id",{"_index":895,"title":{},"body":{"components/ProfileCardContainerComponent.html":{}}}],["openeddialog",{"_index":869,"title":{},"body":{"components/ProfileCardComponent.html":{}}}],["optional",{"_index":70,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"injectables/AccountService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"classes/CacheService.html":{},"classes/CustomValidators.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"interfaces/FormControlError.html":{},"guards/LogoutGuard.html":{},"components/MainRootComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"injectables/ManageService.html":{},"directives/MpgpFormControlErrorDirective.html":{},"components/ProfileCardContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"guards/UnauthorizedGuard.html":{},"miscellaneous/functions.html":{}}}],["order",{"_index":1048,"title":{},"body":{"dependencies.html":{}}}],["originalmethod",{"_index":512,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["originalmethod.apply(this",{"_index":519,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["otherwise",{"_index":1171,"title":{},"body":{"license.html":{}}}],["out",{"_index":221,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/GeneralModule.html":{},"modules/MainModule.html":{},"components/MainScrollToTopComponent.html":{},"modules/MpgpFormControlErrorModule.html":{},"modules/ProfileModule.html":{},"modules/SettingsModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["outline",{"_index":736,"title":{},"body":{"components/MainRootComponent.html":{}}}],["output",{"_index":84,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/ProfileCardComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["outputs",{"_index":62,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/ProfileCardComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["overview",{"_index":1182,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":1070,"title":{},"body":{"index.html":{}}}],["package",{"_index":1031,"title":{"dependencies.html":{}},"body":{}}],["packages",{"_index":1075,"title":{},"body":{"index.html":{}}}],["padding",{"_index":733,"title":{},"body":{"components/MainRootComponent.html":{}}}],["pages",{"_index":241,"title":{},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"modules/GeneralModule.html":{},"modules/GeneralRoutingModule.html":{},"modules/MainModule.html":{},"modules/MainRoutingModule.html":{},"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["parameters",{"_index":68,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"injectables/AccountService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"classes/CacheService.html":{},"classes/CustomValidators.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"guards/LogoutGuard.html":{},"components/MainRootComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"injectables/ManageService.html":{},"directives/MpgpFormControlErrorDirective.html":{},"components/ProfileCardContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"guards/UnauthorizedGuard.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":1143,"title":{},"body":{"license.html":{}}}],["password",{"_index":105,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"interfaces/AuthorizeAccountCommand.html":{},"classes/CustomValidators.html":{},"interfaces/FormControlError.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"injectables/ManageService.html":{},"directives/MpgpFormControlErrorDirective.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"interfaces/RegisterAccountCommand.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{},"interfaces/UpdatePasswordCommand.html":{},"coverage.html":{}}}],["passworderorr",{"_index":913,"title":{},"body":{"components/SettingsAccountContainerComponent.html":{}}}],["passwordrepeat",{"_index":254,"title":{},"body":{"components/AccountRegisterFormComponent.html":{},"classes/CustomValidators.html":{},"interfaces/RegisterAccountCommand.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"interfaces/UpdatePasswordCommand.html":{}}}],["password{{passworderorr",{"_index":928,"title":{},"body":{"components/SettingsAccountContainerComponent.html":{}}}],["path",{"_index":268,"title":{},"body":{"modules/AccountRoutingModule.html":{},"injectables/AccountService.html":{},"modules/GeneralRoutingModule.html":{},"modules/MainRoutingModule.html":{},"injectables/ManageService.html":{},"modules/ProfileRoutingModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["pathlocationstrategy",{"_index":566,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["pathmatch",{"_index":742,"title":{},"body":{"modules/MainRoutingModule.html":{}}}],["pattern",{"_index":642,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{}}}],["permitted",{"_index":1119,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":190,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{},"injectables/ErrorsHandler.html":{},"components/SettingsAccountContainerComponent.html":{}}}],["platform",{"_index":676,"title":{},"body":{"components/GeneralRootComponent.html":{}}}],["pointer",{"_index":783,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["position",{"_index":787,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["possibility",{"_index":1176,"title":{},"body":{"license.html":{}}}],["prefix",{"_index":1079,"title":{},"body":{"index.html":{}}}],["private",{"_index":276,"title":{},"body":{"injectables/AccountService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"interfaces/FormControlError.html":{},"guards/LogoutGuard.html":{},"injectables/ManageService.html":{},"directives/MpgpFormControlErrorDirective.html":{},"guards/UnauthorizedGuard.html":{}}}],["procurement",{"_index":1156,"title":{},"body":{"license.html":{}}}],["production",{"_index":1209,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":149,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"modules/ProfileModule.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{},"changelog.html":{}}}],["profile/:id",{"_index":746,"title":{},"body":{"modules/MainRoutingModule.html":{}}}],["profilecardcomponent",{"_index":148,"title":{"components/ProfileCardComponent.html":{}},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["profilecardcontainercomponent",{"_index":151,"title":{"components/ProfileCardContainerComponent.html":{}},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["profilemodule",{"_index":900,"title":{"modules/ProfileModule.html":{}},"body":{"modules/ProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["profilerootcomponent",{"_index":154,"title":{"components/ProfileRootComponent.html":{}},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"modules/ProfileRoutingModule.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["profileroutingmodule",{"_index":904,"title":{"modules/ProfileRoutingModule.html":{}},"body":{"modules/ProfileModule.html":{},"modules/ProfileRoutingModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["profilewallcontainercomponent",{"_index":155,"title":{"components/ProfileWallContainerComponent.html":{}},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["profits",{"_index":1160,"title":{},"body":{"license.html":{}}}],["project",{"_index":1057,"title":{},"body":{"index.html":{}}}],["properties",{"_index":8,"title":{},"body":{"classes/AccountDto.html":{},"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"injectables/AccountService.html":{},"classes/AuthInfo.html":{},"interfaces/AuthorizeAccountCommand.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"interfaces/ErrorWithContext.html":{},"interfaces/FormControlError.html":{},"interfaces/HttpError.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"injectables/ManageService.html":{},"interfaces/RegisterAccountCommand.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"interfaces/UpdateAccountCommand.html":{},"interfaces/UpdatePasswordCommand.html":{}}}],["propertydescriptor",{"_index":509,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["protractor",{"_index":383,"title":{},"body":{"classes/AppPage.html":{}}}],["provide",{"_index":464,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":1120,"title":{},"body":{"license.html":{}}}],["providers",{"_index":212,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"injectables/ErrorsHandler.html":{},"modules/GeneralModule.html":{},"modules/MainModule.html":{},"modules/MpgpFormControlErrorModule.html":{},"modules/ProfileModule.html":{},"modules/SettingsModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":472,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"classes/CustomValidators.html":{},"components/MainRootComponent.html":{}}}],["pull",{"_index":1062,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":1144,"title":{},"body":{"license.html":{}}}],["queryparams",{"_index":402,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ErrorsHandler.html":{}}}],["radius",{"_index":779,"title":{},"body":{"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/ProfileCardComponent.html":{}}}],["raised",{"_index":706,"title":{},"body":{"components/MainErrorComponent.html":{}}}],["react",{"_index":991,"title":{},"body":{"changelog.html":{}}}],["reactiveformsmodule",{"_index":228,"title":{},"body":{"modules/AccountModule.html":{},"modules/SettingsModule.html":{},"miscellaneous/variables.html":{}}}],["readme",{"_index":1104,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":94,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"injectables/AccountService.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"interfaces/FormControlError.html":{},"guards/LogoutGuard.html":{},"components/MainToolbarAvatarComponent.html":{},"injectables/ManageService.html":{},"directives/MpgpFormControlErrorDirective.html":{},"components/ProfileCardContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"guards/UnauthorizedGuard.html":{}}}],["redirectto",{"_index":743,"title":{},"body":{"modules/MainRoutingModule.html":{}}}],["redistribution",{"_index":1114,"title":{},"body":{"license.html":{}}}],["redistributions",{"_index":1124,"title":{},"body":{"license.html":{}}}],["register",{"_index":128,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"modules/AccountRoutingModule.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{},"coverage.html":{}}}],["register(command",{"_index":258,"title":{},"body":{"components/AccountRegisterRootComponent.html":{},"injectables/AccountService.html":{}}}],["register.mat",{"_index":262,"title":{},"body":{"components/AccountRegisterRootComponent.html":{}}}],["registeraccountcommand",{"_index":249,"title":{"interfaces/RegisterAccountCommand.html":{}},"body":{"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"injectables/AccountService.html":{},"interfaces/RegisterAccountCommand.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"coverage.html":{}}}],["registerdate",{"_index":14,"title":{},"body":{"classes/AccountDto.html":{}}}],["reload",{"_index":1088,"title":{},"body":{"index.html":{}}}],["replaysubject",{"_index":302,"title":{},"body":{"injectables/AccountService.html":{}}}],["reproduce",{"_index":1129,"title":{},"body":{"license.html":{}}}],["request",{"_index":430,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["request.clone",{"_index":442,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["require",{"_index":1029,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":643,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{}}}],["requiredlength",{"_index":646,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{}}}],["requiredpattern",{"_index":647,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{}}}],["reserved",{"_index":1113,"title":{},"body":{"license.html":{}}}],["reset",{"_index":220,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/GeneralModule.html":{},"modules/MainModule.html":{},"modules/MpgpFormControlErrorModule.html":{},"modules/ProfileModule.html":{},"modules/SettingsModule.html":{},"overview.html":{}}}],["response",{"_index":295,"title":{},"body":{"injectables/AccountService.html":{}}}],["response.errorcode",{"_index":348,"title":{},"body":{"injectables/AccountService.html":{}}}],["result",{"_index":30,"title":{},"body":{"classes/AccountDto.html":{},"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"modules/AccountModule.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"modules/AccountRoutingModule.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"classes/AuthInfo.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthorizeAccountCommand.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"modules/CoreModule.html":{},"classes/CustomValidators.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"interfaces/FormControlError.html":{},"modules/GeneralModule.html":{},"components/GeneralRootComponent.html":{},"modules/GeneralRoutingModule.html":{},"interfaces/HttpError.html":{},"guards/LogoutGuard.html":{},"components/MainErrorComponent.html":{},"modules/MainModule.html":{},"components/MainRootComponent.html":{},"modules/MainRoutingModule.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"injectables/ManageService.html":{},"directives/MpgpFormControlErrorDirective.html":{},"modules/MpgpFormControlErrorModule.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"modules/ProfileModule.html":{},"components/ProfileRootComponent.html":{},"modules/ProfileRoutingModule.html":{},"components/ProfileWallContainerComponent.html":{},"interfaces/RegisterAccountCommand.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"modules/SettingsModule.html":{},"components/SettingsRootComponent.html":{},"modules/SettingsRoutingModule.html":{},"guards/UnauthorizedGuard.html":{},"interfaces/UpdateAccountCommand.html":{},"interfaces/UpdatePasswordCommand.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["result.appid",{"_index":581,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["result.message",{"_index":583,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["result.stack",{"_index":591,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["result.status",{"_index":593,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["result.url",{"_index":586,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["result.user",{"_index":588,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["results",{"_index":32,"title":{},"body":{"classes/AccountDto.html":{},"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"modules/AccountModule.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"modules/AccountRoutingModule.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"classes/AuthInfo.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthorizeAccountCommand.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"modules/CoreModule.html":{},"classes/CustomValidators.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"interfaces/FormControlError.html":{},"modules/GeneralModule.html":{},"components/GeneralRootComponent.html":{},"modules/GeneralRoutingModule.html":{},"interfaces/HttpError.html":{},"guards/LogoutGuard.html":{},"components/MainErrorComponent.html":{},"modules/MainModule.html":{},"components/MainRootComponent.html":{},"modules/MainRoutingModule.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"injectables/ManageService.html":{},"directives/MpgpFormControlErrorDirective.html":{},"modules/MpgpFormControlErrorModule.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"modules/ProfileModule.html":{},"components/ProfileRootComponent.html":{},"modules/ProfileRoutingModule.html":{},"components/ProfileWallContainerComponent.html":{},"interfaces/RegisterAccountCommand.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"modules/SettingsModule.html":{},"components/SettingsRootComponent.html":{},"modules/SettingsRoutingModule.html":{},"guards/UnauthorizedGuard.html":{},"interfaces/UpdateAccountCommand.html":{},"interfaces/UpdatePasswordCommand.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retain",{"_index":1125,"title":{},"body":{"license.html":{}}}],["retrycount",{"_index":451,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["retrywhen",{"_index":434,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["retrywhen(err",{"_index":445,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["return",{"_index":193,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{},"injectables/AccountService.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"classes/CustomValidators.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{},"interfaces/FormControlError.html":{},"guards/LogoutGuard.html":{},"components/MainToolbarAvatarComponent.html":{},"injectables/ManageService.html":{},"directives/MpgpFormControlErrorDirective.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"guards/UnauthorizedGuard.html":{}}}],["returns",{"_index":74,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"injectables/AccountService.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"classes/CacheService.html":{},"classes/CustomValidators.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"guards/LogoutGuard.html":{},"components/MainScrollToTopComponent.html":{},"injectables/ManageService.html":{},"directives/MpgpFormControlErrorDirective.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"guards/UnauthorizedGuard.html":{},"miscellaneous/functions.html":{}}}],["returnurl",{"_index":403,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ErrorsHandler.html":{}}}],["right",{"_index":789,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["rights",{"_index":1112,"title":{},"body":{"license.html":{}}}],["rm",{"_index":1067,"title":{},"body":{"index.html":{}}}],["root",{"_index":163,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["root'},{'name",{"_index":126,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["root.component.html",{"_index":172,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainRootComponent.html":{},"components/ProfileRootComponent.html":{},"components/SettingsRootComponent.html":{}}}],["root.component.scss",{"_index":171,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/MainRootComponent.html":{}}}],["root.component.ts",{"_index":170,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainRootComponent.html":{},"components/ProfileRootComponent.html":{},"components/SettingsRootComponent.html":{},"coverage.html":{}}}],["root.component.ts:12",{"_index":724,"title":{},"body":{"components/MainRootComponent.html":{}}}],["root.component.ts:13",{"_index":725,"title":{},"body":{"components/MainRootComponent.html":{}}}],["root.component.ts:16",{"_index":176,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{}}}],["root.component.ts:20",{"_index":178,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{}}}],["root/account",{"_index":169,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{},"coverage.html":{}}}],["root/general",{"_index":673,"title":{},"body":{"components/GeneralRootComponent.html":{},"coverage.html":{}}}],["root/main",{"_index":723,"title":{},"body":{"components/MainRootComponent.html":{},"coverage.html":{}}}],["root/profile",{"_index":907,"title":{},"body":{"components/ProfileRootComponent.html":{},"coverage.html":{}}}],["root/settings",{"_index":946,"title":{},"body":{"components/SettingsRootComponent.html":{},"coverage.html":{}}}],["route",{"_index":288,"title":{},"body":{"injectables/AccountService.html":{}}}],["router",{"_index":290,"title":{},"body":{"injectables/AccountService.html":{},"guards/AuthGuard.html":{},"injectables/ErrorsHandler.html":{},"guards/LogoutGuard.html":{},"guards/UnauthorizedGuard.html":{}}}],["router.navigatebyurl('/account/login",{"_index":623,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["router.navigatebyurl('/error",{"_index":630,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["routermodule",{"_index":265,"title":{},"body":{"modules/AccountRoutingModule.html":{},"modules/GeneralRoutingModule.html":{},"modules/MainRoutingModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":272,"title":{},"body":{"modules/AccountRoutingModule.html":{},"modules/GeneralRoutingModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":750,"title":{},"body":{"modules/MainRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":396,"title":{},"body":{"guards/AuthGuard.html":{},"guards/LogoutGuard.html":{},"guards/UnauthorizedGuard.html":{}}}],["routes",{"_index":266,"title":{"routes.html":{}},"body":{"modules/AccountRoutingModule.html":{},"modules/GeneralRoutingModule.html":{},"modules/MainRoutingModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":235,"title":{},"body":{"modules/AccountModule.html":{},"modules/GeneralModule.html":{},"modules/MainModule.html":{},"modules/ProfileModule.html":{},"modules/SettingsModule.html":{}}}],["routing.module.ts",{"_index":264,"title":{},"body":{"modules/AccountRoutingModule.html":{},"modules/GeneralRoutingModule.html":{},"modules/MainRoutingModule.html":{},"modules/ProfileRoutingModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["row",{"_index":386,"title":{},"body":{"classes/AppPage.html":{}}}],["run",{"_index":1066,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":183,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{},"injectables/AccountService.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{},"components/MainToolbarAvatarComponent.html":{},"injectables/ManageService.html":{},"components/SettingsAccountContainerComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":185,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{},"injectables/AccountService.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"components/MainToolbarAvatarComponent.html":{},"injectables/ManageService.html":{},"components/SettingsAccountContainerComponent.html":{}}}],["saveauthinfo",{"_index":282,"title":{},"body":{"injectables/AccountService.html":{}}}],["saveauthinfo(info",{"_index":300,"title":{},"body":{"injectables/AccountService.html":{}}}],["scaffolding",{"_index":1091,"title":{},"body":{"index.html":{}}}],["scan",{"_index":435,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["scan(retrycount",{"_index":450,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["scroll",{"_index":139,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{},"coverage.html":{}}}],["scrolltotop",{"_index":759,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["selector",{"_index":51,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"interfaces/FormControlError.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"directives/MpgpFormControlErrorDirective.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["server",{"_index":1082,"title":{},"body":{"index.html":{}}}],["service",{"_index":465,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["services",{"_index":919,"title":{},"body":{"components/SettingsAccountContainerComponent.html":{},"modules/SettingsModule.html":{},"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["services/account.service",{"_index":541,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/auth.interceptor",{"_index":542,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/errors",{"_index":544,"title":{},"body":{"modules/CoreModule.html":{}}}],["set",{"_index":523,"title":{},"body":{"classes/CacheService.html":{},"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{}}}],["set(key",{"_index":494,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["setheaders",{"_index":443,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["setmpgpformcontrolerror(errors",{"_index":855,"title":{},"body":{"directives/MpgpFormControlErrorDirective.html":{}}}],["settimeout",{"_index":628,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["settings",{"_index":158,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"modules/MainRoutingModule.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"modules/SettingsModule.html":{},"components/SettingsRootComponent.html":{},"changelog.html":{}}}],["settingsaccountcontainercomponent",{"_index":157,"title":{"components/SettingsAccountContainerComponent.html":{}},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["settingsaccountdataformcomponent",{"_index":159,"title":{"components/SettingsAccountDataFormComponent.html":{}},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["settingsaccountpasswordformcomponent",{"_index":161,"title":{"components/SettingsAccountPasswordFormComponent.html":{}},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["settingsmodule",{"_index":937,"title":{"modules/SettingsModule.html":{}},"body":{"modules/SettingsModule.html":{},"modules.html":{},"overview.html":{}}}],["settingsrootcomponent",{"_index":162,"title":{"components/SettingsRootComponent.html":{}},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{},"modules/SettingsRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["settingsroutingmodule",{"_index":942,"title":{"modules/SettingsRoutingModule.html":{}},"body":{"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["shall",{"_index":1146,"title":{},"body":{"license.html":{}}}],["shared",{"_index":234,"title":{},"body":{"modules/AccountModule.html":{},"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"modules/SettingsModule.html":{},"changelog.html":{}}}],["show",{"_index":798,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["showscroll",{"_index":758,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["sign",{"_index":195,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{}}}],["simplified",{"_index":1109,"title":{},"body":{"license.html":{}}}],["software",{"_index":1133,"title":{},"body":{"license.html":{}}}],["something",{"_index":697,"title":{},"body":{"components/MainErrorComponent.html":{}}}],["soon",{"_index":947,"title":{},"body":{"components/SettingsRootComponent.html":{}}}],["sorry",{"_index":696,"title":{},"body":{"components/MainErrorComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AccountDto.html":{},"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"modules/AccountModule.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"modules/AccountRoutingModule.html":{},"injectables/AccountService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"guards/AuthGuard.html":{},"classes/AuthInfo.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthorizeAccountCommand.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"modules/CoreModule.html":{},"classes/CustomValidators.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"interfaces/FormControlError.html":{},"modules/GeneralModule.html":{},"components/GeneralRootComponent.html":{},"modules/GeneralRoutingModule.html":{},"interfaces/HttpError.html":{},"guards/LogoutGuard.html":{},"components/MainErrorComponent.html":{},"modules/MainModule.html":{},"components/MainRootComponent.html":{},"modules/MainRoutingModule.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"injectables/ManageService.html":{},"directives/MpgpFormControlErrorDirective.html":{},"modules/MpgpFormControlErrorModule.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"modules/ProfileModule.html":{},"components/ProfileRootComponent.html":{},"modules/ProfileRoutingModule.html":{},"components/ProfileWallContainerComponent.html":{},"interfaces/RegisterAccountCommand.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"modules/SettingsModule.html":{},"components/SettingsRootComponent.html":{},"modules/SettingsRoutingModule.html":{},"guards/UnauthorizedGuard.html":{},"interfaces/UpdateAccountCommand.html":{},"interfaces/UpdatePasswordCommand.html":{},"index.html":{},"license.html":{}}}],["spacer",{"_index":738,"title":{},"body":{"components/MainRootComponent.html":{}}}],["span')).gettext",{"_index":387,"title":{},"body":{"classes/AppPage.html":{}}}],["spec\\.ts",{"_index":1203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["special",{"_index":1152,"title":{},"body":{"license.html":{}}}],["src/.../account.module.ts",{"_index":1195,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.module.ts",{"_index":1192,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cache.service.ts",{"_index":1054,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../core.module.ts",{"_index":1191,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1199,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1200,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../general.module.ts",{"_index":1196,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":1193,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.module.ts",{"_index":1190,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../profile.module.ts",{"_index":1197,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../settings.module.ts",{"_index":1198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1194,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":356,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.ts",{"_index":365,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/core.module.ts",{"_index":539,"title":{},"body":{"modules/CoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/interfaces/account.dto.ts",{"_index":6,"title":{},"body":{"classes/AccountDto.html":{},"coverage.html":{}}}],["src/app/core/interfaces/account.dto.ts:2",{"_index":22,"title":{},"body":{"classes/AccountDto.html":{}}}],["src/app/core/interfaces/account.dto.ts:3",{"_index":20,"title":{},"body":{"classes/AccountDto.html":{}}}],["src/app/core/interfaces/account.dto.ts:4",{"_index":23,"title":{},"body":{"classes/AccountDto.html":{}}}],["src/app/core/interfaces/account.dto.ts:5",{"_index":25,"title":{},"body":{"classes/AccountDto.html":{}}}],["src/app/core/interfaces/account.dto.ts:6",{"_index":26,"title":{},"body":{"classes/AccountDto.html":{}}}],["src/app/core/interfaces/account.dto.ts:7",{"_index":27,"title":{},"body":{"classes/AccountDto.html":{}}}],["src/app/core/interfaces/account.dto.ts:8",{"_index":28,"title":{},"body":{"classes/AccountDto.html":{}}}],["src/app/core/interfaces/auth",{"_index":406,"title":{},"body":{"classes/AuthInfo.html":{},"coverage.html":{}}}],["src/app/core/interfaces/authorize",{"_index":456,"title":{},"body":{"interfaces/AuthorizeAccountCommand.html":{},"coverage.html":{}}}],["src/app/core/interfaces/http",{"_index":681,"title":{},"body":{"interfaces/HttpError.html":{},"coverage.html":{}}}],["src/app/core/interfaces/register",{"_index":909,"title":{},"body":{"interfaces/RegisterAccountCommand.html":{},"coverage.html":{}}}],["src/app/core/interfaces/update",{"_index":952,"title":{},"body":{"interfaces/UpdateAccountCommand.html":{},"interfaces/UpdatePasswordCommand.html":{},"coverage.html":{}}}],["src/app/core/services/account.service.ts",{"_index":275,"title":{},"body":{"injectables/AccountService.html":{},"coverage.html":{}}}],["src/app/core/services/account.service.ts:15",{"_index":304,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/core/services/account.service.ts:16",{"_index":303,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/core/services/account.service.ts:17",{"_index":305,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/core/services/account.service.ts:18",{"_index":308,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/core/services/account.service.ts:19",{"_index":291,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/core/services/account.service.ts:27",{"_index":310,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/core/services/account.service.ts:31",{"_index":311,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/core/services/account.service.ts:35",{"_index":313,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/core/services/account.service.ts:39",{"_index":296,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/core/services/account.service.ts:48",{"_index":298,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/core/services/account.service.ts:57",{"_index":299,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/core/services/account.service.ts:69",{"_index":294,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/core/services/account.service.ts:81",{"_index":301,"title":{},"body":{"injectables/AccountService.html":{}}}],["src/app/core/services/auth.interceptor.ts",{"_index":421,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{}}}],["src/app/core/services/auth.interceptor.ts:12",{"_index":429,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/core/services/auth.interceptor.ts:9",{"_index":424,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/core/services/cache.service.ts",{"_index":459,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/services/cache.service.ts:13",{"_index":524,"title":{},"body":{"classes/CacheService.html":{}}}],["src/app/core/services/cache.service.ts:14",{"_index":526,"title":{},"body":{"classes/CacheService.html":{}}}],["src/app/core/services/cache.service.ts:16",{"_index":525,"title":{},"body":{"classes/CacheService.html":{}}}],["src/app/core/services/cache.service.ts:17",{"_index":527,"title":{},"body":{"classes/CacheService.html":{}}}],["src/app/core/services/cache.service.ts:19",{"_index":535,"title":{},"body":{"classes/CacheService.html":{}}}],["src/app/core/services/cache.service.ts:23",{"_index":528,"title":{},"body":{"classes/CacheService.html":{}}}],["src/app/core/services/cache.service.ts:41",{"_index":530,"title":{},"body":{"classes/CacheService.html":{}}}],["src/app/core/services/cache.service.ts:45",{"_index":533,"title":{},"body":{"classes/CacheService.html":{}}}],["src/app/core/services/cache.service.ts:50",{"_index":532,"title":{},"body":{"classes/CacheService.html":{}}}],["src/app/core/services/cache.service.ts:64",{"_index":531,"title":{},"body":{"classes/CacheService.html":{}}}],["src/app/core/services/errors",{"_index":559,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"coverage.html":{}}}],["src/app/features/account/account",{"_index":263,"title":{},"body":{"modules/AccountRoutingModule.html":{}}}],["src/app/features/account/account.module.ts",{"_index":222,"title":{},"body":{"modules/AccountModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/features/account/components/account",{"_index":40,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"coverage.html":{}}}],["src/app/features/account/components/index.ts",{"_index":1008,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/features/account/containers/index.ts",{"_index":1009,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/features/account/guards/logout.guard.ts",{"_index":683,"title":{},"body":{"guards/LogoutGuard.html":{},"coverage.html":{}}}],["src/app/features/account/guards/logout.guard.ts:10",{"_index":686,"title":{},"body":{"guards/LogoutGuard.html":{}}}],["src/app/features/account/guards/logout.guard.ts:7",{"_index":684,"title":{},"body":{"guards/LogoutGuard.html":{}}}],["src/app/features/account/guards/unauthorized.guard.ts",{"_index":949,"title":{},"body":{"guards/UnauthorizedGuard.html":{},"coverage.html":{}}}],["src/app/features/account/guards/unauthorized.guard.ts:10",{"_index":951,"title":{},"body":{"guards/UnauthorizedGuard.html":{}}}],["src/app/features/account/guards/unauthorized.guard.ts:7",{"_index":950,"title":{},"body":{"guards/UnauthorizedGuard.html":{}}}],["src/app/features/account/pages/account",{"_index":168,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{},"coverage.html":{}}}],["src/app/features/account/pages/index.ts",{"_index":1010,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/features/general/components/index.ts",{"_index":1011,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/features/general/containers/index.ts",{"_index":1012,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/features/general/general",{"_index":680,"title":{},"body":{"modules/GeneralRoutingModule.html":{}}}],["src/app/features/general/general.module.ts",{"_index":671,"title":{},"body":{"modules/GeneralModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/features/general/pages/general",{"_index":672,"title":{},"body":{"components/GeneralRootComponent.html":{},"coverage.html":{}}}],["src/app/features/general/pages/index.ts",{"_index":1013,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/features/profile/components/index.ts",{"_index":1014,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/features/profile/components/profile",{"_index":861,"title":{},"body":{"components/ProfileCardComponent.html":{},"coverage.html":{}}}],["src/app/features/profile/containers/index.ts",{"_index":1015,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/features/profile/containers/profile",{"_index":887,"title":{},"body":{"components/ProfileCardContainerComponent.html":{},"components/ProfileWallContainerComponent.html":{},"coverage.html":{}}}],["src/app/features/profile/pages/index.ts",{"_index":1016,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/features/profile/pages/profile",{"_index":906,"title":{},"body":{"components/ProfileRootComponent.html":{},"coverage.html":{}}}],["src/app/features/profile/profile",{"_index":908,"title":{},"body":{"modules/ProfileRoutingModule.html":{}}}],["src/app/features/profile/profile.module.ts",{"_index":905,"title":{},"body":{"modules/ProfileModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/features/settings/components/index.ts",{"_index":1017,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/features/settings/components/settings",{"_index":929,"title":{},"body":{"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"coverage.html":{}}}],["src/app/features/settings/containers/index.ts",{"_index":1018,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/features/settings/containers/settings",{"_index":910,"title":{},"body":{"components/SettingsAccountContainerComponent.html":{},"coverage.html":{}}}],["src/app/features/settings/pages/index.ts",{"_index":1019,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/features/settings/pages/settings",{"_index":945,"title":{},"body":{"components/SettingsRootComponent.html":{},"coverage.html":{}}}],["src/app/features/settings/services/index.ts",{"_index":1020,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/features/settings/services/manage.service.ts",{"_index":834,"title":{},"body":{"injectables/ManageService.html":{},"coverage.html":{}}}],["src/app/features/settings/services/manage.service.ts:12",{"_index":837,"title":{},"body":{"injectables/ManageService.html":{}}}],["src/app/features/settings/services/manage.service.ts:16",{"_index":840,"title":{},"body":{"injectables/ManageService.html":{}}}],["src/app/features/settings/services/manage.service.ts:24",{"_index":843,"title":{},"body":{"injectables/ManageService.html":{}}}],["src/app/features/settings/settings",{"_index":948,"title":{},"body":{"modules/SettingsRoutingModule.html":{}}}],["src/app/features/settings/settings.module.ts",{"_index":943,"title":{},"body":{"modules/SettingsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/main/components/index.ts",{"_index":1021,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/main/containers/index.ts",{"_index":1022,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/main/containers/main",{"_index":752,"title":{},"body":{"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"coverage.html":{}}}],["src/app/main/guards/auth.guard.ts",{"_index":391,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/main/guards/auth.guard.ts:10",{"_index":397,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/main/guards/auth.guard.ts:7",{"_index":392,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/main/main",{"_index":741,"title":{},"body":{"modules/MainRoutingModule.html":{}}}],["src/app/main/main.module.ts",{"_index":715,"title":{},"body":{"modules/MainModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/main/pages/index.ts",{"_index":1024,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/main/pages/main",{"_index":690,"title":{},"body":{"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"coverage.html":{}}}],["src/app/shared/custom",{"_index":549,"title":{},"body":{"classes/CustomValidators.html":{},"coverage.html":{}}}],["src/app/shared/directives/mpgp",{"_index":636,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{},"modules/MpgpFormControlErrorModule.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":1025,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1026,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1027,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":1083,"title":{},"body":{"index.html":{}}}],["started",{"_index":954,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["state",{"_index":395,"title":{},"body":{"guards/AuthGuard.html":{}}}],["state.url",{"_index":404,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statements",{"_index":996,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":279,"title":{},"body":{"injectables/AccountService.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"classes/CustomValidators.html":{}}}],["status",{"_index":563,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["statusinfo",{"_index":15,"title":{},"body":{"classes/AccountDto.html":{},"interfaces/RegisterAccountCommand.html":{},"components/SettingsAccountDataFormComponent.html":{},"interfaces/UpdateAccountCommand.html":{}}}],["stored",{"_index":1097,"title":{},"body":{"index.html":{}}}],["strict",{"_index":1168,"title":{},"body":{"license.html":{}}}],["string",{"_index":18,"title":{},"body":{"classes/AccountDto.html":{},"injectables/AccountService.html":{},"classes/AuthInfo.html":{},"interfaces/AuthorizeAccountCommand.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{},"interfaces/FormControlError.html":{},"interfaces/HttpError.html":{},"directives/MpgpFormControlErrorDirective.html":{},"components/ProfileCardComponent.html":{},"interfaces/RegisterAccountCommand.html":{},"interfaces/UpdateAccountCommand.html":{},"interfaces/UpdatePasswordCommand.html":{}}}],["stylelint",{"_index":982,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["styles",{"_index":37,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/ProfileCardComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["styleurls",{"_index":54,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/ProfileCardComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["subject",{"_index":181,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"components/SettingsAccountContainerComponent.html":{}}}],["submit",{"_index":63,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["substitute",{"_index":1157,"title":{},"body":{"license.html":{}}}],["such",{"_index":1177,"title":{},"body":{"license.html":{}}}],["support",{"_index":704,"title":{},"body":{"components/MainErrorComponent.html":{},"modules.html":{}}}],["svg",{"_index":1179,"title":{},"body":{"modules.html":{}}}],["t",{"_index":461,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["table",{"_index":114,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1030,"title":{},"body":{"coverage.html":{}}}],["taken",{"_index":344,"title":{},"body":{"injectables/AccountService.html":{}}}],["tap",{"_index":315,"title":{},"body":{"injectables/AccountService.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"injectables/ErrorsHandler.html":{}}}],["tap(_",{"_index":335,"title":{},"body":{"injectables/AccountService.html":{},"injectables/ErrorsHandler.html":{}}}],["tap(error",{"_index":447,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["tap(this.handleauthorizationresponse",{"_index":333,"title":{},"body":{"injectables/AccountService.html":{}}}],["target.constructor.name}.${methodname}:${args.join",{"_index":518,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["template",{"_index":36,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["templateurl",{"_index":56,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["text",{"_index":201,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/MainErrorComponent.html":{}}}],["theory",{"_index":1164,"title":{},"body":{"license.html":{}}}],["this.account.avatar",{"_index":876,"title":{},"body":{"components/ProfileCardComponent.html":{}}}],["this.accounterorr$.next",{"_index":920,"title":{},"body":{"components/SettingsAccountContainerComponent.html":{}}}],["this.accounterorr$.next(error.tostring",{"_index":922,"title":{},"body":{"components/SettingsAccountContainerComponent.html":{}}}],["this.accountservice",{"_index":188,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{}}}],["this.accountservice.authinfo",{"_index":589,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["this.accountservice.authinfo$.pipe",{"_index":817,"title":{},"body":{"components/MainToolbarAvatarComponent.html":{}}}],["this.accountservice.authinfo.authtoken",{"_index":438,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["this.accountservice.authinfo.user",{"_index":590,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{},"components/ProfileCardContainerComponent.html":{}}}],["this.accountservice.authinfo.user.id",{"_index":823,"title":{},"body":{"components/MainToolbarAvatarComponent.html":{}}}],["this.accountservice.isloggedin",{"_index":399,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"guards/LogoutGuard.html":{},"guards/UnauthorizedGuard.html":{}}}],["this.accountservice.logout().topromise",{"_index":687,"title":{},"body":{"guards/LogoutGuard.html":{}}}],["this.addcontextinfo(error",{"_index":570,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["this.addedfriend.emit(this.account.id",{"_index":877,"title":{},"body":{"components/ProfileCardComponent.html":{}}}],["this.authinfo",{"_index":327,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.authinfosubject$.asobservable",{"_index":324,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.authinfosubject$.next(info",{"_index":355,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.authinfosubject$.next(this.authinfo",{"_index":325,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.authinfovalue",{"_index":322,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.cache.get(key).expiry",{"_index":507,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["this.cache.has(key",{"_index":493,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["this.cache.set(key",{"_index":496,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["this.createform",{"_index":95,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["this.el.nativeelement.textcontent",{"_index":650,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{}}}],["this.errorhandler.handleerror(error",{"_index":452,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["this.fb.group",{"_index":97,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["this.form",{"_index":96,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["this.formerorr$.next",{"_index":187,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{}}}],["this.formerorr$.next(error.tostring",{"_index":192,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{}}}],["this.geterrormessage(errors",{"_index":651,"title":{},"body":{"interfaces/FormControlError.html":{},"directives/MpgpFormControlErrorDirective.html":{}}}],["this.handlehttperror(error",{"_index":616,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["this.hasvalidcachedvalue(key",{"_index":481,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["this.http.patch(`${this.path}/password",{"_index":847,"title":{},"body":{"injectables/ManageService.html":{}}}],["this.http.patch(this.path",{"_index":846,"title":{},"body":{"injectables/ManageService.html":{}}}],["this.http.post(`${environment.apiurl}exception",{"_index":573,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["this.http.post(this.path",{"_index":328,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.http.put(this.path",{"_index":338,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.inflightobservables.delete(key",{"_index":505,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["this.inflightobservables.get(key",{"_index":484,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["this.inflightobservables.has(key",{"_index":483,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["this.inflightobservables.set(key",{"_index":486,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["this.injector.get(errorslogger",{"_index":627,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["this.injector.get(ngzone",{"_index":614,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["this.injector.get(router",{"_index":620,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["this.locationstrategy",{"_index":580,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["this.logerror(error",{"_index":617,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["this.manageservice",{"_index":921,"title":{},"body":{"components/SettingsAccountContainerComponent.html":{}}}],["this.notifyinflightobservers(key",{"_index":498,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["this.openeddialog.emit(this.account.id",{"_index":878,"title":{},"body":{"components/ProfileCardComponent.html":{}}}],["this.passworderorr$.next",{"_index":923,"title":{},"body":{"components/SettingsAccountContainerComponent.html":{}}}],["this.passworderorr$.next(error.tostring",{"_index":924,"title":{},"body":{"components/SettingsAccountContainerComponent.html":{}}}],["this.route.snapshot.queryparams.returnurl",{"_index":350,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.router.navigate(['/account/login",{"_index":401,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigatebyurl",{"_index":352,"title":{},"body":{"injectables/AccountService.html":{},"guards/UnauthorizedGuard.html":{}}}],["this.router.navigatebyurl('/').then(_",{"_index":688,"title":{},"body":{"guards/LogoutGuard.html":{}}}],["this.router.navigatebyurl(this.route.snapshot.queryparams.returnurl",{"_index":351,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.saveauthinfo(null",{"_index":336,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.saveauthinfo(response",{"_index":349,"title":{},"body":{"injectables/AccountService.html":{}}}],["this.set(key",{"_index":488,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["this.showscroll",{"_index":771,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["this.submit.emit(this.form.value",{"_index":109,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["throw",{"_index":331,"title":{},"body":{"injectables/AccountService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/ManageService.html":{}}}],["throwerror",{"_index":462,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["throwerror('requested",{"_index":489,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["toolbar",{"_index":142,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{},"coverage.html":{}}}],["top",{"_index":755,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["top'},{'name",{"_index":140,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["top.component.html",{"_index":757,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["top.component.scss",{"_index":756,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["top.component.ts",{"_index":754,"title":{},"body":{"components/MainScrollToTopComponent.html":{},"coverage.html":{}}}],["top.component.ts:11",{"_index":764,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["top.component.ts:14",{"_index":762,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["top.component.ts:22",{"_index":763,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["top/main",{"_index":753,"title":{},"body":{"components/MainScrollToTopComponent.html":{},"coverage.html":{}}}],["topromise",{"_index":194,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{},"injectables/ErrorsHandler.html":{},"components/SettingsAccountContainerComponent.html":{}}}],["tort",{"_index":1169,"title":{},"body":{"license.html":{}}}],["transition",{"_index":790,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["tree",{"_index":39,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["true",{"_index":400,"title":{},"body":{"guards/AuthGuard.html":{},"modules/CoreModule.html":{},"classes/CustomValidators.html":{},"components/MainScrollToTopComponent.html":{},"guards/UnauthorizedGuard.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":345,"title":{},"body":{"injectables/AccountService.html":{}}}],["tslint:disable:no",{"_index":467,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["tslint:enable:no",{"_index":471,"title":{},"body":{"interfaces/CacheContent.html":{},"classes/CacheService.html":{}}}],["type",{"_index":16,"title":{},"body":{"classes/AccountDto.html":{},"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"injectables/AccountService.html":{},"guards/AuthGuard.html":{},"classes/AuthInfo.html":{},"interceptors/AuthInterceptor.html":{},"interfaces/AuthorizeAccountCommand.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"classes/CustomValidators.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsHandler.html":{},"injectables/ErrorsLogger.html":{},"interfaces/FormControlError.html":{},"interfaces/HttpError.html":{},"guards/LogoutGuard.html":{},"components/MainRootComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"injectables/ManageService.html":{},"directives/MpgpFormControlErrorDirective.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"interfaces/RegisterAccountCommand.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"guards/UnauthorizedGuard.html":{},"interfaces/UpdateAccountCommand.html":{},"interfaces/UpdatePasswordCommand.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unauthorizedguard",{"_index":239,"title":{"guards/UnauthorizedGuard.html":{}},"body":{"modules/AccountModule.html":{},"modules/AccountRoutingModule.html":{},"guards/UnauthorizedGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["up",{"_index":259,"title":{},"body":{"components/AccountRegisterRootComponent.html":{}}}],["updateaccount",{"_index":835,"title":{},"body":{"injectables/ManageService.html":{},"components/SettingsAccountContainerComponent.html":{}}}],["updateaccount(command",{"_index":838,"title":{},"body":{"injectables/ManageService.html":{},"components/SettingsAccountContainerComponent.html":{}}}],["updateaccountcommand",{"_index":839,"title":{"interfaces/UpdateAccountCommand.html":{}},"body":{"injectables/ManageService.html":{},"components/SettingsAccountContainerComponent.html":{},"interfaces/UpdateAccountCommand.html":{},"coverage.html":{}}}],["updatepassword",{"_index":836,"title":{},"body":{"injectables/ManageService.html":{},"components/SettingsAccountContainerComponent.html":{}}}],["updatepassword(command",{"_index":841,"title":{},"body":{"injectables/ManageService.html":{},"components/SettingsAccountContainerComponent.html":{}}}],["updatepasswordcommand",{"_index":842,"title":{"interfaces/UpdatePasswordCommand.html":{}},"body":{"injectables/ManageService.html":{},"components/SettingsAccountContainerComponent.html":{},"interfaces/UpdatePasswordCommand.html":{},"coverage.html":{}}}],["url",{"_index":564,"title":{},"body":{"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{}}}],["use",{"_index":612,"title":{},"body":{"injectables/ErrorsHandler.html":{},"index.html":{},"license.html":{}}}],["useclass",{"_index":548,"title":{},"body":{"modules/CoreModule.html":{},"miscellaneous/variables.html":{}}}],["usehash",{"_index":751,"title":{},"body":{"modules/MainRoutingModule.html":{}}}],["user",{"_index":257,"title":{},"body":{"components/AccountRegisterFormComponent.html":{},"classes/AuthInfo.html":{},"interfaces/ErrorWithContext.html":{},"injectables/ErrorsLogger.html":{},"components/SettingsAccountDataFormComponent.html":{}}}],["useravatar",{"_index":809,"title":{},"body":{"components/MainToolbarAvatarComponent.html":{},"components/ProfileCardComponent.html":{}}}],["userid",{"_index":810,"title":{},"body":{"components/MainToolbarAvatarComponent.html":{}}}],["usr/local",{"_index":1080,"title":{},"body":{"index.html":{}}}],["validator",{"_index":255,"title":{},"body":{"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["validators",{"_index":87,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"changelog.html":{}}}],["validators.maxlength(20",{"_index":100,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{}}}],["validators.maxlength(249",{"_index":107,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["validators.minlength(3",{"_index":99,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{}}}],["validators.minlength(8",{"_index":106,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["validators.pattern(/^[^\\s].{1,18}[^\\s",{"_index":253,"title":{},"body":{"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{}}}],["validators.pattern(/^[a",{"_index":101,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{}}}],["validators.required",{"_index":98,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["validators.ts",{"_index":550,"title":{},"body":{"classes/CustomValidators.html":{},"coverage.html":{}}}],["validators.ts:4",{"_index":554,"title":{},"body":{"classes/CustomValidators.html":{}}}],["value",{"_index":180,"title":{},"body":{"components/AccountLoginRootComponent.html":{},"components/AccountRegisterRootComponent.html":{},"injectables/AccountService.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"interfaces/FormControlError.html":{},"components/MainScrollToTopComponent.html":{},"injectables/ManageService.html":{},"directives/MpgpFormControlErrorDirective.html":{},"components/SettingsAccountContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":122,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["variable",{"_index":999,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1189,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vendorimports",{"_index":243,"title":{},"body":{"modules/AccountModule.html":{},"modules/GeneralModule.html":{},"modules/MainModule.html":{},"modules/ProfileModule.html":{},"modules/SettingsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":1060,"title":{},"body":{"index.html":{}}}],["viewencapsulation",{"_index":85,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["viewencapsulation.none",{"_index":50,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{}}}],["void",{"_index":75,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"injectables/AccountService.html":{},"interfaces/CacheContent.html":{},"classes/CacheService.html":{},"injectables/ErrorsHandler.html":{},"components/MainScrollToTopComponent.html":{},"directives/MpgpFormControlErrorDirective.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["wall",{"_index":156,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/AppComponent.html":{},"components/GeneralRootComponent.html":{},"components/MainErrorComponent.html":{},"components/MainRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/MainToolbarMailComponent.html":{},"components/MainToolbarNotificationsComponent.html":{},"components/ProfileCardComponent.html":{},"components/ProfileCardContainerComponent.html":{},"components/ProfileRootComponent.html":{},"components/ProfileWallContainerComponent.html":{},"components/SettingsAccountContainerComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{},"components/SettingsRootComponent.html":{},"coverage.html":{}}}],["warranties",{"_index":1138,"title":{},"body":{"license.html":{}}}],["way",{"_index":1173,"title":{},"body":{"license.html":{}}}],["websocketpath",{"_index":1210,"title":{},"body":{"miscellaneous/variables.html":{}}}],["welcome",{"_index":677,"title":{},"body":{"components/GeneralRootComponent.html":{}}}],["went",{"_index":698,"title":{},"body":{"components/MainErrorComponent.html":{}}}],["we’ll",{"_index":611,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["whether",{"_index":1166,"title":{},"body":{"license.html":{}}}],["width",{"_index":112,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountLoginRootComponent.html":{},"components/AccountRegisterFormComponent.html":{},"components/AccountRegisterRootComponent.html":{},"components/MainScrollToTopComponent.html":{},"components/MainToolbarAvatarComponent.html":{},"components/ProfileCardComponent.html":{},"components/SettingsAccountDataFormComponent.html":{},"components/SettingsAccountPasswordFormComponent.html":{}}}],["window.location.pathname",{"_index":621,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["window.location.search",{"_index":622,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["window.pageyoffset",{"_index":768,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["window.requestanimationframe(smoothscroll",{"_index":772,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["window.scrollto(0",{"_index":773,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["window:scroll",{"_index":761,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["without",{"_index":1117,"title":{},"body":{"license.html":{}}}],["write",{"_index":884,"title":{},"body":{"components/ProfileCardComponent.html":{}}}],["wrong",{"_index":699,"title":{},"body":{"components/MainErrorComponent.html":{}}}],["ws://localhost:5000/elite",{"_index":1211,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x",{"_index":819,"title":{},"body":{"components/MainToolbarAvatarComponent.html":{}}}],["x.user.avatar",{"_index":822,"title":{},"body":{"components/MainToolbarAvatarComponent.html":{}}}],["yarn",{"_index":1076,"title":{},"body":{"index.html":{}}}],["yes",{"_index":529,"title":{},"body":{"classes/CacheService.html":{}}}],["z",{"_index":794,"title":{},"body":{"components/MainScrollToTopComponent.html":{}}}],["z0",{"_index":103,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{}}}],["za",{"_index":102,"title":{},"body":{"components/AccountLoginFormComponent.html":{},"components/AccountRegisterFormComponent.html":{}}}],["zone",{"_index":613,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["zone.js",{"_index":1050,"title":{},"body":{"dependencies.html":{}}}],["zone.run",{"_index":615,"title":{},"body":{"injectables/ErrorsHandler.html":{}}}],["zoom",{"_index":219,"title":{},"body":{"modules/AccountModule.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/GeneralModule.html":{},"modules/MainModule.html":{},"modules/MpgpFormControlErrorModule.html":{},"modules/ProfileModule.html":{},"modules/SettingsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AccountDto.html":{"url":"classes/AccountDto.html","title":"class - AccountDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AccountDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/account.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                avatar\n                            \n                            \n                                id\n                            \n                            \n                                languages\n                            \n                            \n                                lastOnline\n                            \n                            \n                                nickname\n                            \n                            \n                                registerDate\n                            \n                            \n                                statusInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            avatar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/interfaces/account.dto.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/interfaces/account.dto.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            languages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/interfaces/account.dto.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastOnline\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/interfaces/account.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nickname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/interfaces/account.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/interfaces/account.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            statusInfo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/interfaces/account.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AccountDto {\n  id: number;\n  avatar: string;\n  languages: string;\n  lastOnline: Date;\n  nickname: string;\n  registerDate: Date;\n  statusInfo: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AccountLoginFormComponent.html":{"url":"components/AccountLoginFormComponent.html","title":"component - AccountLoginFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AccountLoginFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/account/components/account-login-form/account-login-form.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                account-login-form\n            \n\n            \n                styleUrls\n                ./account-login-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./account-login-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/account/components/account-login-form/account-login-form.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        submit\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/account/components/account-login-form/account-login-form.component.ts:16\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createForm\n                        \n                        \n                    \n                \n            \n            \n                \ncreateForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/account/components/account-login-form/account-login-form.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/account/components/account-login-form/account-login-form.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/account/components/account-login-form/account-login-form.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/account/components/account-login-form/account-login-form.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, OnInit, Output, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { AuthorizeAccountCommand } from '~/core/interfaces/authorize-account-command';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'account-login-form',\n  styleUrls: ['./account-login-form.component.scss'],\n  templateUrl: './account-login-form.component.html',\n})\nexport class AccountLoginFormComponent implements OnInit {\n  form: FormGroup;\n\n  @Output() submit = new EventEmitter();\n\n  constructor(private readonly fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.createForm();\n  }\n\n  createForm(): void {\n    this.form = this.fb.group({\n      login: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(20), Validators.pattern(/^[a-zA-Z0-9]+$/)]],\n      password: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(249)]],\n    });\n  }\n\n  onSubmit(event: Event): void {\n    event.stopPropagation();\n    this.submit.emit(this.form.value);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n          \n        \n      \n    \n    \n      \n        \n          \n            \n        \n      \n    \n    \n      \n        Submit\n      \n    \n  \n\n    \n\n    \n                \n                    ./account-login-form.component.scss\n                \n                .demo-full-width {\n  width: 100%;\n}\n\n.account-login-table {\n  margin: 0 auto;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                      Submit            '\n    var COMPONENTS = [{'name': 'AccountLoginFormComponent', 'selector': 'account-login-form'},{'name': 'AccountLoginRootComponent', 'selector': 'account-login-root'},{'name': 'AccountRegisterFormComponent', 'selector': 'account-register-form'},{'name': 'AccountRegisterRootComponent', 'selector': 'account-register-root'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'GeneralRootComponent', 'selector': 'general-root'},{'name': 'MainErrorComponent', 'selector': 'main-error'},{'name': 'MainRootComponent', 'selector': 'main-root'},{'name': 'MainScrollToTopComponent', 'selector': 'main-scroll-to-top'},{'name': 'MainToolbarAvatarComponent', 'selector': 'main-toolbar-avatar'},{'name': 'MainToolbarMailComponent', 'selector': 'main-toolbar-mail'},{'name': 'MainToolbarNotificationsComponent', 'selector': 'main-toolbar-notifications'},{'name': 'ProfileCardComponent', 'selector': 'profile-card'},{'name': 'ProfileCardContainerComponent', 'selector': 'profile-card-container'},{'name': 'ProfileRootComponent', 'selector': 'profile-root'},{'name': 'ProfileWallContainerComponent', 'selector': 'profile-wall-container'},{'name': 'SettingsAccountContainerComponent', 'selector': 'settings-account-container'},{'name': 'SettingsAccountDataFormComponent', 'selector': 'settings-account-data-form'},{'name': 'SettingsAccountPasswordFormComponent', 'selector': 'settings-account-password-form'},{'name': 'SettingsRootComponent', 'selector': 'settings-root'}];\n    var DIRECTIVES = [{'name': 'MpgpFormControlErrorDirective', 'selector': '[MpgpFormControlError]'}];\n    var ACTUAL_COMPONENT = {'name': 'AccountLoginFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AccountLoginRootComponent.html":{"url":"components/AccountLoginRootComponent.html","title":"component - AccountLoginRootComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AccountLoginRootComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/account/pages/account-login-root/account-login-root.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                account-login-root\n            \n\n            \n                styleUrls\n                ./account-login-root.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./account-login-root.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formErorr$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(accountService: AccountService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/account/pages/account-login-root/account-login-root.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit(command: AuthorizeAccountCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/account/pages/account-login-root/account-login-root.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                AuthorizeAccountCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formErorr$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/account/pages/account-login-root/account-login-root.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { EMPTY, Subject } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { AuthorizeAccountCommand } from '~/core/interfaces/authorize-account-command';\nimport { AccountService } from '~/core/services/account.service';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'account-login-root',\n  styleUrls: ['./account-login-root.component.scss'],\n  templateUrl: './account-login-root.component.html',\n})\nexport class AccountLoginRootComponent {\n  formErorr$ = new Subject();\n\n  constructor(private readonly accountService: AccountService) {}\n\n  onSubmit(command: AuthorizeAccountCommand): void {\n    this.formErorr$.next('');\n    this.accountService\n      .login(command)\n      .pipe(\n        catchError(error => {\n          this.formErorr$.next(error.toString());\n\n          return EMPTY;\n        }),\n      )\n      .toPromise();\n  }\n}\n\n    \n\n    \n        \n  \n    Sign In\n  \n  \n    {{formErorr}}\n    \n  \n\n\n  Don't have an account? \n  Register\n\n    \n\n    \n                \n                    ./account-login-root.component.scss\n                \n                .account-login.mat-card {\n  margin: 2em auto;\n  max-width: 480px;\n  text-align: center;\n}\n\n.account-disclaimer {\n  text-align: center;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Sign In        {{formErorr}}        Don\\'t have an account?   Register'\n    var COMPONENTS = [{'name': 'AccountLoginFormComponent', 'selector': 'account-login-form'},{'name': 'AccountLoginRootComponent', 'selector': 'account-login-root'},{'name': 'AccountRegisterFormComponent', 'selector': 'account-register-form'},{'name': 'AccountRegisterRootComponent', 'selector': 'account-register-root'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'GeneralRootComponent', 'selector': 'general-root'},{'name': 'MainErrorComponent', 'selector': 'main-error'},{'name': 'MainRootComponent', 'selector': 'main-root'},{'name': 'MainScrollToTopComponent', 'selector': 'main-scroll-to-top'},{'name': 'MainToolbarAvatarComponent', 'selector': 'main-toolbar-avatar'},{'name': 'MainToolbarMailComponent', 'selector': 'main-toolbar-mail'},{'name': 'MainToolbarNotificationsComponent', 'selector': 'main-toolbar-notifications'},{'name': 'ProfileCardComponent', 'selector': 'profile-card'},{'name': 'ProfileCardContainerComponent', 'selector': 'profile-card-container'},{'name': 'ProfileRootComponent', 'selector': 'profile-root'},{'name': 'ProfileWallContainerComponent', 'selector': 'profile-wall-container'},{'name': 'SettingsAccountContainerComponent', 'selector': 'settings-account-container'},{'name': 'SettingsAccountDataFormComponent', 'selector': 'settings-account-data-form'},{'name': 'SettingsAccountPasswordFormComponent', 'selector': 'settings-account-password-form'},{'name': 'SettingsRootComponent', 'selector': 'settings-root'}];\n    var DIRECTIVES = [{'name': 'MpgpFormControlErrorDirective', 'selector': '[MpgpFormControlError]'}];\n    var ACTUAL_COMPONENT = {'name': 'AccountLoginRootComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AccountModule.html":{"url":"modules/AccountModule.html","title":"module - AccountModule","body":"\n                   \n\n\n\n\n    Modules\n    AccountModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AccountModule\n\n\n\ncluster_AccountModule_declarations\n\n\n\ncluster_AccountModule_imports\n\n\n\n\nMainErrorComponent\n\nMainErrorComponent\n\n\n\nAccountModule\n\nAccountModule\n\nAccountModule -->\n\nMainErrorComponent->AccountModule\n\n\n\n\n\nMainRootComponent\n\nMainRootComponent\n\nAccountModule -->\n\nMainRootComponent->AccountModule\n\n\n\n\n\nMainScrollToTopComponent\n\nMainScrollToTopComponent\n\nAccountModule -->\n\nMainScrollToTopComponent->AccountModule\n\n\n\n\n\nMainToolbarAvatarComponent\n\nMainToolbarAvatarComponent\n\nAccountModule -->\n\nMainToolbarAvatarComponent->AccountModule\n\n\n\n\n\nMainToolbarMailComponent\n\nMainToolbarMailComponent\n\nAccountModule -->\n\nMainToolbarMailComponent->AccountModule\n\n\n\n\n\nMainToolbarNotificationsComponent\n\nMainToolbarNotificationsComponent\n\nAccountModule -->\n\nMainToolbarNotificationsComponent->AccountModule\n\n\n\n\n\nAccountRoutingModule\n\nAccountRoutingModule\n\nAccountModule -->\n\nAccountRoutingModule->AccountModule\n\n\n\n\n\nMpgpFormControlErrorModule\n\nMpgpFormControlErrorModule\n\nAccountModule -->\n\nMpgpFormControlErrorModule->AccountModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/account/account.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MainErrorComponent\n                        \n                        \n                            MainRootComponent\n                        \n                        \n                            MainScrollToTopComponent\n                        \n                        \n                            MainToolbarAvatarComponent\n                        \n                        \n                            MainToolbarMailComponent\n                        \n                        \n                            MainToolbarNotificationsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AccountRoutingModule\n                        \n                        \n                            MpgpFormControlErrorModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule, MatCardModule, MatFormFieldModule, MatInputModule } from '@angular/material';\n\nimport { MpgpFormControlErrorModule } from '~/shared';\n\nimport { AccountRoutingModule } from './account-routing.module';\nimport { components } from './components';\nimport { containers } from './containers';\nimport { LogoutGuard } from './guards/logout.guard';\nimport { UnauthorizedGuard } from './guards/unauthorized.guard';\nimport { pages } from './pages';\n\nconst declarations = [...components, ...containers, ...pages];\n\nexport const vendorImports = [MatButtonModule, MatCardModule, MatFormFieldModule, MatInputModule];\n\nconst imports = [AccountRoutingModule, CommonModule, FormsModule, MpgpFormControlErrorModule, ReactiveFormsModule, ...vendorImports];\nconst providers = [LogoutGuard, UnauthorizedGuard];\n\n@NgModule({\n  declarations,\n  imports,\n  providers,\n})\nexport class AccountModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AccountRegisterFormComponent.html":{"url":"components/AccountRegisterFormComponent.html","title":"component - AccountRegisterFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AccountRegisterFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/account/components/account-register-form/account-register-form.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                account-register-form\n            \n\n            \n                styleUrls\n                ./account-register-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./account-register-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/account/components/account-register-form/account-register-form.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        submit\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/account/components/account-register-form/account-register-form.component.ts:17\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createForm\n                        \n                        \n                    \n                \n            \n            \n                \ncreateForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/account/components/account-register-form/account-register-form.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/account/components/account-register-form/account-register-form.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/account/components/account-register-form/account-register-form.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/account/components/account-register-form/account-register-form.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, OnInit, Output, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { RegisterAccountCommand } from '~/core/interfaces/register-account-command';\nimport { CustomValidators } from '~/shared';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'account-register-form',\n  styleUrls: ['./account-register-form.component.scss'],\n  templateUrl: './account-register-form.component.html',\n})\nexport class AccountRegisterFormComponent implements OnInit {\n  form: FormGroup;\n\n  @Output() submit = new EventEmitter();\n\n  constructor(private readonly fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.createForm();\n  }\n\n  createForm(): void {\n    this.form = this.fb.group(\n      {\n        login: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(20), Validators.pattern(/^[a-zA-Z0-9]+$/)]],\n        nickname: [null, [Validators.minLength(3), Validators.maxLength(20), Validators.pattern(/^[^\\s].{1,18}[^\\s]$/)]],\n        password: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(249)]],\n        passwordRepeat: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(249)]],\n      },\n      { validator: CustomValidators.matchPassword },\n    );\n  }\n\n  onSubmit(event: Event): void {\n    event.stopPropagation();\n    this.submit.emit(this.form.value);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n          \n          Your account name\n        \n      \n    \n    \n      \n        \n          \n          \n        \n      \n    \n    \n      \n        \n          \n          \n        \n      \n    \n    \n      \n        \n          \n          \n          Your user name\n        \n      \n    \n    \n      \n        Submit\n      \n    \n  \n\n    \n\n    \n                \n                    ./account-register-form.component.scss\n                \n                .demo-full-width {\n  width: 100%;\n}\n\n.account-register-table {\n  margin: 0 auto;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  Your account name                                                                                                                                                                                  Your user name                                    Submit            '\n    var COMPONENTS = [{'name': 'AccountLoginFormComponent', 'selector': 'account-login-form'},{'name': 'AccountLoginRootComponent', 'selector': 'account-login-root'},{'name': 'AccountRegisterFormComponent', 'selector': 'account-register-form'},{'name': 'AccountRegisterRootComponent', 'selector': 'account-register-root'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'GeneralRootComponent', 'selector': 'general-root'},{'name': 'MainErrorComponent', 'selector': 'main-error'},{'name': 'MainRootComponent', 'selector': 'main-root'},{'name': 'MainScrollToTopComponent', 'selector': 'main-scroll-to-top'},{'name': 'MainToolbarAvatarComponent', 'selector': 'main-toolbar-avatar'},{'name': 'MainToolbarMailComponent', 'selector': 'main-toolbar-mail'},{'name': 'MainToolbarNotificationsComponent', 'selector': 'main-toolbar-notifications'},{'name': 'ProfileCardComponent', 'selector': 'profile-card'},{'name': 'ProfileCardContainerComponent', 'selector': 'profile-card-container'},{'name': 'ProfileRootComponent', 'selector': 'profile-root'},{'name': 'ProfileWallContainerComponent', 'selector': 'profile-wall-container'},{'name': 'SettingsAccountContainerComponent', 'selector': 'settings-account-container'},{'name': 'SettingsAccountDataFormComponent', 'selector': 'settings-account-data-form'},{'name': 'SettingsAccountPasswordFormComponent', 'selector': 'settings-account-password-form'},{'name': 'SettingsRootComponent', 'selector': 'settings-root'}];\n    var DIRECTIVES = [{'name': 'MpgpFormControlErrorDirective', 'selector': '[MpgpFormControlError]'}];\n    var ACTUAL_COMPONENT = {'name': 'AccountRegisterFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AccountRegisterRootComponent.html":{"url":"components/AccountRegisterRootComponent.html","title":"component - AccountRegisterRootComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AccountRegisterRootComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/account/pages/account-register-root/account-register-root.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                account-register-root\n            \n\n            \n                styleUrls\n                ./account-register-root.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./account-register-root.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formErorr$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(accountService: AccountService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/account/pages/account-register-root/account-register-root.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit(command: RegisterAccountCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/account/pages/account-register-root/account-register-root.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                RegisterAccountCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formErorr$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/account/pages/account-register-root/account-register-root.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { EMPTY, Subject } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { RegisterAccountCommand } from '~/core/interfaces/register-account-command';\nimport { AccountService } from '~/core/services/account.service';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'account-register-root',\n  styleUrls: ['./account-register-root.component.scss'],\n  templateUrl: './account-register-root.component.html',\n})\nexport class AccountRegisterRootComponent {\n  formErorr$ = new Subject();\n\n  constructor(private readonly accountService: AccountService) {}\n\n  onSubmit(command: RegisterAccountCommand): void {\n    this.formErorr$.next('');\n    this.accountService\n      .register(command)\n      .pipe(\n        catchError(error => {\n          this.formErorr$.next(error.toString());\n\n          return EMPTY;\n        }),\n      )\n      .toPromise();\n  }\n}\n\n    \n\n    \n        \n  \n    Sign Up\n  \n  \n    {{formErorr}}\n    \n  \n\n\n  Already have an account?\n  Log In\n\n    \n\n    \n                \n                    ./account-register-root.component.scss\n                \n                .account-register.mat-card {\n  margin: 2em auto;\n  max-width: 480px;\n  text-align: center;\n}\n\n.account-disclaimer {\n  text-align: center;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Sign Up        {{formErorr}}        Already have an account?  Log In'\n    var COMPONENTS = [{'name': 'AccountLoginFormComponent', 'selector': 'account-login-form'},{'name': 'AccountLoginRootComponent', 'selector': 'account-login-root'},{'name': 'AccountRegisterFormComponent', 'selector': 'account-register-form'},{'name': 'AccountRegisterRootComponent', 'selector': 'account-register-root'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'GeneralRootComponent', 'selector': 'general-root'},{'name': 'MainErrorComponent', 'selector': 'main-error'},{'name': 'MainRootComponent', 'selector': 'main-root'},{'name': 'MainScrollToTopComponent', 'selector': 'main-scroll-to-top'},{'name': 'MainToolbarAvatarComponent', 'selector': 'main-toolbar-avatar'},{'name': 'MainToolbarMailComponent', 'selector': 'main-toolbar-mail'},{'name': 'MainToolbarNotificationsComponent', 'selector': 'main-toolbar-notifications'},{'name': 'ProfileCardComponent', 'selector': 'profile-card'},{'name': 'ProfileCardContainerComponent', 'selector': 'profile-card-container'},{'name': 'ProfileRootComponent', 'selector': 'profile-root'},{'name': 'ProfileWallContainerComponent', 'selector': 'profile-wall-container'},{'name': 'SettingsAccountContainerComponent', 'selector': 'settings-account-container'},{'name': 'SettingsAccountDataFormComponent', 'selector': 'settings-account-data-form'},{'name': 'SettingsAccountPasswordFormComponent', 'selector': 'settings-account-password-form'},{'name': 'SettingsRootComponent', 'selector': 'settings-root'}];\n    var DIRECTIVES = [{'name': 'MpgpFormControlErrorDirective', 'selector': '[MpgpFormControlError]'}];\n    var ACTUAL_COMPONENT = {'name': 'AccountRegisterRootComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AccountRoutingModule.html":{"url":"modules/AccountRoutingModule.html","title":"module - AccountRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AccountRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/account/account-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { LogoutGuard } from './guards/logout.guard';\nimport { UnauthorizedGuard } from './guards/unauthorized.guard';\nimport { AccountLoginRootComponent, AccountRegisterRootComponent } from './pages';\n\nconst routes: Routes = [\n  {\n    path: '',\n    canActivate: [UnauthorizedGuard],\n    children: [{ path: 'login', component: AccountLoginRootComponent }, { path: 'register', component: AccountRegisterRootComponent }],\n  },\n  { path: 'logout', canActivate: [LogoutGuard] },\n];\n\n@NgModule({\n  exports: [RouterModule],\n  imports: [RouterModule.forChild(routes)],\n})\nexport class AccountRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AccountService.html":{"url":"injectables/AccountService.html","title":"injectable - AccountService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AccountService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/account.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                authInfoSubject$\n                            \n                            \n                                    Private\n                                authInfoValue\n                            \n                            \n                                    Private\n                                    Readonly\n                                authInfoValue$\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                localStorageKey\n                            \n                            \n                                    Private\n                                    Readonly\n                                path\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleAuthorizationResponse\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                register\n                            \n                            \n                                    Private\n                                saveAuthInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    authInfo\n                                \n                                \n                                    authInfo$\n                                \n                                \n                                    isLoggedIn\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, route: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/account.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleAuthorizationResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleAuthorizationResponse(response: AuthInfo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/account.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                                AuthInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            login\n                        \n                        \n                    \n                \n            \n            \n                \nlogin(command: AuthorizeAccountCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/account.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                AuthorizeAccountCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/account.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            register\n                        \n                        \n                    \n                \n            \n            \n                \nregister(command: RegisterAccountCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/account.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                RegisterAccountCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            saveAuthInfo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    saveAuthInfo(info: AuthInfo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/account.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    info\n                                    \n                                                AuthInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            authInfoSubject$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new ReplaySubject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/account.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            authInfoValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthInfo\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/account.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            authInfoValue$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/account.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            localStorageKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'auth'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/account.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${environment.apiUrl}account`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/account.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        authInfo\n                    \n                \n\n                \n                    \n                        getauthInfo()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/account.service.ts:27\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        authInfo$\n                    \n                \n\n                \n                    \n                        getauthInfo$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/account.service.ts:31\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isLoggedIn\n                    \n                \n\n                \n                    \n                        getisLoggedIn()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/account.service.ts:35\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Observable, of, ReplaySubject } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\n\nimport { environment } from '~/env/environment';\n\nimport { AuthInfo } from '../interfaces/auth-info.dto';\nimport { AuthorizeAccountCommand } from '../interfaces/authorize-account-command';\nimport { RegisterAccountCommand } from '../interfaces/register-account-command';\n\n@Injectable()\nexport class AccountService {\n  private authInfoValue: AuthInfo;\n  private readonly authInfoSubject$ = new ReplaySubject();\n  private readonly authInfoValue$: Observable;\n  private readonly path = `${environment.apiUrl}account`;\n  private static readonly localStorageKey = 'auth';\n\n  constructor(private readonly http: HttpClient, private readonly route: ActivatedRoute, private readonly router: Router) {\n    this.authInfoValue = JSON.parse(localStorage.getItem(AccountService.localStorageKey) || null);\n    this.authInfoValue$ = this.authInfoSubject$.asObservable();\n    this.authInfoSubject$.next(this.authInfo);\n  }\n\n  get authInfo(): AuthInfo {\n    return this.authInfoValue;\n  }\n\n  get authInfo$(): Observable {\n    return this.authInfoValue$;\n  }\n\n  get isLoggedIn(): boolean {\n    return this.authInfo != null;\n  }\n\n  login(command: AuthorizeAccountCommand): Observable {\n    return this.http.post(this.path, command).pipe(\n      catchError(_ => {\n        throw new Error('Invalid login or password');\n      }),\n      tap(this.handleAuthorizationResponse),\n    );\n  }\n\n  logout(): Observable {\n    return of(null).pipe(\n      tap(_ => {\n        this.saveAuthInfo(null);\n        localStorage.removeItem(AccountService.localStorageKey);\n      }),\n    );\n  }\n\n  register(command: RegisterAccountCommand): Observable {\n    return this.http.put(this.path, command).pipe(\n      catchError(error => {\n        if (error && error.value && error.value.status === 409) {\n          throw new Error('That login is taken. Try another.');\n        }\n        throw new Error('Invalid input.');\n      }),\n      tap(this.handleAuthorizationResponse),\n    );\n  }\n\n  private handleAuthorizationResponse(response: AuthInfo): void {\n    if (!response.errorCode) {\n      this.saveAuthInfo(response);\n\n      if (this.route.snapshot.queryParams.returnUrl) {\n        this.router.navigateByUrl(this.route.snapshot.queryParams.returnUrl);\n      } else {\n        this.router.navigateByUrl('/');\n      }\n    }\n  }\n\n  private saveAuthInfo(info: AuthInfo): void {\n    localStorage.setItem(AccountService.localStorageKey, JSON.stringify(info));\n    this.authInfoValue = info;\n    this.authInfoSubject$.next(info);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                app\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'app',\n  template: '',\n})\nexport class AppComponent {}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccountLoginFormComponent', 'selector': 'account-login-form'},{'name': 'AccountLoginRootComponent', 'selector': 'account-login-root'},{'name': 'AccountRegisterFormComponent', 'selector': 'account-register-form'},{'name': 'AccountRegisterRootComponent', 'selector': 'account-register-root'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'GeneralRootComponent', 'selector': 'general-root'},{'name': 'MainErrorComponent', 'selector': 'main-error'},{'name': 'MainRootComponent', 'selector': 'main-root'},{'name': 'MainScrollToTopComponent', 'selector': 'main-scroll-to-top'},{'name': 'MainToolbarAvatarComponent', 'selector': 'main-toolbar-avatar'},{'name': 'MainToolbarMailComponent', 'selector': 'main-toolbar-mail'},{'name': 'MainToolbarNotificationsComponent', 'selector': 'main-toolbar-notifications'},{'name': 'ProfileCardComponent', 'selector': 'profile-card'},{'name': 'ProfileCardContainerComponent', 'selector': 'profile-card-container'},{'name': 'ProfileRootComponent', 'selector': 'profile-root'},{'name': 'ProfileWallContainerComponent', 'selector': 'profile-wall-container'},{'name': 'SettingsAccountContainerComponent', 'selector': 'settings-account-container'},{'name': 'SettingsAccountDataFormComponent', 'selector': 'settings-account-data-form'},{'name': 'SettingsAccountPasswordFormComponent', 'selector': 'settings-account-password-form'},{'name': 'SettingsRootComponent', 'selector': 'settings-root'}];\n    var DIRECTIVES = [{'name': 'MpgpFormControlErrorDirective', 'selector': '[MpgpFormControlError]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nMainModule\n\nMainModule\n\nAppModule -->\n\nMainModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CoreModule\n                        \n                        \n                            MainModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { LayoutModule } from '@angular/cdk/layout';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { CoreModule } from '~/core/core.module';\nimport { MainModule } from '~/main/main.module';\n\nimport { AppComponent } from './app.component';\n\nconst bootstrap = [AppComponent];\n\nconst declarations = [AppComponent];\n\nconst imports = [BrowserAnimationsModule, BrowserModule, CoreModule, HttpClientModule, LayoutModule, MainModule];\n\n@NgModule({\n  bootstrap,\n  declarations,\n  imports,\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getParagraphText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParagraphText\n                        \n                        \n                    \n                \n            \n            \n                \ngetParagraphText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): any {\n    return browser.get('/');\n  }\n\n  getParagraphText(): any {\n    return element(by.css('mat-toolbar-row > span')).getText();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/main/guards/auth.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(accountService: AccountService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/main/guards/auth.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(_route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/guards/auth.guard.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\n\nimport { AccountService } from '~/core/services/account.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor(private readonly accountService: AccountService, private readonly router: Router) {}\n\n  canActivate(_route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    if (this.accountService.isLoggedIn) {\n      return true;\n    }\n\n    this.router.navigate(['/account/login'], { queryParams: { returnUrl: state.url } });\n\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthInfo.html":{"url":"classes/AuthInfo.html","title":"class - AuthInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/auth-info.dto.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            HttpError\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authToken\n                            \n                            \n                                errorCode\n                            \n                            \n                                message\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            authToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/interfaces/auth-info.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/interfaces/auth-info.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/interfaces/auth-info.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AccountDto\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/interfaces/auth-info.dto.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AccountDto } from './account.dto';\nimport { HttpError } from './http-error.dto';\n\nexport class AuthInfo implements HttpError {\n  authToken: string;\n  user: AccountDto;\n  errorCode: number;\n  message: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptor.html":{"url":"interceptors/AuthInterceptor.html","title":"interceptor - AuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/auth.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accountService: AccountService, errorHandler: ErrorHandler)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/auth.interceptor.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorHandler\n                                                  \n                                                        \n                                                                        ErrorHandler\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/auth.interceptor.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { ErrorHandler, Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { catchError, delay, retryWhen, scan, tap } from 'rxjs/operators';\n\nimport { AccountService } from './account.service';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private readonly accountService: AccountService, private readonly errorHandler: ErrorHandler) { }\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    const authorizationHeader = {};\n    if (this.accountService.isLoggedIn) {\n      const authToken = this.accountService.authInfo.authToken;\n      authorizationHeader['Authorization'] = `Bearer ${authToken}`;\n    }\n\n    const newRequest = request.clone({\n      setHeaders: {\n        ...authorizationHeader,\n      },\n    });\n\n    return next.handle(newRequest).pipe(\n      retryWhen(err =>\n        err.pipe(\n          tap(error => {\n            if (error.status !== 503) {\n              throw error;\n            }\n          }),\n          scan(retryCount => {\n            if (retryCount  {\n            this.errorHandler.handleError(error);\n            throw of(error);\n          }),\n        ),\n      ),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthorizeAccountCommand.html":{"url":"interfaces/AuthorizeAccountCommand.html","title":"interface - AuthorizeAccountCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthorizeAccountCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/authorize-account-command.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        login\n                                \n                                \n                                        password\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        login\n                                    \n                                \n                                \n                                    \n                                        login:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AuthorizeAccountCommand {\n  login: string;\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CacheContent.html":{"url":"interfaces/CacheContent.html","title":"interface - CacheContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CacheContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/cache.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        expiry\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expiry\n                                    \n                                \n                                \n                                    \n                                        expiry:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable, of, Subject, throwError } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\ninterface CacheContent {\n  expiry: number;\n  value: T;\n}\n\n// Non-injectable.\n// Do not provide this service to modules.\nexport class CacheService {\n  /* tslint:disable:no-any */\n  private readonly cache = new Map>();\n  private readonly inFlightObservables = new Map>();\n  /* tslint:enable:no-any */\n  public static readonly cacheTime = 300000;\n  private static instanceValue: CacheService;\n\n  public static get instance(): CacheService {\n    return CacheService.instanceValue || (CacheService.instanceValue = new CacheService());\n  }\n\n  public get(key: string, fallback?: Observable, cacheTime: number = CacheService.cacheTime): Observable {\n    if (this.hasValidCachedValue(key)) {\n      return of(this.cache.get(key).value) as Observable;\n    }\n\n    if (this.inFlightObservables.has(key)) {\n      return this.inFlightObservables.get(key) as Observable;\n    }\n\n    if (fallback && fallback instanceof Observable) {\n      this.inFlightObservables.set(key, new Subject());\n\n      return fallback.pipe(tap(value => this.set(key, value, cacheTime)));\n    }\n\n    return throwError('Requested key is not available in Cache');\n  }\n\n  public has(key: string): boolean {\n    return this.cache.has(key);\n  }\n\n  private set(key: string, value: T, maxAge: number = CacheService.cacheTime): void {\n    this.cache.set(key, { expiry: Date.now() + maxAge, value });\n    this.notifyInFlightObservers(key, value);\n  }\n\n  private notifyInFlightObservers(key: string, value: T): void {\n    if (this.inFlightObservables.has(key)) {\n      const inFlight = this.inFlightObservables.get(key);\n      const observersCount = inFlight.observers.length;\n\n      if (observersCount) {\n        inFlight.next(value);\n      }\n\n      inFlight.complete();\n      this.inFlightObservables.delete(key);\n    }\n  }\n\n  private hasValidCachedValue(key: string): boolean {\n    if (this.cache.has(key)) {\n      if (this.cache.get(key).expiry  {\n    const descriptor = propertyDescriptor || Object.getOwnPropertyDescriptor(target, methodName);\n    const originalMethod = descriptor.value;\n\n    descriptor.value = function newMethod(): any {\n      const args = Array.from(arguments);\n      const key = `${target.constructor.name}.${methodName}:${args.join(',')}`;\n      const result = originalMethod.apply(this, args);\n\n      return CacheService.instance.get(key, result, cacheTime);\n    };\n\n    return descriptor;\n  };\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CacheService.html":{"url":"classes/CacheService.html","title":"class - CacheService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CacheService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/cache.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                cache\n                            \n                            \n                                    Static\n                                    Readonly\n                                cacheTime\n                            \n                            \n                                    Private\n                                    Readonly\n                                inFlightObservables\n                            \n                            \n                                    Private\n                                    Static\n                                instanceValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                has\n                            \n                            \n                                    Private\n                                hasValidCachedValue\n                            \n                            \n                                    Private\n                                notifyInFlightObservers\n                            \n                            \n                                    Private\n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    instance\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            cache\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map>()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/cache.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            cacheTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 300000\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/cache.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            inFlightObservables\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Map>()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/cache.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            instanceValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CacheService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/cache.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(key: string, fallback?: Observable, cacheTime: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/cache.service.ts:23\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    fallback\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    cacheTime\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        CacheService.cacheTime\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            has\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    has(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/cache.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            hasValidCachedValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasValidCachedValue(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/cache.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            notifyInFlightObservers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    notifyInFlightObservers(key: string, value: T)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/cache.service.ts:50\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            set\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    set(key: string, value: T, maxAge: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/cache.service.ts:45\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    maxAge\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        CacheService.cacheTime\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        instance\n                    \n                \n\n                \n                    \n                        getinstance()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/cache.service.ts:19\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Observable, of, Subject, throwError } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\ninterface CacheContent {\n  expiry: number;\n  value: T;\n}\n\n// Non-injectable.\n// Do not provide this service to modules.\nexport class CacheService {\n  /* tslint:disable:no-any */\n  private readonly cache = new Map>();\n  private readonly inFlightObservables = new Map>();\n  /* tslint:enable:no-any */\n  public static readonly cacheTime = 300000;\n  private static instanceValue: CacheService;\n\n  public static get instance(): CacheService {\n    return CacheService.instanceValue || (CacheService.instanceValue = new CacheService());\n  }\n\n  public get(key: string, fallback?: Observable, cacheTime: number = CacheService.cacheTime): Observable {\n    if (this.hasValidCachedValue(key)) {\n      return of(this.cache.get(key).value) as Observable;\n    }\n\n    if (this.inFlightObservables.has(key)) {\n      return this.inFlightObservables.get(key) as Observable;\n    }\n\n    if (fallback && fallback instanceof Observable) {\n      this.inFlightObservables.set(key, new Subject());\n\n      return fallback.pipe(tap(value => this.set(key, value, cacheTime)));\n    }\n\n    return throwError('Requested key is not available in Cache');\n  }\n\n  public has(key: string): boolean {\n    return this.cache.has(key);\n  }\n\n  private set(key: string, value: T, maxAge: number = CacheService.cacheTime): void {\n    this.cache.set(key, { expiry: Date.now() + maxAge, value });\n    this.notifyInFlightObservers(key, value);\n  }\n\n  private notifyInFlightObservers(key: string, value: T): void {\n    if (this.inFlightObservables.has(key)) {\n      const inFlight = this.inFlightObservables.get(key);\n      const observersCount = inFlight.observers.length;\n\n      if (observersCount) {\n        inFlight.next(value);\n      }\n\n      inFlight.complete();\n      this.inFlightObservables.delete(key);\n    }\n  }\n\n  private hasValidCachedValue(key: string): boolean {\n    if (this.cache.has(key)) {\n      if (this.cache.get(key).expiry  {\n    const descriptor = propertyDescriptor || Object.getOwnPropertyDescriptor(target, methodName);\n    const originalMethod = descriptor.value;\n\n    descriptor.value = function newMethod(): any {\n      const args = Array.from(arguments);\n      const key = `${target.constructor.name}.${methodName}:${args.join(',')}`;\n      const result = originalMethod.apply(this, args);\n\n      return CacheService.instance.get(key, result, cacheTime);\n    };\n\n    return descriptor;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_providers\n\n\n\n\nAccountService\n\nAccountService\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nAccountService->CoreModule\n\n\n\n\n\nErrorsLogger\n\nErrorsLogger\n\nCoreModule -->\n\nErrorsLogger->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AccountService\n                        \n                        \n                            ErrorsLogger\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ErrorHandler, NgModule } from '@angular/core';\n\nimport { AccountService } from './services/account.service';\nimport { AuthInterceptor } from './services/auth.interceptor';\nimport { ErrorsHandler } from './services/errors-handler.service';\nimport { ErrorsLogger } from './services/errors-logger.service';\n\nconst authInterceptor = {\n  multi: true,\n  provide: HTTP_INTERCEPTORS,\n  useClass: AuthInterceptor,\n};\n\nconst errorsHandler = {\n  provide: ErrorHandler,\n  useClass: ErrorsHandler,\n};\n\nconst providers = [AccountService, authInterceptor, errorsHandler, ErrorsLogger];\n\n@NgModule({\n  providers,\n})\nexport class CoreModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomValidators.html":{"url":"classes/CustomValidators.html","title":"class - CustomValidators","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomValidators\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/custom-validators.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                matchPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            matchPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    matchPassword(form: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/custom-validators.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    form\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AbstractControl } from '@angular/forms';\n\nexport class CustomValidators {\n  public static matchPassword(form: AbstractControl): null {\n    const password = form.get('password').value;\n    const passwordRepeat = form.get('passwordRepeat').value;\n    if (password !== passwordRepeat) {\n      form.get('passwordRepeat').setErrors({ matchPassword: true });\n    } else {\n      return null;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ErrorWithContext.html":{"url":"interfaces/ErrorWithContext.html","title":"interface - ErrorWithContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ErrorWithContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/errors-logger.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        appId\n                                \n                                \n                                        status\n                                \n                                \n                                        url\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        appId\n                                    \n                                \n                                \n                                    \n                                        appId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         AccountDto\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AccountDto\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LocationStrategy, PathLocationStrategy } from '@angular/common';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { EMPTY, Observable } from 'rxjs';\n\nimport { catchError } from 'rxjs/operators';\nimport { AccountDto } from '~/core/interfaces/account.dto';\nimport { AccountService } from '~/core/services/account.service';\nimport { environment } from '~/env/environment';\n\nexport interface ErrorWithContext extends Error {\n  appId: string;\n  status: number | null;\n  url: string;\n  user: AccountDto;\n}\n\n@Injectable()\nexport class ErrorsLogger {\n  constructor(\n    private readonly accountService: AccountService,\n    private readonly http: HttpClient,\n    private readonly locationStrategy: LocationStrategy,\n  ) {}\n\n  logError(error: Error): Observable {\n    const errorWithContext = this.addContextInfo(error);\n    if (!environment.production) {\n      console.error({ error, errorWithContext });\n    }\n\n    return this.http.post(`${environment.apiUrl}exception`, errorWithContext).pipe(\n      catchError(err => {\n        console.error('Can not log error!', err);\n\n        return EMPTY;\n      }),\n    );\n  }\n\n  private addContextInfo(error: Error): ErrorWithContext {\n    const result: ErrorWithContext = error as ErrorWithContext;\n    const location = this.locationStrategy;\n\n    result.appId = environment.clientId;\n    result.message = error.message || error.toString();\n    result.url = location instanceof PathLocationStrategy ? location.path() : '';\n    result.user = this.accountService.authInfo && this.accountService.authInfo.user;\n    result.stack = error.stack;\n    result.status = (error as HttpErrorResponse).status || null;\n\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorsHandler.html":{"url":"injectables/ErrorsHandler.html","title":"injectable - ErrorsHandler","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ErrorsHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/errors-handler.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                            \n                                    Private\n                                handleHttpError\n                            \n                            \n                                    Private\n                                logError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/errors-handler.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \nhandleError(error: Error | HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/errors-handler.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                Error | HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            handleHttpError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleHttpError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/errors-handler.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            logError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    logError(error: Error)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/errors-handler.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpErrorResponse } from '@angular/common/http';\nimport { ErrorHandler, Injectable, Injector, NgZone } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { tap } from 'rxjs/operators';\n\nimport { environment } from '~/env/environment';\n\nimport { ErrorsLogger } from './errors-logger.service';\n\n@Injectable()\nexport class ErrorsHandler implements ErrorHandler {\n  // Because the ErrorsHandler is created before the providers,\n  // We’ll have to use the Injector to get them.\n  constructor(private readonly injector: Injector) {}\n\n  handleError(error: Error | HttpErrorResponse): void {\n    const zone = this.injector.get(NgZone);\n    zone.run(() => {\n      if (error instanceof HttpErrorResponse) {\n        this.handleHttpError(error);\n      } else {\n        this.logError(error);\n      }\n    });\n  }\n\n  private handleHttpError(error: HttpErrorResponse): void {\n    if (error.status === 401) {\n      localStorage.removeItem('auth');\n      const router = this.injector.get(Router);\n      const returnUrl = window.location.pathname + window.location.search;\n      router.navigateByUrl('/account/login', { queryParams: { returnUrl } });\n    } else if (error.status === 403 || error.status >= 500) {\n      this.logError(error);\n    }\n  }\n\n  private logError(error: Error): void {\n    const logger = this.injector.get(ErrorsLogger);\n    logger\n      .logError(error)\n      .pipe(\n        tap(_ => {\n          setTimeout(() => document.body.click(), 0);\n          if (environment.production) {\n            const router = this.injector.get(Router);\n            router.navigateByUrl('/error');\n          }\n        }),\n      )\n      .toPromise();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ErrorsLogger.html":{"url":"injectables/ErrorsLogger.html","title":"injectable - ErrorsLogger","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ErrorsLogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/errors-logger.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addContextInfo\n                            \n                            \n                                logError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accountService: AccountService, http: HttpClient, locationStrategy: LocationStrategy)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/errors-logger.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        locationStrategy\n                                                  \n                                                        \n                                                                        LocationStrategy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            addContextInfo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addContextInfo(error: Error)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/errors-logger.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorWithContext\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logError\n                        \n                        \n                    \n                \n            \n            \n                \nlogError(error: Error)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/errors-logger.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { LocationStrategy, PathLocationStrategy } from '@angular/common';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { EMPTY, Observable } from 'rxjs';\n\nimport { catchError } from 'rxjs/operators';\nimport { AccountDto } from '~/core/interfaces/account.dto';\nimport { AccountService } from '~/core/services/account.service';\nimport { environment } from '~/env/environment';\n\nexport interface ErrorWithContext extends Error {\n  appId: string;\n  status: number | null;\n  url: string;\n  user: AccountDto;\n}\n\n@Injectable()\nexport class ErrorsLogger {\n  constructor(\n    private readonly accountService: AccountService,\n    private readonly http: HttpClient,\n    private readonly locationStrategy: LocationStrategy,\n  ) {}\n\n  logError(error: Error): Observable {\n    const errorWithContext = this.addContextInfo(error);\n    if (!environment.production) {\n      console.error({ error, errorWithContext });\n    }\n\n    return this.http.post(`${environment.apiUrl}exception`, errorWithContext).pipe(\n      catchError(err => {\n        console.error('Can not log error!', err);\n\n        return EMPTY;\n      }),\n    );\n  }\n\n  private addContextInfo(error: Error): ErrorWithContext {\n    const result: ErrorWithContext = error as ErrorWithContext;\n    const location = this.locationStrategy;\n\n    result.appId = environment.clientId;\n    result.message = error.message || error.toString();\n    result.url = location instanceof PathLocationStrategy ? location.path() : '';\n    result.user = this.accountService.authInfo && this.accountService.authInfo.user;\n    result.stack = error.stack;\n    result.status = (error as HttpErrorResponse).status || null;\n\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FormControlError.html":{"url":"interfaces/FormControlError.html","title":"interface - FormControlError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FormControlError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/directives/mpgp-formcontrol-error/mpgp-formcontrol-error.directive.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        matchPassword\n                                \n                                \n                                            Optional\n                                        maxlength\n                                \n                                \n                                            Optional\n                                        minlength\n                                \n                                \n                                            Optional\n                                        pattern\n                                \n                                \n                                            Optional\n                                        required\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        matchPassword\n                                    \n                                \n                                \n                                    \n                                        matchPassword:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxlength\n                                    \n                                \n                                \n                                    \n                                        maxlength:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minlength\n                                    \n                                \n                                \n                                    \n                                        minlength:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pattern\n                                    \n                                \n                                \n                                    \n                                        pattern:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Directive, ElementRef, Input } from '@angular/core';\n\ninterface FormControlError {\n  matchPassword?: boolean;\n  minlength?: { requiredLength: number };\n  maxlength?: { requiredLength: number };\n  pattern?: { requiredPattern: string };\n  required?: {};\n}\n\n@Directive({\n  selector: '[MpgpFormControlError]',\n})\nexport class MpgpFormControlErrorDirective {\n  constructor(private readonly el: ElementRef) {}\n\n  @Input()\n  set MpgpFormControlError(errors: FormControlError) {\n    if (!errors) {\n      return;\n    }\n\n    this.el.nativeElement.textContent = this.getErrorMessage(errors);\n  }\n\n  private getErrorMessage(errors: FormControlError): string {\n    if (errors.required) {\n      return 'Is Required';\n    } else if (errors.minlength) {\n      return `Minimum Length is ${errors.minlength.requiredLength}`;\n    } else if (errors.maxlength) {\n      return `Maximum Length is ${errors.maxlength.requiredLength}`;\n    } else if (errors.pattern) {\n      return `Pattern must be ${errors.pattern.requiredPattern}`;\n    } else if (errors.matchPassword) {\n      return 'Password did not match';\n    } else if (errors.required) {\n      return 'Invalid value';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GeneralModule.html":{"url":"modules/GeneralModule.html","title":"module - GeneralModule","body":"\n                   \n\n\n\n\n    Modules\n    GeneralModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GeneralModule\n\n\n\ncluster_GeneralModule_declarations\n\n\n\ncluster_GeneralModule_imports\n\n\n\n\nMainErrorComponent\n\nMainErrorComponent\n\n\n\nGeneralModule\n\nGeneralModule\n\nGeneralModule -->\n\nMainErrorComponent->GeneralModule\n\n\n\n\n\nMainRootComponent\n\nMainRootComponent\n\nGeneralModule -->\n\nMainRootComponent->GeneralModule\n\n\n\n\n\nMainScrollToTopComponent\n\nMainScrollToTopComponent\n\nGeneralModule -->\n\nMainScrollToTopComponent->GeneralModule\n\n\n\n\n\nMainToolbarAvatarComponent\n\nMainToolbarAvatarComponent\n\nGeneralModule -->\n\nMainToolbarAvatarComponent->GeneralModule\n\n\n\n\n\nMainToolbarMailComponent\n\nMainToolbarMailComponent\n\nGeneralModule -->\n\nMainToolbarMailComponent->GeneralModule\n\n\n\n\n\nMainToolbarNotificationsComponent\n\nMainToolbarNotificationsComponent\n\nGeneralModule -->\n\nMainToolbarNotificationsComponent->GeneralModule\n\n\n\n\n\nGeneralRoutingModule\n\nGeneralRoutingModule\n\nGeneralModule -->\n\nGeneralRoutingModule->GeneralModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/general/general.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MainErrorComponent\n                        \n                        \n                            MainRootComponent\n                        \n                        \n                            MainScrollToTopComponent\n                        \n                        \n                            MainToolbarAvatarComponent\n                        \n                        \n                            MainToolbarMailComponent\n                        \n                        \n                            MainToolbarNotificationsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GeneralRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MatCardModule } from '@angular/material';\n\nimport { components } from './components';\nimport { containers } from './containers';\nimport { GeneralRoutingModule } from './general-routing.module';\nimport { pages } from './pages';\n\nconst declarations = [...components, ...containers, ...pages];\n\nexport const vendorImports = [MatCardModule];\n\nconst imports = [GeneralRoutingModule, ...vendorImports];\n\n@NgModule({\n  declarations,\n  imports,\n})\nexport class GeneralModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GeneralRootComponent.html":{"url":"components/GeneralRootComponent.html","title":"component - GeneralRootComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GeneralRootComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/general/pages/general-root/general-root.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                general-root\n            \n\n\n\n\n            \n                templateUrl\n                ./general-root.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'general-root',\n  templateUrl: './general-root.component.html',\n})\nexport class GeneralRootComponent {}\n\n    \n\n    \n        \n  \n    Multiplayer Game Platform\n    Welcome\n  \n  \n    Welcome to MPGP BrowserClient!\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Multiplayer Game Platform    Welcome        Welcome to MPGP BrowserClient!  '\n    var COMPONENTS = [{'name': 'AccountLoginFormComponent', 'selector': 'account-login-form'},{'name': 'AccountLoginRootComponent', 'selector': 'account-login-root'},{'name': 'AccountRegisterFormComponent', 'selector': 'account-register-form'},{'name': 'AccountRegisterRootComponent', 'selector': 'account-register-root'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'GeneralRootComponent', 'selector': 'general-root'},{'name': 'MainErrorComponent', 'selector': 'main-error'},{'name': 'MainRootComponent', 'selector': 'main-root'},{'name': 'MainScrollToTopComponent', 'selector': 'main-scroll-to-top'},{'name': 'MainToolbarAvatarComponent', 'selector': 'main-toolbar-avatar'},{'name': 'MainToolbarMailComponent', 'selector': 'main-toolbar-mail'},{'name': 'MainToolbarNotificationsComponent', 'selector': 'main-toolbar-notifications'},{'name': 'ProfileCardComponent', 'selector': 'profile-card'},{'name': 'ProfileCardContainerComponent', 'selector': 'profile-card-container'},{'name': 'ProfileRootComponent', 'selector': 'profile-root'},{'name': 'ProfileWallContainerComponent', 'selector': 'profile-wall-container'},{'name': 'SettingsAccountContainerComponent', 'selector': 'settings-account-container'},{'name': 'SettingsAccountDataFormComponent', 'selector': 'settings-account-data-form'},{'name': 'SettingsAccountPasswordFormComponent', 'selector': 'settings-account-password-form'},{'name': 'SettingsRootComponent', 'selector': 'settings-root'}];\n    var DIRECTIVES = [{'name': 'MpgpFormControlErrorDirective', 'selector': '[MpgpFormControlError]'}];\n    var ACTUAL_COMPONENT = {'name': 'GeneralRootComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GeneralRoutingModule.html":{"url":"modules/GeneralRoutingModule.html","title":"module - GeneralRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    GeneralRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/general/general-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { GeneralRootComponent } from './pages';\n\nconst routes: Routes = [{ path: '', component: GeneralRootComponent }];\n\n@NgModule({\n  exports: [RouterModule],\n  imports: [RouterModule.forChild(routes)],\n})\nexport class GeneralRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HttpError.html":{"url":"interfaces/HttpError.html","title":"interface - HttpError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HttpError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/http-error.dto.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        errorCode\n                                \n                                \n                                        message\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorCode\n                                    \n                                \n                                \n                                    \n                                        errorCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface HttpError {\n  errorCode: number;\n  message: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/LogoutGuard.html":{"url":"guards/LogoutGuard.html","title":"guard - LogoutGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    LogoutGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/features/account/guards/logout.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(accountService: AccountService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/account/guards/logout.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(_route: ActivatedRouteSnapshot, _state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/account/guards/logout.guard.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\n\nimport { AccountService } from '~/core/services/account.service';\n\n@Injectable()\nexport class LogoutGuard implements CanActivate {\n  constructor(private readonly accountService: AccountService, private readonly router: Router) {}\n\n  canActivate(_route: ActivatedRouteSnapshot, _state: RouterStateSnapshot): boolean {\n    if (this.accountService.isLoggedIn) {\n      this.accountService.logout().toPromise();\n    }\n\n    this.router.navigateByUrl('/').then(_ => location.reload());\n\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainErrorComponent.html":{"url":"components/MainErrorComponent.html","title":"component - MainErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MainErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/pages/main-error/main-error.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                main-error\n            \n\n            \n                styleUrls\n                ./main-error.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./main-error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'main-error',\n  styleUrls: ['./main-error.component.scss'],\n  templateUrl: './main-error.component.html',\n})\nexport class MainErrorComponent {}\n\n    \n\n    \n        \n  Oops!\n  Sorry Something Went Wrong!\n  \n    home Go To Home\n  \n  \n    mail Contact Support\n  \n\n    \n\n    \n                \n                    ./main-error.component.scss\n                \n                .main-error {\n  text-align: center;\n\n  .mat-raised-button {\n    margin: 0 4px 0 8px;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Oops!  Sorry Something Went Wrong!      home Go To Home        mail Contact Support  '\n    var COMPONENTS = [{'name': 'AccountLoginFormComponent', 'selector': 'account-login-form'},{'name': 'AccountLoginRootComponent', 'selector': 'account-login-root'},{'name': 'AccountRegisterFormComponent', 'selector': 'account-register-form'},{'name': 'AccountRegisterRootComponent', 'selector': 'account-register-root'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'GeneralRootComponent', 'selector': 'general-root'},{'name': 'MainErrorComponent', 'selector': 'main-error'},{'name': 'MainRootComponent', 'selector': 'main-root'},{'name': 'MainScrollToTopComponent', 'selector': 'main-scroll-to-top'},{'name': 'MainToolbarAvatarComponent', 'selector': 'main-toolbar-avatar'},{'name': 'MainToolbarMailComponent', 'selector': 'main-toolbar-mail'},{'name': 'MainToolbarNotificationsComponent', 'selector': 'main-toolbar-notifications'},{'name': 'ProfileCardComponent', 'selector': 'profile-card'},{'name': 'ProfileCardContainerComponent', 'selector': 'profile-card-container'},{'name': 'ProfileRootComponent', 'selector': 'profile-root'},{'name': 'ProfileWallContainerComponent', 'selector': 'profile-wall-container'},{'name': 'SettingsAccountContainerComponent', 'selector': 'settings-account-container'},{'name': 'SettingsAccountDataFormComponent', 'selector': 'settings-account-data-form'},{'name': 'SettingsAccountPasswordFormComponent', 'selector': 'settings-account-password-form'},{'name': 'SettingsRootComponent', 'selector': 'settings-root'}];\n    var DIRECTIVES = [{'name': 'MpgpFormControlErrorDirective', 'selector': '[MpgpFormControlError]'}];\n    var ACTUAL_COMPONENT = {'name': 'MainErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MainModule.html":{"url":"modules/MainModule.html","title":"module - MainModule","body":"\n                   \n\n\n\n\n    Modules\n    MainModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MainModule\n\n\n\ncluster_MainModule_declarations\n\n\n\ncluster_MainModule_imports\n\n\n\ncluster_MainModule_exports\n\n\n\n\nMainErrorComponent\n\nMainErrorComponent\n\n\n\nMainModule\n\nMainModule\n\nMainModule -->\n\nMainErrorComponent->MainModule\n\n\n\n\n\nMainRootComponent\n\nMainRootComponent\n\nMainModule -->\n\nMainRootComponent->MainModule\n\n\n\n\n\nMainScrollToTopComponent\n\nMainScrollToTopComponent\n\nMainModule -->\n\nMainScrollToTopComponent->MainModule\n\n\n\n\n\nMainToolbarAvatarComponent\n\nMainToolbarAvatarComponent\n\nMainModule -->\n\nMainToolbarAvatarComponent->MainModule\n\n\n\n\n\nMainToolbarMailComponent\n\nMainToolbarMailComponent\n\nMainModule -->\n\nMainToolbarMailComponent->MainModule\n\n\n\n\n\nMainToolbarNotificationsComponent\n\nMainToolbarNotificationsComponent\n\nMainModule -->\n\nMainToolbarNotificationsComponent->MainModule\n\n\n\n\n\nMainRootComponent \n\nMainRootComponent \n\nMainRootComponent  -->\n\nMainModule->MainRootComponent \n\n\n\n\n\nMainRoutingModule\n\nMainRoutingModule\n\nMainModule -->\n\nMainRoutingModule->MainModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/main/main.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MainErrorComponent\n                        \n                        \n                            MainRootComponent\n                        \n                        \n                            MainScrollToTopComponent\n                        \n                        \n                            MainToolbarAvatarComponent\n                        \n                        \n                            MainToolbarMailComponent\n                        \n                        \n                            MainToolbarNotificationsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MainRoutingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MainRootComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatBadgeModule, MatButtonModule, MatIconModule, MatListModule, MatMenuModule, MatToolbarModule } from '@angular/material';\n\nimport { components } from './components';\nimport { containers } from './containers';\nimport { AuthGuard } from './guards/auth.guard';\nimport { MainRoutingModule } from './main-routing.module';\nimport { MainRootComponent, pages } from './pages';\n\nconst declarations = [...components, ...containers, ...pages];\n\nexport const vendorImports = [MatBadgeModule, MatButtonModule, MatIconModule, MatListModule, MatMenuModule, MatToolbarModule];\n\nconst imports = [CommonModule, MainRoutingModule, ...vendorImports];\n\nconst _exports = [MainRootComponent];\n\nconst providers = [AuthGuard];\n\n@NgModule({\n  declarations,\n  imports,\n  providers,\n  exports: _exports,\n})\nexport class MainModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainRootComponent.html":{"url":"components/MainRootComponent.html","title":"component - MainRootComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MainRootComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/pages/main-root/main-root.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                main-root\n            \n\n            \n                styleUrls\n                ./main-root.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./main-root.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                accountService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(accountService: AccountService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main/pages/main-root/main-root.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            accountService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AccountService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/main/pages/main-root/main-root.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nimport { AccountService } from '~/core/services/account.service';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'main-root',\n  styleUrls: ['./main-root.component.scss'],\n  templateUrl: './main-root.component.html',\n})\nexport class MainRootComponent {\n  constructor(public accountService: AccountService) {}\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    MPGP\n    \n    \n      \n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./main-root.component.scss\n                \n                .toolbar {\n  &-button {\n    color: #fff;\n    display: inline-block;\n    margin: 5px 0 0;\n    padding: 0 14px;\n\n    &:focus {\n      outline: none;\n    }\n  }\n\n  &-spacer {\n    flex: 1 1 auto;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    MPGP                                '\n    var COMPONENTS = [{'name': 'AccountLoginFormComponent', 'selector': 'account-login-form'},{'name': 'AccountLoginRootComponent', 'selector': 'account-login-root'},{'name': 'AccountRegisterFormComponent', 'selector': 'account-register-form'},{'name': 'AccountRegisterRootComponent', 'selector': 'account-register-root'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'GeneralRootComponent', 'selector': 'general-root'},{'name': 'MainErrorComponent', 'selector': 'main-error'},{'name': 'MainRootComponent', 'selector': 'main-root'},{'name': 'MainScrollToTopComponent', 'selector': 'main-scroll-to-top'},{'name': 'MainToolbarAvatarComponent', 'selector': 'main-toolbar-avatar'},{'name': 'MainToolbarMailComponent', 'selector': 'main-toolbar-mail'},{'name': 'MainToolbarNotificationsComponent', 'selector': 'main-toolbar-notifications'},{'name': 'ProfileCardComponent', 'selector': 'profile-card'},{'name': 'ProfileCardContainerComponent', 'selector': 'profile-card-container'},{'name': 'ProfileRootComponent', 'selector': 'profile-root'},{'name': 'ProfileWallContainerComponent', 'selector': 'profile-wall-container'},{'name': 'SettingsAccountContainerComponent', 'selector': 'settings-account-container'},{'name': 'SettingsAccountDataFormComponent', 'selector': 'settings-account-data-form'},{'name': 'SettingsAccountPasswordFormComponent', 'selector': 'settings-account-password-form'},{'name': 'SettingsRootComponent', 'selector': 'settings-root'}];\n    var DIRECTIVES = [{'name': 'MpgpFormControlErrorDirective', 'selector': '[MpgpFormControlError]'}];\n    var ACTUAL_COMPONENT = {'name': 'MainRootComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MainRoutingModule.html":{"url":"modules/MainRoutingModule.html","title":"module - MainRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    MainRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/main/main-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AuthGuard } from './guards/auth.guard';\nimport { MainErrorComponent } from './pages';\n\nconst routes: Routes = [\n  {\n    path: '',\n    canActivate: [AuthGuard],\n    children: [\n      { path: '', pathMatch: 'full', redirectTo: 'general' },\n      { path: 'general', loadChildren: '../features/general/general.module#GeneralModule' },\n      { path: 'profile/:id', loadChildren: '../features/profile/profile.module#ProfileModule' },\n      { path: 'settings', loadChildren: '../features/settings/settings.module#SettingsModule' },\n    ],\n  },\n  { path: 'error', component: MainErrorComponent },\n  { path: 'account', loadChildren: '../features/account/account.module#AccountModule' },\n  { path: '**', redirectTo: 'error' },\n];\n\n@NgModule({\n  exports: [RouterModule],\n  imports: [RouterModule.forRoot(routes, { useHash: false })],\n})\nexport class MainRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainScrollToTopComponent.html":{"url":"components/MainScrollToTopComponent.html","title":"component - MainScrollToTopComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MainScrollToTopComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/containers/main-scroll-to-top/main-scroll-to-top.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                main-scroll-to-top\n            \n\n            \n                styleUrls\n                ./main-scroll-to-top.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./main-scroll-to-top.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                showScroll\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                scrollToTop\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:scroll\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            window:scroll\n                        \n                        \n                    \n                \n            \n            \n                \nwindow:scroll()\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/containers/main-scroll-to-top/main-scroll-to-top.component.ts:14\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scrollToTop\n                        \n                        \n                    \n                \n            \n            \n                \nscrollToTop()\n                \n            \n\n\n            \n                \n                    Defined in src/app/main/containers/main-scroll-to-top/main-scroll-to-top.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showScroll\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/main/containers/main-scroll-to-top/main-scroll-to-top.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostListener, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'main-scroll-to-top',\n  styleUrls: ['./main-scroll-to-top.component.scss'],\n  templateUrl: './main-scroll-to-top.component.html',\n})\nexport class MainScrollToTopComponent {\n  showScroll = false;\n\n  @HostListener('window:scroll', [])\n  onWindowScroll(): void {\n    if (window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop > 100) {\n      this.showScroll = true;\n    } else if (window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop  0) {\n        window.requestAnimationFrame(smoothscroll);\n        window.scrollTo(0, currentScroll - currentScroll / 5);\n      }\n    })();\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n  \n\n    \n\n    \n                \n                    ./main-scroll-to-top.component.scss\n                \n                .scroll-to-top {\n  background-color: #ccc;\n  border-radius: 10px;\n  bottom: 0;\n  cursor: pointer;\n  height: 45px;\n  opacity: 0;\n  position: fixed;\n  right: 0;\n  transition: opacity 0.5s ease-in-out, opacity 0.2s ease-in-out, bottom 0.2s ease-in-out;\n  width: 45px;\n  z-index: 300;\n\n  &:hover {\n    background-color: #999;\n  }\n\n  &.show-scroll {\n    bottom: 15px;\n    opacity: 1;\n    right: 15px;\n  }\n\n  &__icon {\n    fill: #fff;\n    height: 16px;\n    left: 15px;\n    position: absolute;\n    top: 15px;\n    width: 16px;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AccountLoginFormComponent', 'selector': 'account-login-form'},{'name': 'AccountLoginRootComponent', 'selector': 'account-login-root'},{'name': 'AccountRegisterFormComponent', 'selector': 'account-register-form'},{'name': 'AccountRegisterRootComponent', 'selector': 'account-register-root'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'GeneralRootComponent', 'selector': 'general-root'},{'name': 'MainErrorComponent', 'selector': 'main-error'},{'name': 'MainRootComponent', 'selector': 'main-root'},{'name': 'MainScrollToTopComponent', 'selector': 'main-scroll-to-top'},{'name': 'MainToolbarAvatarComponent', 'selector': 'main-toolbar-avatar'},{'name': 'MainToolbarMailComponent', 'selector': 'main-toolbar-mail'},{'name': 'MainToolbarNotificationsComponent', 'selector': 'main-toolbar-notifications'},{'name': 'ProfileCardComponent', 'selector': 'profile-card'},{'name': 'ProfileCardContainerComponent', 'selector': 'profile-card-container'},{'name': 'ProfileRootComponent', 'selector': 'profile-root'},{'name': 'ProfileWallContainerComponent', 'selector': 'profile-wall-container'},{'name': 'SettingsAccountContainerComponent', 'selector': 'settings-account-container'},{'name': 'SettingsAccountDataFormComponent', 'selector': 'settings-account-data-form'},{'name': 'SettingsAccountPasswordFormComponent', 'selector': 'settings-account-password-form'},{'name': 'SettingsRootComponent', 'selector': 'settings-root'}];\n    var DIRECTIVES = [{'name': 'MpgpFormControlErrorDirective', 'selector': '[MpgpFormControlError]'}];\n    var ACTUAL_COMPONENT = {'name': 'MainScrollToTopComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainToolbarAvatarComponent.html":{"url":"components/MainToolbarAvatarComponent.html","title":"component - MainToolbarAvatarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MainToolbarAvatarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/containers/main-toolbar-avatar/main-toolbar-avatar.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                main-toolbar-avatar\n            \n\n            \n                styleUrls\n                ./main-toolbar-avatar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./main-toolbar-avatar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    userAvatar$\n                                \n                                \n                                    userId\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(accountService: AccountService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main/containers/main-toolbar-avatar/main-toolbar-avatar.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        userAvatar$\n                    \n                \n\n                \n                    \n                        getuserAvatar$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/main/containers/main-toolbar-avatar/main-toolbar-avatar.component.ts:18\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        userId\n                    \n                \n\n                \n                    \n                        getuserId()\n                    \n                \n                            \n                                \n                                    Defined in src/app/main/containers/main-toolbar-avatar/main-toolbar-avatar.component.ts:25\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\nimport { AccountService } from '~/core/services/account.service';\nimport { environment } from '~/env/environment';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'main-toolbar-avatar',\n  styleUrls: ['./main-toolbar-avatar.component.scss'],\n  templateUrl: './main-toolbar-avatar.component.html',\n})\nexport class MainToolbarAvatarComponent {\n  constructor(private readonly accountService: AccountService) { }\n\n  get userAvatar$(): Observable {\n    return this.accountService.authInfo$.pipe(\n      filter(x => !!x),\n      map(x => environment.imageUrl + x.user.avatar),\n    );\n  }\n\n  get userId(): number {\n    return this.accountService.authInfo.user.id;\n  }\n}\n\n    \n\n    \n        \n  \n  arrow_drop_down\n\n\n  My Profile\n  Settings\n  Logout\n\n    \n\n    \n                \n                    ./main-toolbar-avatar.component.scss\n                \n                .toolbar-avatar {\n  border-radius: 25px;\n  height: 25px;\n  width: 25px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    arrow_drop_down  My Profile  Settings  Logout'\n    var COMPONENTS = [{'name': 'AccountLoginFormComponent', 'selector': 'account-login-form'},{'name': 'AccountLoginRootComponent', 'selector': 'account-login-root'},{'name': 'AccountRegisterFormComponent', 'selector': 'account-register-form'},{'name': 'AccountRegisterRootComponent', 'selector': 'account-register-root'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'GeneralRootComponent', 'selector': 'general-root'},{'name': 'MainErrorComponent', 'selector': 'main-error'},{'name': 'MainRootComponent', 'selector': 'main-root'},{'name': 'MainScrollToTopComponent', 'selector': 'main-scroll-to-top'},{'name': 'MainToolbarAvatarComponent', 'selector': 'main-toolbar-avatar'},{'name': 'MainToolbarMailComponent', 'selector': 'main-toolbar-mail'},{'name': 'MainToolbarNotificationsComponent', 'selector': 'main-toolbar-notifications'},{'name': 'ProfileCardComponent', 'selector': 'profile-card'},{'name': 'ProfileCardContainerComponent', 'selector': 'profile-card-container'},{'name': 'ProfileRootComponent', 'selector': 'profile-root'},{'name': 'ProfileWallContainerComponent', 'selector': 'profile-wall-container'},{'name': 'SettingsAccountContainerComponent', 'selector': 'settings-account-container'},{'name': 'SettingsAccountDataFormComponent', 'selector': 'settings-account-data-form'},{'name': 'SettingsAccountPasswordFormComponent', 'selector': 'settings-account-password-form'},{'name': 'SettingsRootComponent', 'selector': 'settings-root'}];\n    var DIRECTIVES = [{'name': 'MpgpFormControlErrorDirective', 'selector': '[MpgpFormControlError]'}];\n    var ACTUAL_COMPONENT = {'name': 'MainToolbarAvatarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainToolbarMailComponent.html":{"url":"components/MainToolbarMailComponent.html","title":"component - MainToolbarMailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MainToolbarMailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/containers/main-toolbar-mail/main-toolbar-mail.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                main-toolbar-mail\n            \n\n\n\n\n            \n                templateUrl\n                ./main-toolbar-mail.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'main-toolbar-mail',\n  templateUrl: './main-toolbar-mail.component.html',\n})\nexport class MainToolbarMailComponent {}\n\n    \n\n    \n        \n  mail\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  mail'\n    var COMPONENTS = [{'name': 'AccountLoginFormComponent', 'selector': 'account-login-form'},{'name': 'AccountLoginRootComponent', 'selector': 'account-login-root'},{'name': 'AccountRegisterFormComponent', 'selector': 'account-register-form'},{'name': 'AccountRegisterRootComponent', 'selector': 'account-register-root'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'GeneralRootComponent', 'selector': 'general-root'},{'name': 'MainErrorComponent', 'selector': 'main-error'},{'name': 'MainRootComponent', 'selector': 'main-root'},{'name': 'MainScrollToTopComponent', 'selector': 'main-scroll-to-top'},{'name': 'MainToolbarAvatarComponent', 'selector': 'main-toolbar-avatar'},{'name': 'MainToolbarMailComponent', 'selector': 'main-toolbar-mail'},{'name': 'MainToolbarNotificationsComponent', 'selector': 'main-toolbar-notifications'},{'name': 'ProfileCardComponent', 'selector': 'profile-card'},{'name': 'ProfileCardContainerComponent', 'selector': 'profile-card-container'},{'name': 'ProfileRootComponent', 'selector': 'profile-root'},{'name': 'ProfileWallContainerComponent', 'selector': 'profile-wall-container'},{'name': 'SettingsAccountContainerComponent', 'selector': 'settings-account-container'},{'name': 'SettingsAccountDataFormComponent', 'selector': 'settings-account-data-form'},{'name': 'SettingsAccountPasswordFormComponent', 'selector': 'settings-account-password-form'},{'name': 'SettingsRootComponent', 'selector': 'settings-root'}];\n    var DIRECTIVES = [{'name': 'MpgpFormControlErrorDirective', 'selector': '[MpgpFormControlError]'}];\n    var ACTUAL_COMPONENT = {'name': 'MainToolbarMailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainToolbarNotificationsComponent.html":{"url":"components/MainToolbarNotificationsComponent.html","title":"component - MainToolbarNotificationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MainToolbarNotificationsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main/containers/main-toolbar-notifications/main-toolbar-notifications.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                main-toolbar-notifications\n            \n\n\n\n\n            \n                templateUrl\n                ./main-toolbar-notifications.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'main-toolbar-notifications',\n  templateUrl: './main-toolbar-notifications.component.html',\n})\nexport class MainToolbarNotificationsComponent {}\n\n    \n\n    \n        \n  notifications\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  notifications'\n    var COMPONENTS = [{'name': 'AccountLoginFormComponent', 'selector': 'account-login-form'},{'name': 'AccountLoginRootComponent', 'selector': 'account-login-root'},{'name': 'AccountRegisterFormComponent', 'selector': 'account-register-form'},{'name': 'AccountRegisterRootComponent', 'selector': 'account-register-root'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'GeneralRootComponent', 'selector': 'general-root'},{'name': 'MainErrorComponent', 'selector': 'main-error'},{'name': 'MainRootComponent', 'selector': 'main-root'},{'name': 'MainScrollToTopComponent', 'selector': 'main-scroll-to-top'},{'name': 'MainToolbarAvatarComponent', 'selector': 'main-toolbar-avatar'},{'name': 'MainToolbarMailComponent', 'selector': 'main-toolbar-mail'},{'name': 'MainToolbarNotificationsComponent', 'selector': 'main-toolbar-notifications'},{'name': 'ProfileCardComponent', 'selector': 'profile-card'},{'name': 'ProfileCardContainerComponent', 'selector': 'profile-card-container'},{'name': 'ProfileRootComponent', 'selector': 'profile-root'},{'name': 'ProfileWallContainerComponent', 'selector': 'profile-wall-container'},{'name': 'SettingsAccountContainerComponent', 'selector': 'settings-account-container'},{'name': 'SettingsAccountDataFormComponent', 'selector': 'settings-account-data-form'},{'name': 'SettingsAccountPasswordFormComponent', 'selector': 'settings-account-password-form'},{'name': 'SettingsRootComponent', 'selector': 'settings-root'}];\n    var DIRECTIVES = [{'name': 'MpgpFormControlErrorDirective', 'selector': '[MpgpFormControlError]'}];\n    var ACTUAL_COMPONENT = {'name': 'MainToolbarNotificationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ManageService.html":{"url":"injectables/ManageService.html","title":"injectable - ManageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ManageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/features/settings/services/manage.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                path\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateAccount\n                            \n                            \n                                updatePassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/settings/services/manage.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateAccount\n                        \n                        \n                    \n                \n            \n            \n                \nupdateAccount(command: UpdateAccountCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/settings/services/manage.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                UpdateAccountCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updatePassword\n                        \n                        \n                    \n                \n            \n            \n                \nupdatePassword(command: UpdatePasswordCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/settings/services/manage.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                UpdatePasswordCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${environment.apiUrl}manage`\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/settings/services/manage.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { UpdateAccountCommand } from '~/core/interfaces/update-account-command';\nimport { UpdatePasswordCommand } from '~/core/interfaces/update-password-command';\nimport { environment } from '~/env/environment';\n\n@Injectable()\nexport class ManageService {\n  private readonly path = `${environment.apiUrl}manage`;\n\n  constructor(private readonly http: HttpClient) {}\n\n  updateAccount(command: UpdateAccountCommand): Observable {\n    return this.http.patch(this.path, command).pipe(\n      catchError(_ => {\n        throw new Error('Invalid data');\n      }),\n    );\n  }\n\n  updatePassword(command: UpdatePasswordCommand): Observable {\n    return this.http.patch(`${this.path}/password`, command).pipe(\n      catchError(_ => {\n        console.error(_);\n        throw new Error('Invalid data');\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/MpgpFormControlErrorDirective.html":{"url":"directives/MpgpFormControlErrorDirective.html","title":"directive - MpgpFormControlErrorDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  MpgpFormControlErrorDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/directives/mpgp-formcontrol-error/mpgp-formcontrol-error.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [MpgpFormControlError]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getErrorMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                MpgpFormControlError\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    MpgpFormControlError\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/directives/mpgp-formcontrol-error/mpgp-formcontrol-error.directive.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        MpgpFormControlError\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/directives/mpgp-formcontrol-error/mpgp-formcontrol-error.directive.ts:18\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getErrorMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getErrorMessage(errors: FormControlError)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/directives/mpgp-formcontrol-error/mpgp-formcontrol-error.directive.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errors\n                                    \n                                                FormControlError\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        MpgpFormControlError\n                    \n                \n\n\n                \n                    \n                        setMpgpFormControlError(errors)\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/directives/mpgp-formcontrol-error/mpgp-formcontrol-error.directive.ts:18\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            errors\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import { Directive, ElementRef, Input } from '@angular/core';\n\ninterface FormControlError {\n  matchPassword?: boolean;\n  minlength?: { requiredLength: number };\n  maxlength?: { requiredLength: number };\n  pattern?: { requiredPattern: string };\n  required?: {};\n}\n\n@Directive({\n  selector: '[MpgpFormControlError]',\n})\nexport class MpgpFormControlErrorDirective {\n  constructor(private readonly el: ElementRef) {}\n\n  @Input()\n  set MpgpFormControlError(errors: FormControlError) {\n    if (!errors) {\n      return;\n    }\n\n    this.el.nativeElement.textContent = this.getErrorMessage(errors);\n  }\n\n  private getErrorMessage(errors: FormControlError): string {\n    if (errors.required) {\n      return 'Is Required';\n    } else if (errors.minlength) {\n      return `Minimum Length is ${errors.minlength.requiredLength}`;\n    } else if (errors.maxlength) {\n      return `Maximum Length is ${errors.maxlength.requiredLength}`;\n    } else if (errors.pattern) {\n      return `Pattern must be ${errors.pattern.requiredPattern}`;\n    } else if (errors.matchPassword) {\n      return 'Password did not match';\n    } else if (errors.required) {\n      return 'Invalid value';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MpgpFormControlErrorModule.html":{"url":"modules/MpgpFormControlErrorModule.html","title":"module - MpgpFormControlErrorModule","body":"\n                   \n\n\n\n\n    Modules\n    MpgpFormControlErrorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MpgpFormControlErrorModule\n\n\n\ncluster_MpgpFormControlErrorModule_declarations\n\n\n\ncluster_MpgpFormControlErrorModule_exports\n\n\n\n\nMpgpFormControlErrorDirective\n\nMpgpFormControlErrorDirective\n\n\n\nMpgpFormControlErrorModule\n\nMpgpFormControlErrorModule\n\nMpgpFormControlErrorModule -->\n\nMpgpFormControlErrorDirective->MpgpFormControlErrorModule\n\n\n\n\n\nMpgpFormControlErrorDirective \n\nMpgpFormControlErrorDirective \n\nMpgpFormControlErrorDirective  -->\n\nMpgpFormControlErrorModule->MpgpFormControlErrorDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/directives/mpgp-formcontrol-error/index.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MpgpFormControlErrorDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MpgpFormControlErrorDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { MpgpFormControlErrorDirective } from './mpgp-formcontrol-error.directive';\n\n@NgModule({\n  declarations: [MpgpFormControlErrorDirective],\n  exports: [MpgpFormControlErrorDirective],\n  imports: [CommonModule],\n})\nexport class MpgpFormControlErrorModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileCardComponent.html":{"url":"components/ProfileCardComponent.html","title":"component - ProfileCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProfileCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/profile/components/profile-card/profile-card.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                profile-card\n            \n\n            \n                styleUrls\n                ./profile-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./profile-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addFriend\n                            \n                            \n                                openDialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                account\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                addedFriend\n                            \n                            \n                                openedDialog\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    userAvatar\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        account\n                    \n                \n                \n                    \n                        Type :         AccountDto\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/profile/components/profile-card/profile-card.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        addedFriend\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/profile/components/profile-card/profile-card.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        openedDialog\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/profile/components/profile-card/profile-card.component.ts:16\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addFriend\n                        \n                        \n                    \n                \n            \n            \n                \naddFriend()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/profile/components/profile-card/profile-card.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/profile/components/profile-card/profile-card.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        userAvatar\n                    \n                \n\n                \n                    \n                        getuserAvatar()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/profile/components/profile-card/profile-card.component.ts:18\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\n\nimport { AccountDto } from '~/core/interfaces/account.dto';\nimport { environment } from '~/env/environment';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'profile-card',\n  styleUrls: ['./profile-card.component.scss'],\n  templateUrl: './profile-card.component.html',\n})\nexport class ProfileCardComponent {\n  @Input() account: AccountDto;\n  @Output() addedFriend: EventEmitter = new EventEmitter();\n  @Output() openedDialog: EventEmitter = new EventEmitter();\n\n  get userAvatar(): string {\n    return environment.imageUrl + this.account.avatar;\n  }\n\n  addFriend(): void {\n    this.addedFriend.emit(this.account.id);\n  }\n\n  openDialog(): void {\n    this.openedDialog.emit(this.account.id);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    {{account.nickname}}\n    {{account.languages}}\n  \n  \n  \n    {{account.statusInfo}}\n  \n  \n    Add to friends\n    Write message\n  \n\n    \n\n    \n                \n                    ./profile-card.component.scss\n                \n                .profile {\n  &-avatar {\n    border-radius: 50%;\n    height: 100%;\n    width: 100%;\n  }\n\n  &-card {\n    max-width: 400px;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{account.nickname}}    {{account.languages}}          {{account.statusInfo}}        Add to friends    Write message  '\n    var COMPONENTS = [{'name': 'AccountLoginFormComponent', 'selector': 'account-login-form'},{'name': 'AccountLoginRootComponent', 'selector': 'account-login-root'},{'name': 'AccountRegisterFormComponent', 'selector': 'account-register-form'},{'name': 'AccountRegisterRootComponent', 'selector': 'account-register-root'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'GeneralRootComponent', 'selector': 'general-root'},{'name': 'MainErrorComponent', 'selector': 'main-error'},{'name': 'MainRootComponent', 'selector': 'main-root'},{'name': 'MainScrollToTopComponent', 'selector': 'main-scroll-to-top'},{'name': 'MainToolbarAvatarComponent', 'selector': 'main-toolbar-avatar'},{'name': 'MainToolbarMailComponent', 'selector': 'main-toolbar-mail'},{'name': 'MainToolbarNotificationsComponent', 'selector': 'main-toolbar-notifications'},{'name': 'ProfileCardComponent', 'selector': 'profile-card'},{'name': 'ProfileCardContainerComponent', 'selector': 'profile-card-container'},{'name': 'ProfileRootComponent', 'selector': 'profile-root'},{'name': 'ProfileWallContainerComponent', 'selector': 'profile-wall-container'},{'name': 'SettingsAccountContainerComponent', 'selector': 'settings-account-container'},{'name': 'SettingsAccountDataFormComponent', 'selector': 'settings-account-data-form'},{'name': 'SettingsAccountPasswordFormComponent', 'selector': 'settings-account-password-form'},{'name': 'SettingsRootComponent', 'selector': 'settings-root'}];\n    var DIRECTIVES = [{'name': 'MpgpFormControlErrorDirective', 'selector': '[MpgpFormControlError]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProfileCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileCardContainerComponent.html":{"url":"components/ProfileCardContainerComponent.html","title":"component - ProfileCardContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProfileCardContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/profile/containers/profile-card-container/profile-card-container.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                profile-card-container\n            \n\n\n\n\n            \n                templateUrl\n                ./profile-card-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addFriend\n                            \n                            \n                                openDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    account\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(accountService: AccountService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/profile/containers/profile-card-container/profile-card-container.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addFriend\n                        \n                        \n                    \n                \n            \n            \n                \naddFriend(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/profile/containers/profile-card-container/profile-card-container.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/profile/containers/profile-card-container/profile-card-container.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        account\n                    \n                \n\n                \n                    \n                        getaccount()\n                    \n                \n                            \n                                \n                                    Defined in src/app/features/profile/containers/profile-card-container/profile-card-container.component.ts:15\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\nimport { AccountDto } from '~/core/interfaces/account.dto';\nimport { AccountService } from '~/core/services/account.service';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'profile-card-container',\n  templateUrl: './profile-card-container.component.html',\n})\nexport class ProfileCardContainerComponent {\n  constructor(private readonly accountService: AccountService) { }\n\n  get account(): AccountDto {\n    return this.accountService.authInfo.user;\n  }\n\n  addFriend(id: number): void {\n    console.error('TODO: ', id);\n  }\n\n  openDialog(id: number): void {\n    console.error('TODO: ', id);\n  }\n}\n\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccountLoginFormComponent', 'selector': 'account-login-form'},{'name': 'AccountLoginRootComponent', 'selector': 'account-login-root'},{'name': 'AccountRegisterFormComponent', 'selector': 'account-register-form'},{'name': 'AccountRegisterRootComponent', 'selector': 'account-register-root'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'GeneralRootComponent', 'selector': 'general-root'},{'name': 'MainErrorComponent', 'selector': 'main-error'},{'name': 'MainRootComponent', 'selector': 'main-root'},{'name': 'MainScrollToTopComponent', 'selector': 'main-scroll-to-top'},{'name': 'MainToolbarAvatarComponent', 'selector': 'main-toolbar-avatar'},{'name': 'MainToolbarMailComponent', 'selector': 'main-toolbar-mail'},{'name': 'MainToolbarNotificationsComponent', 'selector': 'main-toolbar-notifications'},{'name': 'ProfileCardComponent', 'selector': 'profile-card'},{'name': 'ProfileCardContainerComponent', 'selector': 'profile-card-container'},{'name': 'ProfileRootComponent', 'selector': 'profile-root'},{'name': 'ProfileWallContainerComponent', 'selector': 'profile-wall-container'},{'name': 'SettingsAccountContainerComponent', 'selector': 'settings-account-container'},{'name': 'SettingsAccountDataFormComponent', 'selector': 'settings-account-data-form'},{'name': 'SettingsAccountPasswordFormComponent', 'selector': 'settings-account-password-form'},{'name': 'SettingsRootComponent', 'selector': 'settings-root'}];\n    var DIRECTIVES = [{'name': 'MpgpFormControlErrorDirective', 'selector': '[MpgpFormControlError]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProfileCardContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileModule.html":{"url":"modules/ProfileModule.html","title":"module - ProfileModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_declarations\n\n\n\ncluster_ProfileModule_imports\n\n\n\n\nMainErrorComponent\n\nMainErrorComponent\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nMainErrorComponent->ProfileModule\n\n\n\n\n\nMainRootComponent\n\nMainRootComponent\n\nProfileModule -->\n\nMainRootComponent->ProfileModule\n\n\n\n\n\nMainScrollToTopComponent\n\nMainScrollToTopComponent\n\nProfileModule -->\n\nMainScrollToTopComponent->ProfileModule\n\n\n\n\n\nMainToolbarAvatarComponent\n\nMainToolbarAvatarComponent\n\nProfileModule -->\n\nMainToolbarAvatarComponent->ProfileModule\n\n\n\n\n\nMainToolbarMailComponent\n\nMainToolbarMailComponent\n\nProfileModule -->\n\nMainToolbarMailComponent->ProfileModule\n\n\n\n\n\nMainToolbarNotificationsComponent\n\nMainToolbarNotificationsComponent\n\nProfileModule -->\n\nMainToolbarNotificationsComponent->ProfileModule\n\n\n\n\n\nProfileRoutingModule\n\nProfileRoutingModule\n\nProfileModule -->\n\nProfileRoutingModule->ProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/profile/profile.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MainErrorComponent\n                        \n                        \n                            MainRootComponent\n                        \n                        \n                            MainScrollToTopComponent\n                        \n                        \n                            MainToolbarAvatarComponent\n                        \n                        \n                            MainToolbarMailComponent\n                        \n                        \n                            MainToolbarNotificationsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ProfileRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule, MatCardModule } from '@angular/material';\n\nimport { components } from './components';\nimport { containers } from './containers';\nimport { pages } from './pages';\nimport { ProfileRoutingModule } from './profile-routing.module';\n\nconst declarations = [...components, ...containers, ...pages];\n\nexport const vendorImports = [MatButtonModule, MatCardModule];\n\nconst imports = [CommonModule, ProfileRoutingModule, ...vendorImports];\n\n@NgModule({\n  declarations,\n  imports,\n})\nexport class ProfileModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileRootComponent.html":{"url":"components/ProfileRootComponent.html","title":"component - ProfileRootComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProfileRootComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/profile/pages/profile-root/profile-root.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                profile-root\n            \n\n\n\n\n            \n                templateUrl\n                ./profile-root.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'profile-root',\n  templateUrl: './profile-root.component.html',\n})\nexport class ProfileRootComponent {}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccountLoginFormComponent', 'selector': 'account-login-form'},{'name': 'AccountLoginRootComponent', 'selector': 'account-login-root'},{'name': 'AccountRegisterFormComponent', 'selector': 'account-register-form'},{'name': 'AccountRegisterRootComponent', 'selector': 'account-register-root'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'GeneralRootComponent', 'selector': 'general-root'},{'name': 'MainErrorComponent', 'selector': 'main-error'},{'name': 'MainRootComponent', 'selector': 'main-root'},{'name': 'MainScrollToTopComponent', 'selector': 'main-scroll-to-top'},{'name': 'MainToolbarAvatarComponent', 'selector': 'main-toolbar-avatar'},{'name': 'MainToolbarMailComponent', 'selector': 'main-toolbar-mail'},{'name': 'MainToolbarNotificationsComponent', 'selector': 'main-toolbar-notifications'},{'name': 'ProfileCardComponent', 'selector': 'profile-card'},{'name': 'ProfileCardContainerComponent', 'selector': 'profile-card-container'},{'name': 'ProfileRootComponent', 'selector': 'profile-root'},{'name': 'ProfileWallContainerComponent', 'selector': 'profile-wall-container'},{'name': 'SettingsAccountContainerComponent', 'selector': 'settings-account-container'},{'name': 'SettingsAccountDataFormComponent', 'selector': 'settings-account-data-form'},{'name': 'SettingsAccountPasswordFormComponent', 'selector': 'settings-account-password-form'},{'name': 'SettingsRootComponent', 'selector': 'settings-root'}];\n    var DIRECTIVES = [{'name': 'MpgpFormControlErrorDirective', 'selector': '[MpgpFormControlError]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProfileRootComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfileRoutingModule.html":{"url":"modules/ProfileRoutingModule.html","title":"module - ProfileRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfileRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/profile/profile-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ProfileRootComponent } from './pages';\n\nconst routes: Routes = [{ path: '', component: ProfileRootComponent }];\n\n@NgModule({\n  exports: [RouterModule],\n  imports: [RouterModule.forChild(routes)],\n})\nexport class ProfileRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileWallContainerComponent.html":{"url":"components/ProfileWallContainerComponent.html","title":"component - ProfileWallContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProfileWallContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/profile/containers/profile-wall-container/profile-wall-container.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                profile-wall-container\n            \n\n\n\n\n            \n                templateUrl\n                ./profile-wall-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'profile-wall-container',\n  templateUrl: './profile-wall-container.component.html',\n})\nexport class ProfileWallContainerComponent {\n\n}\n\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AccountLoginFormComponent', 'selector': 'account-login-form'},{'name': 'AccountLoginRootComponent', 'selector': 'account-login-root'},{'name': 'AccountRegisterFormComponent', 'selector': 'account-register-form'},{'name': 'AccountRegisterRootComponent', 'selector': 'account-register-root'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'GeneralRootComponent', 'selector': 'general-root'},{'name': 'MainErrorComponent', 'selector': 'main-error'},{'name': 'MainRootComponent', 'selector': 'main-root'},{'name': 'MainScrollToTopComponent', 'selector': 'main-scroll-to-top'},{'name': 'MainToolbarAvatarComponent', 'selector': 'main-toolbar-avatar'},{'name': 'MainToolbarMailComponent', 'selector': 'main-toolbar-mail'},{'name': 'MainToolbarNotificationsComponent', 'selector': 'main-toolbar-notifications'},{'name': 'ProfileCardComponent', 'selector': 'profile-card'},{'name': 'ProfileCardContainerComponent', 'selector': 'profile-card-container'},{'name': 'ProfileRootComponent', 'selector': 'profile-root'},{'name': 'ProfileWallContainerComponent', 'selector': 'profile-wall-container'},{'name': 'SettingsAccountContainerComponent', 'selector': 'settings-account-container'},{'name': 'SettingsAccountDataFormComponent', 'selector': 'settings-account-data-form'},{'name': 'SettingsAccountPasswordFormComponent', 'selector': 'settings-account-password-form'},{'name': 'SettingsRootComponent', 'selector': 'settings-root'}];\n    var DIRECTIVES = [{'name': 'MpgpFormControlErrorDirective', 'selector': '[MpgpFormControlError]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProfileWallContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RegisterAccountCommand.html":{"url":"interfaces/RegisterAccountCommand.html","title":"interface - RegisterAccountCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RegisterAccountCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/register-account-command.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        avatar\n                                \n                                \n                                        languages\n                                \n                                \n                                        login\n                                \n                                \n                                        nickname\n                                \n                                \n                                        password\n                                \n                                \n                                        passwordRepeat\n                                \n                                \n                                        statusInfo\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                    \n                                \n                                \n                                    \n                                        avatar:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        languages\n                                    \n                                \n                                \n                                    \n                                        languages:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        login\n                                    \n                                \n                                \n                                    \n                                        login:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nickname\n                                    \n                                \n                                \n                                    \n                                        nickname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        passwordRepeat\n                                    \n                                \n                                \n                                    \n                                        passwordRepeat:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusInfo\n                                    \n                                \n                                \n                                    \n                                        statusInfo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface RegisterAccountCommand {\n  avatar: string;\n  languages: string;\n  login: string;\n  nickname: string;\n  password: string;\n  passwordRepeat: string;\n  statusInfo: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsAccountContainerComponent.html":{"url":"components/SettingsAccountContainerComponent.html","title":"component - SettingsAccountContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SettingsAccountContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/containers/settings-account-container/settings-account-container.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                settings-account-container\n            \n\n\n\n\n            \n                templateUrl\n                ./settings-account-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accountErorr$\n                            \n                            \n                                passwordErorr$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                updateAccount\n                            \n                            \n                                updatePassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(manageService: ManageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/settings/containers/settings-account-container/settings-account-container.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        manageService\n                                                  \n                                                        \n                                                                        ManageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateAccount\n                        \n                        \n                    \n                \n            \n            \n                \nupdateAccount(command: UpdateAccountCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/settings/containers/settings-account-container/settings-account-container.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                UpdateAccountCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updatePassword\n                        \n                        \n                    \n                \n            \n            \n                \nupdatePassword(command: UpdatePasswordCommand)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/settings/containers/settings-account-container/settings-account-container.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    command\n                                    \n                                                UpdatePasswordCommand\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accountErorr$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/settings/containers/settings-account-container/settings-account-container.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            passwordErorr$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/settings/containers/settings-account-container/settings-account-container.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { EMPTY, Subject } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { UpdateAccountCommand } from '~/core/interfaces/update-account-command';\nimport { UpdatePasswordCommand } from '~/core/interfaces/update-password-command';\n\nimport { ManageService } from '../../services';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'settings-account-container',\n  templateUrl: './settings-account-container.component.html',\n})\nexport class SettingsAccountContainerComponent {\n  accountErorr$ = new Subject();\n  passwordErorr$ = new Subject();\n\n  constructor(private readonly manageService: ManageService) {}\n\n  updateAccount(command: UpdateAccountCommand): void {\n    this.accountErorr$.next('');\n    this.manageService\n      .updateAccount(command)\n      .pipe(\n        catchError(error => {\n          this.accountErorr$.next(error.toString());\n\n          return EMPTY;\n        }),\n      )\n      .toPromise();\n  }\n\n  updatePassword(command: UpdatePasswordCommand): void {\n    this.passwordErorr$.next('');\n    this.manageService\n      .updatePassword(command)\n      .pipe(\n        catchError(error => {\n          this.passwordErorr$.next(error.toString());\n\n          return EMPTY;\n        }),\n      )\n      .toPromise();\n  }\n}\n\n    \n\n    \n        Profile Information\n{{accountErorr}}\n\n\nChange Password\n{{passwordErorr}}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Profile Information{{accountErorr}}Change Password{{passwordErorr}}'\n    var COMPONENTS = [{'name': 'AccountLoginFormComponent', 'selector': 'account-login-form'},{'name': 'AccountLoginRootComponent', 'selector': 'account-login-root'},{'name': 'AccountRegisterFormComponent', 'selector': 'account-register-form'},{'name': 'AccountRegisterRootComponent', 'selector': 'account-register-root'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'GeneralRootComponent', 'selector': 'general-root'},{'name': 'MainErrorComponent', 'selector': 'main-error'},{'name': 'MainRootComponent', 'selector': 'main-root'},{'name': 'MainScrollToTopComponent', 'selector': 'main-scroll-to-top'},{'name': 'MainToolbarAvatarComponent', 'selector': 'main-toolbar-avatar'},{'name': 'MainToolbarMailComponent', 'selector': 'main-toolbar-mail'},{'name': 'MainToolbarNotificationsComponent', 'selector': 'main-toolbar-notifications'},{'name': 'ProfileCardComponent', 'selector': 'profile-card'},{'name': 'ProfileCardContainerComponent', 'selector': 'profile-card-container'},{'name': 'ProfileRootComponent', 'selector': 'profile-root'},{'name': 'ProfileWallContainerComponent', 'selector': 'profile-wall-container'},{'name': 'SettingsAccountContainerComponent', 'selector': 'settings-account-container'},{'name': 'SettingsAccountDataFormComponent', 'selector': 'settings-account-data-form'},{'name': 'SettingsAccountPasswordFormComponent', 'selector': 'settings-account-password-form'},{'name': 'SettingsRootComponent', 'selector': 'settings-root'}];\n    var DIRECTIVES = [{'name': 'MpgpFormControlErrorDirective', 'selector': '[MpgpFormControlError]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsAccountContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsAccountDataFormComponent.html":{"url":"components/SettingsAccountDataFormComponent.html","title":"component - SettingsAccountDataFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SettingsAccountDataFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/components/settings-account-data-form/settings-account-data-form.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                settings-account-data-form\n            \n\n            \n                styleUrls\n                ./settings-account-data-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings-account-data-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/settings/components/settings-account-data-form/settings-account-data-form.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        submit\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/settings/components/settings-account-data-form/settings-account-data-form.component.ts:16\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createForm\n                        \n                        \n                    \n                \n            \n            \n                \ncreateForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/settings/components/settings-account-data-form/settings-account-data-form.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/settings/components/settings-account-data-form/settings-account-data-form.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/settings/components/settings-account-data-form/settings-account-data-form.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/settings/components/settings-account-data-form/settings-account-data-form.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, OnInit, Output, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { RegisterAccountCommand } from '~/core/interfaces/register-account-command';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'settings-account-data-form',\n  styleUrls: ['./settings-account-data-form.component.scss'],\n  templateUrl: './settings-account-data-form.component.html',\n})\nexport class SettingsAccountDataFormComponent implements OnInit {\n  form: FormGroup;\n\n  @Output() submit = new EventEmitter();\n\n  constructor(private readonly fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.createForm();\n  }\n\n  createForm(): void {\n    this.form = this.fb.group({\n      avatar: ['', [Validators.required, Validators.maxLength(249)]],\n      languages: ['', [Validators.required, Validators.maxLength(249)]],\n      nickname: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(20), Validators.pattern(/^[^\\s].{1,18}[^\\s]$/)]],\n      statusInfo: ['', [Validators.required, Validators.maxLength(249)]],\n    });\n  }\n\n  onSubmit(event: Event): void {\n    event.stopPropagation();\n    this.submit.emit(this.form.value);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n          \n          Your user name\n        \n      \n    \n    \n      \n        \n          \n          \n        \n      \n    \n    \n      \n        \n          \n          \n          For example: English, Deutsch\n        \n      \n    \n    \n      \n        \n          \n          \n        \n      \n    \n    \n      \n        Submit\n      \n    \n  \n\n    \n\n    \n                \n                    ./settings-account-data-form.component.scss\n                \n                .demo-full-width {\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  Your user name                                                                                                                          For example: English, Deutsch                                                                                            Submit            '\n    var COMPONENTS = [{'name': 'AccountLoginFormComponent', 'selector': 'account-login-form'},{'name': 'AccountLoginRootComponent', 'selector': 'account-login-root'},{'name': 'AccountRegisterFormComponent', 'selector': 'account-register-form'},{'name': 'AccountRegisterRootComponent', 'selector': 'account-register-root'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'GeneralRootComponent', 'selector': 'general-root'},{'name': 'MainErrorComponent', 'selector': 'main-error'},{'name': 'MainRootComponent', 'selector': 'main-root'},{'name': 'MainScrollToTopComponent', 'selector': 'main-scroll-to-top'},{'name': 'MainToolbarAvatarComponent', 'selector': 'main-toolbar-avatar'},{'name': 'MainToolbarMailComponent', 'selector': 'main-toolbar-mail'},{'name': 'MainToolbarNotificationsComponent', 'selector': 'main-toolbar-notifications'},{'name': 'ProfileCardComponent', 'selector': 'profile-card'},{'name': 'ProfileCardContainerComponent', 'selector': 'profile-card-container'},{'name': 'ProfileRootComponent', 'selector': 'profile-root'},{'name': 'ProfileWallContainerComponent', 'selector': 'profile-wall-container'},{'name': 'SettingsAccountContainerComponent', 'selector': 'settings-account-container'},{'name': 'SettingsAccountDataFormComponent', 'selector': 'settings-account-data-form'},{'name': 'SettingsAccountPasswordFormComponent', 'selector': 'settings-account-password-form'},{'name': 'SettingsRootComponent', 'selector': 'settings-root'}];\n    var DIRECTIVES = [{'name': 'MpgpFormControlErrorDirective', 'selector': '[MpgpFormControlError]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsAccountDataFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsAccountPasswordFormComponent.html":{"url":"components/SettingsAccountPasswordFormComponent.html","title":"component - SettingsAccountPasswordFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SettingsAccountPasswordFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/components/settings-account-password-form/settings-account-password-form.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                settings-account-password-form\n            \n\n            \n                styleUrls\n                ./settings-account-password-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings-account-password-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/settings/components/settings-account-password-form/settings-account-password-form.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        submit\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/features/settings/components/settings-account-password-form/settings-account-password-form.component.ts:17\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createForm\n                        \n                        \n                    \n                \n            \n            \n                \ncreateForm()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/settings/components/settings-account-password-form/settings-account-password-form.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/settings/components/settings-account-password-form/settings-account-password-form.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit(event: Event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/settings/components/settings-account-password-form/settings-account-password-form.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/features/settings/components/settings-account-password-form/settings-account-password-form.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, OnInit, Output, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { RegisterAccountCommand } from '~/core/interfaces/register-account-command';\nimport { CustomValidators } from '~/shared';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'settings-account-password-form',\n  styleUrls: ['./settings-account-password-form.component.scss'],\n  templateUrl: './settings-account-password-form.component.html',\n})\nexport class SettingsAccountPasswordFormComponent implements OnInit {\n  form: FormGroup;\n\n  @Output() submit = new EventEmitter();\n\n  constructor(private readonly fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.createForm();\n  }\n\n  createForm(): void {\n    this.form = this.fb.group(\n      {\n        oldPassword: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(249)]],\n        password: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(249)]],\n        passwordRepeat: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(249)]],\n      },\n      { validator: CustomValidators.matchPassword },\n    );\n  }\n\n  onSubmit(event: Event): void {\n    event.stopPropagation();\n    this.submit.emit(this.form.value);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n          \n        \n      \n    \n    \n      \n        \n          \n          \n        \n      \n    \n    \n      \n        \n          \n          \n        \n      \n    \n    \n      \n        Submit\n      \n    \n  \n\n    \n\n    \n                \n                    ./settings-account-password-form.component.scss\n                \n                .demo-full-width {\n  width: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                            Submit            '\n    var COMPONENTS = [{'name': 'AccountLoginFormComponent', 'selector': 'account-login-form'},{'name': 'AccountLoginRootComponent', 'selector': 'account-login-root'},{'name': 'AccountRegisterFormComponent', 'selector': 'account-register-form'},{'name': 'AccountRegisterRootComponent', 'selector': 'account-register-root'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'GeneralRootComponent', 'selector': 'general-root'},{'name': 'MainErrorComponent', 'selector': 'main-error'},{'name': 'MainRootComponent', 'selector': 'main-root'},{'name': 'MainScrollToTopComponent', 'selector': 'main-scroll-to-top'},{'name': 'MainToolbarAvatarComponent', 'selector': 'main-toolbar-avatar'},{'name': 'MainToolbarMailComponent', 'selector': 'main-toolbar-mail'},{'name': 'MainToolbarNotificationsComponent', 'selector': 'main-toolbar-notifications'},{'name': 'ProfileCardComponent', 'selector': 'profile-card'},{'name': 'ProfileCardContainerComponent', 'selector': 'profile-card-container'},{'name': 'ProfileRootComponent', 'selector': 'profile-root'},{'name': 'ProfileWallContainerComponent', 'selector': 'profile-wall-container'},{'name': 'SettingsAccountContainerComponent', 'selector': 'settings-account-container'},{'name': 'SettingsAccountDataFormComponent', 'selector': 'settings-account-data-form'},{'name': 'SettingsAccountPasswordFormComponent', 'selector': 'settings-account-password-form'},{'name': 'SettingsRootComponent', 'selector': 'settings-root'}];\n    var DIRECTIVES = [{'name': 'MpgpFormControlErrorDirective', 'selector': '[MpgpFormControlError]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsAccountPasswordFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsModule.html":{"url":"modules/SettingsModule.html","title":"module - SettingsModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_declarations\n\n\n\ncluster_SettingsModule_imports\n\n\n\ncluster_SettingsModule_providers\n\n\n\n\nMainErrorComponent\n\nMainErrorComponent\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nMainErrorComponent->SettingsModule\n\n\n\n\n\nMainRootComponent\n\nMainRootComponent\n\nSettingsModule -->\n\nMainRootComponent->SettingsModule\n\n\n\n\n\nMainScrollToTopComponent\n\nMainScrollToTopComponent\n\nSettingsModule -->\n\nMainScrollToTopComponent->SettingsModule\n\n\n\n\n\nMainToolbarAvatarComponent\n\nMainToolbarAvatarComponent\n\nSettingsModule -->\n\nMainToolbarAvatarComponent->SettingsModule\n\n\n\n\n\nMainToolbarMailComponent\n\nMainToolbarMailComponent\n\nSettingsModule -->\n\nMainToolbarMailComponent->SettingsModule\n\n\n\n\n\nMainToolbarNotificationsComponent\n\nMainToolbarNotificationsComponent\n\nSettingsModule -->\n\nMainToolbarNotificationsComponent->SettingsModule\n\n\n\n\n\nMpgpFormControlErrorModule\n\nMpgpFormControlErrorModule\n\nSettingsModule -->\n\nMpgpFormControlErrorModule->SettingsModule\n\n\n\n\n\nSettingsRoutingModule\n\nSettingsRoutingModule\n\nSettingsModule -->\n\nSettingsRoutingModule->SettingsModule\n\n\n\n\n\nManageService\n\nManageService\n\nSettingsModule -->\n\nManageService->SettingsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/settings/settings.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MainErrorComponent\n                        \n                        \n                            MainRootComponent\n                        \n                        \n                            MainScrollToTopComponent\n                        \n                        \n                            MainToolbarAvatarComponent\n                        \n                        \n                            MainToolbarMailComponent\n                        \n                        \n                            MainToolbarNotificationsComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ManageService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MpgpFormControlErrorModule\n                        \n                        \n                            SettingsRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule, MatFormFieldModule, MatInputModule, MatTabsModule } from '@angular/material';\n\nimport { MpgpFormControlErrorModule } from '~/shared';\n\nimport { components } from './components';\nimport { containers } from './containers';\nimport { pages } from './pages';\nimport { services } from './services/';\nimport { SettingsRoutingModule } from './settings-routing.module';\n\nconst declarations = [...components, ...containers, ...pages];\n\nexport const vendorImports = [MatButtonModule, MatFormFieldModule, MatInputModule, MatTabsModule];\n\nconst imports = [CommonModule, FormsModule, MpgpFormControlErrorModule, ReactiveFormsModule, SettingsRoutingModule, ...vendorImports];\n\nconst providers = [...services];\n\n@NgModule({\n  declarations,\n  imports,\n  providers,\n})\nexport class SettingsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsRootComponent.html":{"url":"components/SettingsRootComponent.html","title":"component - SettingsRootComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SettingsRootComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/features/settings/pages/settings-root/settings-root.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                settings-root\n            \n\n\n\n\n            \n                templateUrl\n                ./settings-root.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'settings-root',\n  templateUrl: './settings-root.component.html',\n})\nexport class SettingsRootComponent {}\n\n    \n\n    \n        \n  \n    \n      \n    \n  \n  \n    \n      So soon...\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              So soon...      '\n    var COMPONENTS = [{'name': 'AccountLoginFormComponent', 'selector': 'account-login-form'},{'name': 'AccountLoginRootComponent', 'selector': 'account-login-root'},{'name': 'AccountRegisterFormComponent', 'selector': 'account-register-form'},{'name': 'AccountRegisterRootComponent', 'selector': 'account-register-root'},{'name': 'AppComponent', 'selector': 'app'},{'name': 'GeneralRootComponent', 'selector': 'general-root'},{'name': 'MainErrorComponent', 'selector': 'main-error'},{'name': 'MainRootComponent', 'selector': 'main-root'},{'name': 'MainScrollToTopComponent', 'selector': 'main-scroll-to-top'},{'name': 'MainToolbarAvatarComponent', 'selector': 'main-toolbar-avatar'},{'name': 'MainToolbarMailComponent', 'selector': 'main-toolbar-mail'},{'name': 'MainToolbarNotificationsComponent', 'selector': 'main-toolbar-notifications'},{'name': 'ProfileCardComponent', 'selector': 'profile-card'},{'name': 'ProfileCardContainerComponent', 'selector': 'profile-card-container'},{'name': 'ProfileRootComponent', 'selector': 'profile-root'},{'name': 'ProfileWallContainerComponent', 'selector': 'profile-wall-container'},{'name': 'SettingsAccountContainerComponent', 'selector': 'settings-account-container'},{'name': 'SettingsAccountDataFormComponent', 'selector': 'settings-account-data-form'},{'name': 'SettingsAccountPasswordFormComponent', 'selector': 'settings-account-password-form'},{'name': 'SettingsRootComponent', 'selector': 'settings-root'}];\n    var DIRECTIVES = [{'name': 'MpgpFormControlErrorDirective', 'selector': '[MpgpFormControlError]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsRootComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsRoutingModule.html":{"url":"modules/SettingsRoutingModule.html","title":"module - SettingsRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/features/settings/settings-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { SettingsRootComponent } from './pages';\n\nconst routes: Routes = [{ path: '', component: SettingsRootComponent }];\n\n@NgModule({\n  exports: [RouterModule],\n  imports: [RouterModule.forChild(routes)],\n})\nexport class SettingsRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/UnauthorizedGuard.html":{"url":"guards/UnauthorizedGuard.html","title":"guard - UnauthorizedGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    UnauthorizedGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/features/account/guards/unauthorized.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(accountService: AccountService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/features/account/guards/unauthorized.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accountService\n                                                  \n                                                        \n                                                                        AccountService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(_route: ActivatedRouteSnapshot, _state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/features/account/guards/unauthorized.guard.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\n\nimport { AccountService } from '~/core/services/account.service';\n\n@Injectable()\nexport class UnauthorizedGuard implements CanActivate {\n  constructor(private readonly accountService: AccountService, private readonly router: Router) {}\n\n  canActivate(_route: ActivatedRouteSnapshot, _state: RouterStateSnapshot): boolean {\n    if (!this.accountService.isLoggedIn) {\n      return true;\n    }\n\n    this.router.navigateByUrl('/');\n\n    return false;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpdateAccountCommand.html":{"url":"interfaces/UpdateAccountCommand.html","title":"interface - UpdateAccountCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UpdateAccountCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/update-account-command.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        avatar\n                                \n                                \n                                        languages\n                                \n                                \n                                        login\n                                \n                                \n                                        nickname\n                                \n                                \n                                        statusInfo\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                    \n                                \n                                \n                                    \n                                        avatar:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        languages\n                                    \n                                \n                                \n                                    \n                                        languages:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        login\n                                    \n                                \n                                \n                                    \n                                        login:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nickname\n                                    \n                                \n                                \n                                    \n                                        nickname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusInfo\n                                    \n                                \n                                \n                                    \n                                        statusInfo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UpdateAccountCommand {\n  avatar: string;\n  languages: string;\n  login: string;\n  nickname: string;\n  statusInfo: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpdatePasswordCommand.html":{"url":"interfaces/UpdatePasswordCommand.html","title":"interface - UpdatePasswordCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UpdatePasswordCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/update-password-command.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        oldPassword\n                                \n                                \n                                        password\n                                \n                                \n                                        passwordRepeat\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        oldPassword\n                                    \n                                \n                                \n                                    \n                                        oldPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        passwordRepeat\n                                    \n                                \n                                \n                                    \n                                        passwordRepeat:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UpdatePasswordCommand {\n  oldPassword: string;\n  password: string;\n  passwordRepeat: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n1.2.1 (2019-07-06)\nBug Fixes\n\nmany changes (fe62a3f)\n\n1.2.0 (2018-07-30)\nFeatures\n\naccount: add account module (76f936e)\ncore: add auth interceptor (e04326c)\ncore: handle and log errors (1bb74e1)\nprofile: add profile module (a6fda0a)\nsettings: add settings module (3bae2ff)\nshared: add custom control validators (0a06e52)\nshared: add formControlError directive (6355a61)\n\n1.1.0 (2018-06-23)\nFeatures\n\nadd stylelint (82da58a)\n\n1.0.0 (2018-06-17)\nFeatures\n\ninitial commit (51d26ba)\n\nBREAKING CHANGES\n\nmigrate from React to Angular\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            declarations\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            variable\n            imports\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/core.module.ts\n            \n            variable\n            authInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/core.module.ts\n            \n            variable\n            errorsHandler\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/core.module.ts\n            \n            variable\n            providers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/account.dto.ts\n            \n            class\n            AccountDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/auth-info.dto.ts\n            \n            class\n            AuthInfo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/authorize-account-command.ts\n            \n            interface\n            AuthorizeAccountCommand\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/http-error.dto.ts\n            \n            interface\n            HttpError\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/register-account-command.ts\n            \n            interface\n            RegisterAccountCommand\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/update-account-command.ts\n            \n            interface\n            UpdateAccountCommand\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/update-password-command.ts\n            \n            interface\n            UpdatePasswordCommand\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/services/account.service.ts\n            \n            injectable\n            AccountService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/core/services/auth.interceptor.ts\n            \n            interceptor\n            AuthInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/cache.service.ts\n            \n            class\n            CacheService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/core/services/cache.service.ts\n            \n            interface\n            CacheContent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/cache.service.ts\n            \n            function\n            Cacheable\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/errors-handler.service.ts\n            \n            injectable\n            ErrorsHandler\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/services/errors-logger.service.ts\n            \n            injectable\n            ErrorsLogger\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/services/errors-logger.service.ts\n            \n            interface\n            ErrorWithContext\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/features/account/account.module.ts\n            \n            variable\n            declarations\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/account/account.module.ts\n            \n            variable\n            imports\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/account/account.module.ts\n            \n            variable\n            providers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/account/account.module.ts\n            \n            variable\n            vendorImports\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/account/components/account-login-form/account-login-form.component.ts\n            \n            component\n            AccountLoginFormComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/features/account/components/account-register-form/account-register-form.component.ts\n            \n            component\n            AccountRegisterFormComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/features/account/components/index.ts\n            \n            variable\n            components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/account/containers/index.ts\n            \n            variable\n            containers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/account/guards/logout.guard.ts\n            \n            guard\n            LogoutGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/features/account/guards/unauthorized.guard.ts\n            \n            guard\n            UnauthorizedGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/features/account/pages/account-login-root/account-login-root.component.ts\n            \n            component\n            AccountLoginRootComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/features/account/pages/account-register-root/account-register-root.component.ts\n            \n            component\n            AccountRegisterRootComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/features/account/pages/index.ts\n            \n            variable\n            pages\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/general/components/index.ts\n            \n            variable\n            components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/general/containers/index.ts\n            \n            variable\n            containers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/general/general.module.ts\n            \n            variable\n            declarations\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/general/general.module.ts\n            \n            variable\n            imports\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/general/general.module.ts\n            \n            variable\n            vendorImports\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/general/pages/general-root/general-root.component.ts\n            \n            component\n            GeneralRootComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/general/pages/index.ts\n            \n            variable\n            pages\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/profile/components/index.ts\n            \n            variable\n            components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/profile/components/profile-card/profile-card.component.ts\n            \n            component\n            ProfileCardComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/features/profile/containers/index.ts\n            \n            variable\n            containers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/profile/containers/profile-card-container/profile-card-container.component.ts\n            \n            component\n            ProfileCardContainerComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/features/profile/containers/profile-wall-container/profile-wall-container.component.ts\n            \n            component\n            ProfileWallContainerComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/profile/pages/index.ts\n            \n            variable\n            pages\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/profile/pages/profile-root/profile-root.component.ts\n            \n            component\n            ProfileRootComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/profile/profile.module.ts\n            \n            variable\n            declarations\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/profile/profile.module.ts\n            \n            variable\n            imports\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/profile/profile.module.ts\n            \n            variable\n            vendorImports\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/settings/components/index.ts\n            \n            variable\n            components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/settings/components/settings-account-data-form/settings-account-data-form.component.ts\n            \n            component\n            SettingsAccountDataFormComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/features/settings/components/settings-account-password-form/settings-account-password-form.component.ts\n            \n            component\n            SettingsAccountPasswordFormComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/features/settings/containers/index.ts\n            \n            variable\n            containers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/settings/containers/settings-account-container/settings-account-container.component.ts\n            \n            component\n            SettingsAccountContainerComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/features/settings/pages/index.ts\n            \n            variable\n            pages\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/settings/pages/settings-root/settings-root.component.ts\n            \n            component\n            SettingsRootComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/settings/services/index.ts\n            \n            variable\n            services\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/settings/services/manage.service.ts\n            \n            injectable\n            ManageService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/features/settings/settings.module.ts\n            \n            variable\n            declarations\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/settings/settings.module.ts\n            \n            variable\n            imports\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/settings/settings.module.ts\n            \n            variable\n            providers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/features/settings/settings.module.ts\n            \n            variable\n            vendorImports\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/main/components/index.ts\n            \n            variable\n            components\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/main/containers/index.ts\n            \n            variable\n            containers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/main/containers/main-scroll-to-top/main-scroll-to-top.component.ts\n            \n            component\n            MainScrollToTopComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/main/containers/main-toolbar-avatar/main-toolbar-avatar.component.ts\n            \n            component\n            MainToolbarAvatarComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/main/containers/main-toolbar-mail/main-toolbar-mail.component.ts\n            \n            component\n            MainToolbarMailComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/main/containers/main-toolbar-notifications/main-toolbar-notifications.component.ts\n            \n            component\n            MainToolbarNotificationsComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/main/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/main/main.module.ts\n            \n            variable\n            _exports\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/main/main.module.ts\n            \n            variable\n            declarations\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/main/main.module.ts\n            \n            variable\n            imports\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/main/main.module.ts\n            \n            variable\n            providers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/main/main.module.ts\n            \n            variable\n            vendorImports\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/main/pages/index.ts\n            \n            variable\n            pages\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/main/pages/main-error/main-error.component.ts\n            \n            component\n            MainErrorComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/main/pages/main-root/main-root.component.ts\n            \n            component\n            MainRootComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/custom-validators.ts\n            \n            class\n            CustomValidators\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/directives/mpgp-formcontrol-error/mpgp-formcontrol-error.directive.ts\n            \n            directive\n            MpgpFormControlErrorDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/directives/mpgp-formcontrol-error/mpgp-formcontrol-error.directive.ts\n            \n            interface\n            FormControlError\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 8.0.1\n        \n            @angular/cdk : 8.0.1\n        \n            @angular/common : 8.0.1\n        \n            @angular/compiler : 8.0.1\n        \n            @angular/core : 8.0.1\n        \n            @angular/flex-layout : 8.0.0-beta.26\n        \n            @angular/forms : 8.0.1\n        \n            @angular/http : 7.2.15\n        \n            @angular/material : 8.0.1\n        \n            @angular/platform-browser : 8.0.1\n        \n            @angular/platform-browser-dynamic : 8.0.1\n        \n            @angular/router : 8.0.1\n        \n            core-js : 3.1.4\n        \n            rxjs : 6.5.2\n        \n            rxjs-compat : 6.5.2\n        \n            stylelint : 10.1.0\n        \n            stylelint-order : 3.0.0\n        \n            zone.js : 0.9.1\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Cacheable   (src/.../cache.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/services/cache.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            Cacheable\n                        \n                        \n                    \n                \n            \n            \n                \nCacheable(cacheTime)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cacheTime\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Function\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nBrowserClient\nhttps://mpgp.github.io/BrowserClient\n\nThis project was generated with Angular CLI version 6.\n\n\n\n\n\n\n\n\n \nPull docker image\ndocker pull mpgp129/mpgpclient\nRun docker container\ndocker run --rm --hostname localhost -p 8080:8080  --name mpgpclient mpgp129/mpgpclient:latest\n\nInstall packages\nyarn install\nyarn global add @angular/cli --prefix /usr/local\nDevelopment server\nRun yarn run start for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun yarn run build to build the project. The build artifacts will be stored in the dist directory.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nBSD 2-Clause \"Simplified\" License\nCopyright (c) 2018, MPGP\nAll rights reserved.\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this\nlist of conditions and the following disclaimer.\n\nRedistributions in binary form must reproduce the above copyright notice,\nthis list of conditions and the following disclaimer in the documentation\nand/or other materials provided with the distribution.\n\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AccountModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AccountRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GeneralModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GeneralRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MainModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MainRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MpgpFormControlErrorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfileRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AccountModule\n\n\n\ncluster_AccountModule_declarations\n\n\n\ncluster_AccountModule_imports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_providers\n\n\n\ncluster_GeneralModule\n\n\n\ncluster_GeneralModule_imports\n\n\n\ncluster_MainModule\n\n\n\ncluster_MainModule_imports\n\n\n\ncluster_MainModule_exports\n\n\n\ncluster_MpgpFormControlErrorModule\n\n\n\ncluster_MpgpFormControlErrorModule_declarations\n\n\n\ncluster_MpgpFormControlErrorModule_exports\n\n\n\ncluster_ProfileModule\n\n\n\ncluster_ProfileModule_imports\n\n\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_imports\n\n\n\ncluster_SettingsModule_providers\n\n\n\n\nMainErrorComponent\n\nMainErrorComponent\n\n\n\nAccountModule\n\nAccountModule\n\nAccountModule -->\n\nMainErrorComponent->AccountModule\n\n\n\n\n\nMainModule\n\nMainModule\n\nMainModule -->\n\nMainErrorComponent->MainModule\n\n\n\n\n\nGeneralModule\n\nGeneralModule\n\nGeneralModule -->\n\nMainErrorComponent->GeneralModule\n\n\n\n\n\nProfileModule\n\nProfileModule\n\nProfileModule -->\n\nMainErrorComponent->ProfileModule\n\n\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nMainErrorComponent->SettingsModule\n\n\n\n\n\nMainRootComponent\n\nMainRootComponent\n\nAccountModule -->\n\nMainRootComponent->AccountModule\n\n\n\nMainModule -->\n\nMainRootComponent->MainModule\n\n\n\nGeneralModule -->\n\nMainRootComponent->GeneralModule\n\n\n\nProfileModule -->\n\nMainRootComponent->ProfileModule\n\n\n\nSettingsModule -->\n\nMainRootComponent->SettingsModule\n\n\n\n\n\nMainScrollToTopComponent\n\nMainScrollToTopComponent\n\nAccountModule -->\n\nMainScrollToTopComponent->AccountModule\n\n\n\nMainModule -->\n\nMainScrollToTopComponent->MainModule\n\n\n\nGeneralModule -->\n\nMainScrollToTopComponent->GeneralModule\n\n\n\nProfileModule -->\n\nMainScrollToTopComponent->ProfileModule\n\n\n\nSettingsModule -->\n\nMainScrollToTopComponent->SettingsModule\n\n\n\n\n\nMainToolbarAvatarComponent\n\nMainToolbarAvatarComponent\n\nAccountModule -->\n\nMainToolbarAvatarComponent->AccountModule\n\n\n\nMainModule -->\n\nMainToolbarAvatarComponent->MainModule\n\n\n\nGeneralModule -->\n\nMainToolbarAvatarComponent->GeneralModule\n\n\n\nProfileModule -->\n\nMainToolbarAvatarComponent->ProfileModule\n\n\n\nSettingsModule -->\n\nMainToolbarAvatarComponent->SettingsModule\n\n\n\n\n\nMainToolbarMailComponent\n\nMainToolbarMailComponent\n\nAccountModule -->\n\nMainToolbarMailComponent->AccountModule\n\n\n\nMainModule -->\n\nMainToolbarMailComponent->MainModule\n\n\n\nGeneralModule -->\n\nMainToolbarMailComponent->GeneralModule\n\n\n\nProfileModule -->\n\nMainToolbarMailComponent->ProfileModule\n\n\n\nSettingsModule -->\n\nMainToolbarMailComponent->SettingsModule\n\n\n\n\n\nMainToolbarNotificationsComponent\n\nMainToolbarNotificationsComponent\n\nAccountModule -->\n\nMainToolbarNotificationsComponent->AccountModule\n\n\n\nMainModule -->\n\nMainToolbarNotificationsComponent->MainModule\n\n\n\nGeneralModule -->\n\nMainToolbarNotificationsComponent->GeneralModule\n\n\n\nProfileModule -->\n\nMainToolbarNotificationsComponent->ProfileModule\n\n\n\nSettingsModule -->\n\nMainToolbarNotificationsComponent->SettingsModule\n\n\n\n\n\nAccountRoutingModule\n\nAccountRoutingModule\n\nAccountModule -->\n\nAccountRoutingModule->AccountModule\n\n\n\n\n\nMpgpFormControlErrorModule\n\nMpgpFormControlErrorModule\n\nAccountModule -->\n\nMpgpFormControlErrorModule->AccountModule\n\n\n\n\n\nMpgpFormControlErrorDirective \n\nMpgpFormControlErrorDirective \n\nMpgpFormControlErrorDirective  -->\n\nMpgpFormControlErrorModule->MpgpFormControlErrorDirective \n\n\n\nSettingsModule -->\n\nMpgpFormControlErrorModule->SettingsModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\nAppModule -->\n\nMainModule->AppModule\n\n\n\n\n\nMainRootComponent \n\nMainRootComponent \n\nMainRootComponent  -->\n\nMainModule->MainRootComponent \n\n\n\n\n\nAccountService\n\nAccountService\n\nCoreModule -->\n\nAccountService->CoreModule\n\n\n\n\n\nErrorsLogger\n\nErrorsLogger\n\nCoreModule -->\n\nErrorsLogger->CoreModule\n\n\n\n\n\nGeneralRoutingModule\n\nGeneralRoutingModule\n\nGeneralModule -->\n\nGeneralRoutingModule->GeneralModule\n\n\n\n\n\nMainRoutingModule\n\nMainRoutingModule\n\nMainModule -->\n\nMainRoutingModule->MainModule\n\n\n\n\n\nMpgpFormControlErrorDirective\n\nMpgpFormControlErrorDirective\n\nMpgpFormControlErrorModule -->\n\nMpgpFormControlErrorDirective->MpgpFormControlErrorModule\n\n\n\n\n\nProfileRoutingModule\n\nProfileRoutingModule\n\nProfileModule -->\n\nProfileRoutingModule->ProfileModule\n\n\n\n\n\nSettingsRoutingModule\n\nSettingsRoutingModule\n\nSettingsModule -->\n\nSettingsRoutingModule->SettingsModule\n\n\n\n\n\nManageService\n\nManageService\n\nSettingsModule -->\n\nManageService->SettingsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        13 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    20 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        22 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            _exports   (src/.../main.module.ts)\n                        \n                        \n                            authInterceptor   (src/.../core.module.ts)\n                        \n                        \n                            bootstrap   (src/.../app.module.ts)\n                        \n                        \n                            components   (src/.../index.ts)\n                        \n                        \n                            components   (src/.../index.ts)\n                        \n                        \n                            components   (src/.../index.ts)\n                        \n                        \n                            components   (src/.../index.ts)\n                        \n                        \n                            components   (src/.../index.ts)\n                        \n                        \n                            containers   (src/.../index.ts)\n                        \n                        \n                            containers   (src/.../index.ts)\n                        \n                        \n                            containers   (src/.../index.ts)\n                        \n                        \n                            containers   (src/.../index.ts)\n                        \n                        \n                            containers   (src/.../index.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            declarations   (src/.../app.module.ts)\n                        \n                        \n                            declarations   (src/.../main.module.ts)\n                        \n                        \n                            declarations   (src/.../account.module.ts)\n                        \n                        \n                            declarations   (src/.../general.module.ts)\n                        \n                        \n                            declarations   (src/.../profile.module.ts)\n                        \n                        \n                            declarations   (src/.../settings.module.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            errorsHandler   (src/.../core.module.ts)\n                        \n                        \n                            imports   (src/.../app.module.ts)\n                        \n                        \n                            imports   (src/.../main.module.ts)\n                        \n                        \n                            imports   (src/.../account.module.ts)\n                        \n                        \n                            imports   (src/.../general.module.ts)\n                        \n                        \n                            imports   (src/.../profile.module.ts)\n                        \n                        \n                            imports   (src/.../settings.module.ts)\n                        \n                        \n                            pages   (src/.../index.ts)\n                        \n                        \n                            pages   (src/.../index.ts)\n                        \n                        \n                            pages   (src/.../index.ts)\n                        \n                        \n                            pages   (src/.../index.ts)\n                        \n                        \n                            pages   (src/.../index.ts)\n                        \n                        \n                            providers   (src/.../core.module.ts)\n                        \n                        \n                            providers   (src/.../main.module.ts)\n                        \n                        \n                            providers   (src/.../account.module.ts)\n                        \n                        \n                            providers   (src/.../settings.module.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            services   (src/.../index.ts)\n                        \n                        \n                            vendorImports   (src/.../main.module.ts)\n                        \n                        \n                            vendorImports   (src/.../account.module.ts)\n                        \n                        \n                            vendorImports   (src/.../general.module.ts)\n                        \n                        \n                            vendorImports   (src/.../profile.module.ts)\n                        \n                        \n                            vendorImports   (src/.../settings.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/main/main.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            _exports\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [MainRootComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            declarations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [...components, ...containers, ...pages]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imports\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [CommonModule, MainRoutingModule, ...vendorImports]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            providers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [AuthGuard]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            vendorImports\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [MatBadgeModule, MatButtonModule, MatIconModule, MatListModule, MatMenuModule, MatToolbarModule]\n                        \n                    \n\n\n            \n        \n\n    src/app/core/core.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            authInterceptor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  multi: true,\n  provide: HTTP_INTERCEPTORS,\n  useClass: AuthInterceptor,\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errorsHandler\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: ErrorHandler,\n  useClass: ErrorsHandler,\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            providers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [AccountService, authInterceptor, errorsHandler, ErrorsLogger]\n                        \n                    \n\n\n            \n        \n\n    src/app/app.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            bootstrap\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [AppComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            declarations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [AppComponent]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imports\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [BrowserAnimationsModule, BrowserModule, CoreModule, HttpClientModule, LayoutModule, MainModule]\n                        \n                    \n\n\n            \n        \n\n    src/app/main/components/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    src/app/features/account/components/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [AccountLoginFormComponent, AccountRegisterFormComponent]\n                        \n                    \n\n\n            \n        \n\n    src/app/features/general/components/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    src/app/features/profile/components/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [ProfileCardComponent]\n                        \n                    \n\n\n            \n        \n\n    src/app/features/settings/components/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            components\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [SettingsAccountDataFormComponent, SettingsAccountPasswordFormComponent]\n                        \n                    \n\n\n            \n        \n\n    src/app/main/containers/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            containers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  MainScrollToTopComponent,\n  MainToolbarAvatarComponent,\n  MainToolbarMailComponent,\n  MainToolbarNotificationsComponent,\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/features/account/containers/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            containers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    src/app/features/general/containers/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            containers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n\n    src/app/features/profile/containers/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            containers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [ProfileCardContainerComponent, ProfileWallContainerComponent]\n                        \n                    \n\n\n            \n        \n\n    src/app/features/settings/containers/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            containers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [SettingsAccountContainerComponent]\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/app/features/account/account.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            declarations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [...components, ...containers, ...pages]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imports\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [AccountRoutingModule, CommonModule, FormsModule, MpgpFormControlErrorModule, ReactiveFormsModule, ...vendorImports]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            providers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [LogoutGuard, UnauthorizedGuard]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            vendorImports\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [MatButtonModule, MatCardModule, MatFormFieldModule, MatInputModule]\n                        \n                    \n\n\n            \n        \n\n    src/app/features/general/general.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            declarations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [...components, ...containers, ...pages]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imports\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [GeneralRoutingModule, ...vendorImports]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            vendorImports\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [MatCardModule]\n                        \n                    \n\n\n            \n        \n\n    src/app/features/profile/profile.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            declarations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [...components, ...containers, ...pages]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imports\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [CommonModule, ProfileRoutingModule, ...vendorImports]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            vendorImports\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [MatButtonModule, MatCardModule]\n                        \n                    \n\n\n            \n        \n\n    src/app/features/settings/settings.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            declarations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [...components, ...containers, ...pages]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imports\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [CommonModule, FormsModule, MpgpFormControlErrorModule, ReactiveFormsModule, SettingsRoutingModule, ...vendorImports]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            providers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [...services]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            vendorImports\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [MatButtonModule, MatFormFieldModule, MatInputModule, MatTabsModule]\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  apiUrl: 'http://localhost:5000/api/',\n  clientId: 'mpgpclient',\n  imageUrl: 'http://localhost:5000/images/avatars/',\n  production: true,\n  websocketPath: 'ws://localhost:5000/elite-crew',\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  apiUrl: 'http://localhost:5000/api/',\n  clientId: 'mpgpclient',\n  imageUrl: 'http://localhost:5000/images/avatars/',\n  production: false,\n  websocketPath: 'ws://localhost:5000/elite-crew',\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/main/pages/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            pages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [MainErrorComponent, MainRootComponent]\n                        \n                    \n\n\n            \n        \n\n    src/app/features/account/pages/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            pages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [AccountLoginRootComponent, AccountRegisterRootComponent]\n                        \n                    \n\n\n            \n        \n\n    src/app/features/general/pages/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            pages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [GeneralRootComponent]\n                        \n                    \n\n\n            \n        \n\n    src/app/features/profile/pages/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            pages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [ProfileRootComponent]\n                        \n                    \n\n\n            \n        \n\n    src/app/features/settings/pages/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            pages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [SettingsRootComponent]\n                        \n                    \n\n\n            \n        \n\n    src/app/features/settings/services/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            services\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [ManageService]\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
